# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 3.0.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-20 19:31-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ko\n"
"Language-Team: ko <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../project/docs/deploying/asgi.rst:2 79dbdfc2ce934f16a5afbf0023177d26
msgid "ASGI"
msgstr ""

#: ../../project/docs/deploying/asgi.rst:4 839f3095b92a4e7ea8dd785bc3f18ad2
msgid ""
"If you'd like to use an ASGI server you will need to utilise WSGI to ASGI"
" middleware. The asgiref `WsgiToAsgi <https://github.com/django/asgiref"
"#wsgi-to-asgi-adapter>`_ adapter is recommended as it integrates with the"
" event loop used for Flask's :ref:`async_await` support. You can use the "
"adapter by wrapping the Flask app,"
msgstr ""

#: ../../project/docs/deploying/asgi.rst:22 88f15ac10d554d728dc2c5a1664e5adc
msgid ""
"and then serving the ``asgi_app`` with the ASGI server, e.g. using "
"`Hypercorn <https://github.com/pgjones/hypercorn>`_,"
msgstr ""

#~ msgid ""
#~ "and then serving the ``asgi_app`` with"
#~ " the ASGI server, e.g. using "
#~ "`Hypercorn <https://gitlab.com/pgjones/hypercorn>`_,"
#~ msgstr ""

