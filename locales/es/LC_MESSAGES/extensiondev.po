# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <pedrotorcattsoto@gmail.com>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: Flask 3.0.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-20 19:31-0800\n"
"PO-Revision-Date: 2024-05-10 21:04-0400\n"
"Last-Translator: Pedro Torcatt <pedrotorcattsoto@gmail.com>\n"
"Language: es\n"
"Language-Team: ES\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../project/docs/extensiondev.rst:2 a9221fea1069457780e84d2dde7ae958
msgid "Flask Extension Development"
msgstr "Desarrollo de extensiones de Flask"

#: ../../project/docs/extensiondev.rst:6 09f91b58e0e645609fc41521c020abe7
msgid ""
"Extensions are extra packages that add functionality to a Flask "
"application. While `PyPI`_ contains many Flask extensions, you may not "
"find one that fits your need. If this is the case, you can create your "
"own, and publish it for others to use as well."
msgstr ""
"Las extensiones son paquetes adicionales que añaden funcionalidad a una "
"aplicación Flask. Aunque `PyPI`_ contiene muchas extensiones de Flask, "
"puede que no encuentres ninguna que se ajuste a tus necesidades. Si este "
"es el caso, puedes crear la tuya propia, y publicarla para que otros la "
"usen también."

#: ../../project/docs/extensiondev.rst:11 448403e2808f437faccaa6dba033504c
msgid ""
"This guide will show how to create a Flask extension, and some of the "
"common patterns and requirements involved. Since extensions can do "
"anything, this guide won't be able to cover every possibility."
msgstr ""
"Esta guía mostrará cómo crear una extensión de Flask, y algunos de los "
"patrones y requisitos comunes involucrados. Como las extensiones pueden "
"hacer cualquier cosa, esta guía no podrá cubrir todas las posibilidades."

#: ../../project/docs/extensiondev.rst:15 36073e6999b84934ae2b5c3aa9cdd586
msgid ""
"The best ways to learn about extensions are to look at how other "
"extensions you use are written, and discuss with others. Discuss your "
"design ideas with others on our `Discord Chat`_ or `GitHub Discussions`_."
msgstr ""
"La mejor manera de aprender sobre las extensiones es mirar cómo están "
"escritas otras extensiones que utilizas, y discutir con otros. Discute "
"tus ideas de diseño con otros en nuestro `Discord Chat`_ o `GitHub "
"Discussions`_."

#: ../../project/docs/extensiondev.rst:20 c9068a6060874e07a662afeff4dc6142
msgid ""
"The best extensions share common patterns, so that anyone familiar with "
"using one extension won't feel completely lost with another. This can "
"only work if collaboration happens early."
msgstr ""
"Las mejores extensiones comparten patrones comunes, de modo que quien "
"esté familiarizado con el uso de una extensión no se sienta completamente"
" perdido con otra. Esto sólo puede funcionar si la colaboración se "
"produce desde el principio."

#: ../../project/docs/extensiondev.rst:26 1e9b656cb2a147b7b8beb0ea79bb6b64
msgid "Naming"
msgstr "Nombramiento"

#: ../../project/docs/extensiondev.rst:28 d3e74d40b75a4d59a0aa79db89f433a3
msgid ""
"A Flask extension typically has ``flask`` in its name as a prefix or "
"suffix. If it wraps another library, it should include the library name "
"as well. This makes it easy to search for extensions, and makes their "
"purpose clearer."
msgstr ""
"Una extensión de Flask normalmente tiene ``flask`` en su nombre como "
"prefijo o sufijo. Si envuelve otra biblioteca, debería incluir el nombre "
"de la biblioteca también. Esto facilita la búsqueda de extensiones, y "
"hace que su propósito sea más claro."

#: ../../project/docs/extensiondev.rst:33 845384dacdad4eb7a79a62a9c2598ba7
msgid ""
"A general Python packaging recommendation is that the install name from "
"the package index and the name used in ``import`` statements should be "
"related. The import name is lowercase, with words separated by "
"underscores (``_``). The install name is either lower case or title case,"
" with words separated by dashes (``-``). If it wraps another library, "
"prefer using the same case as that library's name."
msgstr ""
"Una recomendación general de empaquetado de Python es que el nombre de "
"instalación del índice del paquete y el nombre utilizado en las "
"declaraciones ``import`` deben estar relacionados. El nombre de "
"importación está en minúsculas, con palabras separadas por guiones bajos "
"(``_``). El nombre de instalación va en minúsculas o en mayúsculas, con "
"las palabras separadas por guiones (``-``). Si envuelve a otra "
"biblioteca, es preferible utilizar el mismo caso que el nombre de esa "
"biblioteca."

#: ../../project/docs/extensiondev.rst:40 ea3d2f46dced4147b8712e7037bec32b
msgid "Here are some example install and import names:"
msgstr "Estos son algunos ejemplos de nombres de instalación e importación:"

#: ../../project/docs/extensiondev.rst:42 103599ac166040d2bbf1133fd33a91d2
msgid "``Flask-Name`` imported as ``flask_name``"
msgstr "``Flask-Name`` importado como ``flask_name``"

#: ../../project/docs/extensiondev.rst:43 6562125180704b369470a0a271807776
msgid "``flask-name-lower`` imported as ``flask_name_lower``"
msgstr "``flask-name-lower`` importado como ``flask_name_lower``"

#: ../../project/docs/extensiondev.rst:44 e5cba2392b214431b38a61cb7ce277d0
msgid "``Flask-ComboName`` imported as ``flask_comboname``"
msgstr "``Flask-ComboName`` importado como ``flask_comboname``"

#: ../../project/docs/extensiondev.rst:45 267fc8a3006b4c7a858be36584efaa50
msgid "``Name-Flask`` imported as ``name_flask``"
msgstr "``Name-Flask`` importado como ``name_flask``"

#: ../../project/docs/extensiondev.rst:49 b39a16c763fb487a8866bbe32455cb88
msgid "The Extension Class and Initialization"
msgstr "La clase de extensión y la inicialización"

#: ../../project/docs/extensiondev.rst:51 190f0b02a4474978bf7d73f5ad021a78
msgid ""
"All extensions will need some entry point that initializes the extension "
"with the application. The most common pattern is to create a class that "
"represents the extension's configuration and behavior, with an "
"``init_app`` method to apply the extension instance to the given "
"application instance."
msgstr ""
"Todas las extensiones necesitarán algún punto de entrada que inicialice "
"la extensión con la aplicación. El patrón más común es crear una clase "
"que represente la configuración y el comportamiento de la extensión, con "
"un método ``init_app`` para aplicar la instancia de la extensión a la "
"instancia de la aplicación dada."

#: ../../project/docs/extensiondev.rst:67 8eed5ec0302742f3bb2ceea8a4741e0b
msgid ""
"It is important that the app is not stored on the extension, don't do "
"``self.app = app``. The only time the extension should have direct access"
" to an app is during ``init_app``, otherwise it should use "
":data:`current_app`."
msgstr ""
"Es importante que la aplicación no se almacene en la extensión, no hagas "
"``self.app = app``. La única vez que la extensión debe tener acceso "
"directo a una aplicación es durante ``init_app``, de lo contrario debe "
"utilizar :data:`current_app``."

#: ../../project/docs/extensiondev.rst:72 95c9a65a78464ae8acfaccdd14f8c861
msgid ""
"This allows the extension to support the application factory pattern, "
"avoids circular import issues when importing the extension instance "
"elsewhere in a user's code, and makes testing with different "
"configurations easier."
msgstr ""
"Esto permite que la extensión sea compatible con el patrón de fábrica de "
"la aplicación, evita problemas de importación circular cuando se importa "
"la instancia de la extensión en otra parte del código de un usuario, y "
"facilita las pruebas con diferentes configuraciones."

#: ../../project/docs/extensiondev.rst:86 08eb91e76b2e44269a77e51cef6708be
msgid ""
"Above, the ``hello`` extension instance exists independently of the "
"application. This means that other modules in a user's project can do "
"``from project import hello`` and use the extension in blueprints before "
"the app exists."
msgstr ""
"Arriba, la instancia de la extensión ``hello`` existe independientemente "
"de la aplicación. Esto significa que otros módulos en el proyecto de un "
"usuario pueden hacer ``from project import hello`` y utilizar la "
"extensión en los blueprints antes de que la aplicación exista."

#: ../../project/docs/extensiondev.rst:91 dbb08adf173a44fe888f29a3c3c3bbe1
msgid ""
"The :attr:`Flask.extensions` dict can be used to store a reference to the"
" extension on the application, or some other state specific to the "
"application. Be aware that this is a single namespace, so use a name "
"unique to your extension, such as the extension's name without the "
"\"flask\" prefix."
msgstr ""
"El dict :attr:`Flask.extensions` puede utilizarse para almacenar una "
"referencia a la extensión en la aplicación, o algún otro estado "
"específico de la aplicación. Ten en cuenta que se trata de un espacio de "
"nombres único, así que utiliza un nombre único para tu extensión, como el"
" nombre de la extensión sin el prefijo \"flask\"."

#: ../../project/docs/extensiondev.rst:99 0804caedd7364f1f82260d5c6ce0971a
msgid "Adding Behavior"
msgstr "Añadir comportamiento"

#: ../../project/docs/extensiondev.rst:101 4b170471897445a6ba0ecc591e58fa44
msgid ""
"There are many ways that an extension can add behavior. Any setup methods"
" that are available on the :class:`Flask` object can be used during an "
"extension's ``init_app`` method."
msgstr ""
"Hay muchas maneras de que una extensión pueda añadir comportamiento. "
"Cualquier método de configuración que esté disponible en el objeto "
":class:`Flask` puede utilizarse durante el método ``init_app`` de una "
"extensión."

#: ../../project/docs/extensiondev.rst:105 aee0f2cdf03e4dd4be5e5060e46fda66
msgid ""
"A common pattern is to use :meth:`~Flask.before_request` to initialize "
"some data or a connection at the beginning of each request, then "
":meth:`~Flask.teardown_request` to clean it up at the end. This can be "
"stored on :data:`g`, discussed more below."
msgstr ""
"Un patrón común es utilizar :meth:`~Flask.before_request` para "
"inicializar algunos datos o una conexión al principio de cada petición, y"
" luego :meth:`~Flask.teardown_request` para limpiarla al final. Esto "
"puede ser almacenado en :data:`g`, discutido más adelante."

#: ../../project/docs/extensiondev.rst:110 818e4cf6b61f46e8847af77b9a167dcc
msgid ""
"A more lazy approach is to provide a method that initializes and caches "
"the data or connection. For example, a ``ext.get_db`` method could create"
" a database connection the first time it's called, so that a view that "
"doesn't use the database doesn't create a connection."
msgstr ""
"Un enfoque más perezoso es proporcionar un método que inicialice y "
"almacene en caché los datos o la conexión. Por ejemplo, un método "
"``ext.get_db`` podría crear una conexión a la base de datos la primera "
"vez que se llama, para que una vista que no utilice la base de datos no "
"cree una conexión."

#: ../../project/docs/extensiondev.rst:115 323641b5a3954b188e82377d5335598a
msgid ""
"Besides doing something before and after every view, your extension might"
" want to add some specific views as well. In this case, you could define "
"a :class:`Blueprint`, then call :meth:`~Flask.register_blueprint` during "
"``init_app`` to add the blueprint to the app."
msgstr ""
"Además de hacer algo antes y después de cada vista, tu extensión podría "
"querer añadir también algunas vistas específicas. En este caso, podrías "
"definir un :class:`Blueprint`, y luego llamar a "
":meth:`~Flask.register_blueprint` durante ``init_app`` para añadir el "
"blueprint a la aplicación."

#: ../../project/docs/extensiondev.rst:122 e7e1ba3dc35641778147bd9a15d56722
msgid "Configuration Techniques"
msgstr "Técnicas de configuración"

#: ../../project/docs/extensiondev.rst:124 af6ae16951504644bd5d4246fca7ee64
msgid ""
"There can be multiple levels and sources of configuration for an "
"extension. You should consider what parts of your extension fall into "
"each one."
msgstr ""
"Puede haber múltiples niveles y fuentes de configuración para una "
"extensión. Debes considerar qué partes de tu extensión entran en cada uno"
" de ellos."

#: ../../project/docs/extensiondev.rst:128 4c204315acf44072981fd6c8dab73fb5
msgid ""
"Configuration per application instance, through ``app.config`` values. "
"This is configuration that could reasonably change for each deployment of"
" an application. A common example is a URL to an external resource, such "
"as a database. Configuration keys should start with the extension's name "
"so that they don't interfere with other extensions."
msgstr ""
"Configuración por instancia de aplicación, a través de los valores de "
"``app.config``. Se trata de una configuración que podría cambiar "
"razonablemente en cada despliegue de una aplicación. Un ejemplo común es "
"una URL a un recurso externo, como una base de datos. Las claves de "
"configuración deben comenzar con el nombre de la extensión para que no "
"interfieran con otras extensiones."

#: ../../project/docs/extensiondev.rst:134 c3b567b8a8c644118c98451415e04953
msgid ""
"Configuration per extension instance, through ``__init__`` arguments. "
"This configuration usually affects how the extension is used, such that "
"it wouldn't make sense to change it per deployment."
msgstr ""
"Configuración por instancia de la extensión, a través de los argumentos "
"``__init__``. Esta configuración suele afectar al uso de la extensión, "
"por lo que no tendría sentido cambiarla por cada despliegue."

#: ../../project/docs/extensiondev.rst:138 92cb1f7a0f9043c79c4c156725b84fcc
msgid ""
"Configuration per extension instance, through instance attributes and "
"decorator methods. It might be more ergonomic to assign to ``ext.value``,"
" or use a ``@ext.register`` decorator to register a function, after the "
"extension instance has been created."
msgstr ""
"Configuración por instancia de extensión, a través de atributos de "
"instancia y métodos de decorador. Podría ser más ergonómico asignar a "
"``ext.value``, o utilizar un decorador ``@ext.register`` para registrar "
"una función, después de que la instancia de la extensión haya sido "
"creada."

#: ../../project/docs/extensiondev.rst:142 f6ca95864f564b418f009ce4fee6b741
msgid ""
"Global configuration through class attributes. Changing a class attribute"
" like ``Ext.connection_class`` can customize default behavior without "
"making a subclass. This could be combined per-extension configuration to "
"override defaults."
msgstr ""
"Configuración global a través de atributos de clase. Cambiando un "
"atributo de clase como ``Ext.connection_class`` se puede personalizar el "
"comportamiento por defecto sin hacer una subclase. Esto podría combinarse"
" con la configuración por extensión para anular los valores "
"predeterminados."

#: ../../project/docs/extensiondev.rst:146 23c7823537ba4ec18aad543556a79a1b
msgid ""
"Subclassing and overriding methods and attributes. Making the API of the "
"extension itself something that can be overridden provides a very "
"powerful tool for advanced customization."
msgstr ""
"Subclasificación y anulación de métodos y atributos. Hacer que la API de "
"la propia extensión sea algo que se pueda sobrescribir proporciona una "
"herramienta muy poderosa para la personalización avanzada."

#: ../../project/docs/extensiondev.rst:150 3015e21744254bc5bcf9898b291bde0e
msgid "The :class:`~flask.Flask` object itself uses all of these techniques."
msgstr "El propio objeto :class:`~flask.Flask` utiliza todas estas técnicas."

#: ../../project/docs/extensiondev.rst:152 df7e7f4eda414d37990a60dee794f755
msgid ""
"It's up to you to decide what configuration is appropriate for your "
"extension, based on what you need and what you want to support."
msgstr ""
"Depende de ti decidir qué configuración es la adecuada para tu extensión,"
" en función de lo que necesites y de lo que quieras soportar."

#: ../../project/docs/extensiondev.rst:155 d4f78a1c352d4d45858b7782c2fb608a
msgid ""
"Configuration should not be changed after the application setup phase is "
"complete and the server begins handling requests. Configuration is "
"global, any changes to it are not guaranteed to be visible to other "
"workers."
msgstr ""
"La configuración no debe ser modificada una vez que la fase de "
"configuración de la aplicación se ha completado y el servidor comienza a "
"manejar las solicitudes. La configuración es global, cualquier cambio en "
"ella no se garantiza que sea visible para otros trabajadores."

#: ../../project/docs/extensiondev.rst:162 3a3ff5199b3246368a055ef5da49fb73
msgid "Data During a Request"
msgstr "Datos durante una solicitud"

#: ../../project/docs/extensiondev.rst:164 3bda972d91f24c6faea015097d094446
msgid ""
"When writing a Flask application, the :data:`~flask.g` object is used to "
"store information during a request. For example the :doc:`tutorial "
"<tutorial/database>` stores a connection to a SQLite database as "
"``g.db``. Extensions can also use this, with some care. Since ``g`` is a "
"single global namespace, extensions must use unique names that won't "
"collide with user data. For example, use the extension name as a prefix, "
"or as a namespace."
msgstr ""
"Al escribir una aplicación Flask, el objeto :data:`~flask.g` se utiliza "
"para almacenar información durante una petición. Por ejemplo el "
":doc:`tutorial <tutorial/database>` almacena una conexión a una base de "
"datos SQLite como ``g.db``. Las extensiones también pueden usar esto, con"
" cierto cuidado. Dado que ``g`` es un único espacio de nombres global, "
"las extensiones deben utilizar nombres únicos que no colisionen con los "
"datos del usuario. Por ejemplo, utilizar el nombre de la extensión como "
"prefijo, o como espacio de nombres."

#: ../../project/docs/extensiondev.rst:182 c68b0942fddb4ad59e4af8ab4b4a409f
msgid ""
"The data in ``g`` lasts for an application context. An application "
"context is active when a request context is, or when a CLI command is "
"run. If you're storing something that should be closed, use "
":meth:`~flask.Flask.teardown_appcontext` to ensure that it gets closed "
"when the application context ends. If it should only be valid during a "
"request, or would not be used in the CLI outside a request, use "
":meth:`~flask.Flask.teardown_request`."
msgstr ""
"Los datos en ``g`` duran para un contexto de aplicación. Un contexto de "
"aplicación está activo cuando lo está un contexto de petición, o cuando "
"se ejecuta un comando CLI. Si estás almacenando algo que debería "
"cerrarse, usa :meth:`~flask.Flask.teardown_appcontext` para asegurarte de"
" que se cierra cuando el contexto de aplicación termina. Si sólo debe ser"
" válido durante una solicitud, o no se utilizará en la CLI fuera de una "
"solicitud, utilice :meth:`~flask.Flask.teardown_request`."

#: ../../project/docs/extensiondev.rst:192 2edc9d4e9b734f3897ee4a6ad0272e56
msgid "Views and Models"
msgstr "Vistas y modelos"

#: ../../project/docs/extensiondev.rst:194 3499fbd8970c4c22a2b53ce9e1600d01
msgid ""
"Your extension views might want to interact with specific models in your "
"database, or some other extension or data connected to your application. "
"For example, let's consider a ``Flask-SimpleBlog`` extension that works "
"with Flask-SQLAlchemy to provide a ``Post`` model and views to write and "
"read posts."
msgstr ""
"Las vistas de tu extensión pueden querer interactuar con modelos "
"específicos de tu base de datos, o con alguna otra extensión o datos "
"conectados a tu aplicación. Por ejemplo, consideremos una extensión "
"``Flask-SimpleBlog`` que trabaja con Flask-SQLAlchemy para proporcionar "
"un modelo ``Post`` y vistas para escribir y leer posts."

#: ../../project/docs/extensiondev.rst:200 2c85f0dd31fe4b348c25221abe58955e
msgid ""
"The ``Post`` model needs to subclass the Flask-SQLAlchemy ``db.Model`` "
"object, but that's only available once you've created an instance of that"
" extension, not when your extension is defining its views. So how can the"
" view code, defined before the model exists, access the model?"
msgstr ""
"El modelo ``Post`` necesita subclasificar el objeto ``db.Model`` de "
"Flask-SQLAlchemy, pero eso sólo está disponible una vez que has creado "
"una instancia de esa extensión, no cuando tu extensión está definiendo "
"sus vistas. Entonces, ¿cómo puede el código de la vista, definido antes "
"de que el modelo exista, acceder al modelo?"

#: ../../project/docs/extensiondev.rst:205 58dafa7720924d22bee606853b5f630e
msgid ""
"One method could be to use :doc:`views`. During ``__init__``, create the "
"model, then create the views by passing the model to the view class's "
":meth:`~views.View.as_view` method."
msgstr ""
"Un método podría ser utilizar :doc:`views`. Durante ``__init__``, crea el"
" modelo, luego crea las vistas pasando el modelo al método "
":meth:`~views.View.as_view` de la clase vista."

#: ../../project/docs/extensiondev.rst:235 f099a46f79e145658fcac45aa7683b0e
msgid ""
"Another technique could be to use an attribute on the extension, such as "
"``self.post_model`` from above. Add the extension to ``app.extensions`` "
"in ``init_app``, then access "
"``current_app.extensions[\"simple_blog\"].post_model`` from views."
msgstr ""
"Otra técnica podría ser utilizar un atributo en la extensión, como "
"``self.post_model`` de arriba. Añade la extensión a ``app.extensions`` en"
" ``init_app``, y luego accede a "
"``current_app.extensions[\"simple_blog\"].post_model`` desde views."

#: ../../project/docs/extensiondev.rst:240 8c9b2f47567a492e94bfb84ebfe3bc28
msgid ""
"You may also want to provide base classes so that users can provide their"
" own ``Post`` model that conforms to the API your extension expects. So "
"they could implement ``class Post(blog.BasePost)``, then set it as "
"``blog.post_model``."
msgstr ""
"También puede querer proporcionar clases base para que los usuarios "
"puedan proporcionar su propio modelo ``Post`` que se ajuste a la API que "
"su extensión espera. Así que podrían implementar ``class "
"Post(blog.BasePost)``, y luego establecerlo como ``blog.post_model``."

#: ../../project/docs/extensiondev.rst:245 8616a3dde4444272bea3b8324705d4d7
msgid ""
"As you can see, this can get a bit complex. Unfortunately, there's no "
"perfect solution here, only different strategies and tradeoffs depending "
"on your needs and how much customization you want to offer. Luckily, this"
" sort of resource dependency is not a common need for most extensions. "
"Remember, if you need help with design, ask on our `Discord Chat`_ or "
"`GitHub Discussions`_."
msgstr ""
"Como puedes ver, esto puede ser un poco complejo. Desafortunadamente, no "
"hay una solución perfecta aquí, sólo diferentes estrategias y "
"compensaciones dependiendo de tus necesidades y de cuánta personalización"
" quieras ofrecer. Afortunadamente, este tipo de dependencia de recursos "
"no es una necesidad común para la mayoría de las extensiones. Recuerda, "
"si necesitas ayuda con el diseño, pregunta en nuestro `Chat de Discord`_ "
"o `GitHub Discussions`_."

#: ../../project/docs/extensiondev.rst:254 18665eb6bbc44a9eaca40fdfa646ae47
msgid "Recommended Extension Guidelines"
msgstr "Directrices de extensión recomendadas"

#: ../../project/docs/extensiondev.rst:256 b3b3eea9fe9348a0b5651702c9d65113
msgid ""
"Flask previously had the concept of \"approved extensions\", where the "
"Flask maintainers evaluated the quality, support, and compatibility of "
"the extensions before listing them. While the list became too difficult "
"to maintain over time, the guidelines are still relevant to all "
"extensions maintained and developed today, as they help the Flask "
"ecosystem remain consistent and compatible."
msgstr ""
"Anteriormente, Flask tenía el concepto de \"extensiones aprobadas\", "
"donde los mantenedores de Flask evaluaban la calidad, el soporte y la "
"compatibilidad de las extensiones antes de listarlas. Aunque la lista se "
"volvió demasiado difícil de mantener con el tiempo, las directrices "
"siguen siendo relevantes para todas las extensiones mantenidas y "
"desarrolladas hoy en día, ya que ayudan a que el ecosistema de Flask siga"
" siendo consistente y compatible."

#: ../../project/docs/extensiondev.rst:263 852ea4031bc04b598bf13e5835498f96
msgid ""
"An extension requires a maintainer. In the event an extension author "
"would like to move beyond the project, the project should find a new "
"maintainer and transfer access to the repository, documentation, PyPI, "
"and any other services. The `Pallets-Eco`_ organization on GitHub allows "
"for community maintenance with oversight from the Pallets maintainers."
msgstr ""
"Una extensión requiere un mantenedor. En el caso de que el autor de una "
"extensión quiera dejar el proyecto, el proyecto debe encontrar un nuevo "
"mantenedor y transferir el acceso al repositorio, la documentación, PyPI "
"y cualquier otro servicio. La organización `Pallets-Eco`_ en GitHub "
"permite el mantenimiento comunitario con la supervisión de los "
"mantenedores de Pallets."

#: ../../project/docs/extensiondev.rst:269 141af81f7ca94b44b49c8c49f53fe409
msgid ""
"The naming scheme is *Flask-ExtensionName* or *ExtensionName-Flask*. It "
"must provide exactly one package or module named "
"``flask_extension_name``."
msgstr ""
"El esquema de nomenclatura es *Flask-ExtensionName* o *ExtensionName-"
"Flask*. Debe proporcionar exactamente un paquete o módulo llamado "
"``nombre_de_la_extensión``."

#: ../../project/docs/extensiondev.rst:272 6d033b999f544fbfa4d9f59b7ca092ea
msgid ""
"The extension must use an open source license. The Python web ecosystem "
"tends to prefer BSD or MIT. It must be open source and publicly "
"available."
msgstr ""
"La extensión debe utilizar una licencia de código abierto. El ecosistema "
"web de Python tiende a preferir BSD o MIT. Debe ser de código abierto y "
"estar disponible públicamente."

#: ../../project/docs/extensiondev.rst:275 492d34c4aea44dda8dc98de937098fd6
msgid "The extension's API must have the following characteristics:"
msgstr "La API de la extensión debe tener las siguientes características:"

#: ../../project/docs/extensiondev.rst:277 59a66948efc24ac8b58cf6a25dd55cd1
msgid ""
"It must support multiple applications running in the same Python process."
" Use ``current_app`` instead of ``self.app``, store configuration and "
"state per application instance."
msgstr ""
"Debe soportar múltiples aplicaciones que se ejecuten en el mismo proceso "
"de Python. Usar ``current_app`` en lugar de ``self.app``, almacenar la "
"configuración y el estado por instancia de aplicación."

#: ../../project/docs/extensiondev.rst:280 1c31d18e9509477284aa20b2f5c6dabe
msgid ""
"It must be possible to use the factory pattern for creating applications."
" Use the ``ext.init_app()`` pattern."
msgstr ""
"Debe ser posible utilizar el patrón de fábrica para crear aplicaciones. "
"Utiliza el patrón ``ext.init_app()``."

#: ../../project/docs/extensiondev.rst:283 dbf068c21ef24de2b0fbaf501f51d5a2
msgid ""
"From a clone of the repository, an extension with its dependencies must "
"be installable in editable mode with ``pip install -e .``."
msgstr ""
"Desde un clon del repositorio, una extensión con sus dependencias debe "
"ser instalable en modo editable con ``pip install -e .``."

#: ../../project/docs/extensiondev.rst:285 a24d6b67b6354949b29437cc0f311da0
msgid ""
"It must ship tests that can be invoked with a common tool like ``tox -e "
"py``, ``nox -s test`` or ``pytest``. If not using ``tox``, the test "
"dependencies should be specified in a requirements file. The tests must "
"be part of the sdist distribution."
msgstr ""
"Debe enviar pruebas que puedan ser invocadas con una herramienta común "
"como ``tox -e py``, ``nox -s test`` o ``pytest``. Si no se utiliza "
"``tox``, las dependencias de las pruebas deben especificarse en un "
"archivo de requisitos. Las pruebas deben formar parte de la distribución "
"de sdist."

#: ../../project/docs/extensiondev.rst:289 d965dc15c7b84d2c8a08d093476f7913
msgid ""
"A link to the documentation or project website must be in the PyPI "
"metadata or the readme. The documentation should use the Flask theme from"
" the `Official Pallets Themes`_."
msgstr ""
"Debe haber un enlace a la documentación o al sitio web del proyecto en "
"los metadatos de PyPI o en el readme. La documentación debe utilizar el "
"tema de Flask de los `Temas Oficiales de Pallets`_."

#: ../../project/docs/extensiondev.rst:292 5f8ed71c43fe432d98560a74f130fa67
msgid ""
"The extension's dependencies should not use upper bounds or assume any "
"particular version scheme, but should use lower bounds to indicate "
"minimum compatibility support. For example, ``sqlalchemy>=1.4``."
msgstr ""
"Las dependencias de la extensión no deben usar límites superiores ni "
"asumir ningún esquema de versión en particular, sino que deben usar "
"límites inferiores para indicar el soporte mínimo de compatibilidad. Por "
"ejemplo, ``sqlalchemy>=1.4``."

#: ../../project/docs/extensiondev.rst:296 cfd371f6e86842b48bb04529001b12fa
#, fuzzy
msgid ""
"Indicate the versions of Python supported using "
"``python_requires=\">=version\"``. Flask itself supports Python >=3.9 as "
"of October 2024, and this will update over time."
msgstr ""
"Indica las versiones de Python soportadas usando "
"``python_requires=\">=version\"``. Flask soporta Python >=3.8 desde abril"
" de 2023, pero esto se actualizará con el tiempo."

