# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 3.1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-20 19:31-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../project/docs/deploying/gunicorn.rst:2
#: f91403a8d1304d1ebb3c738f5fe29e38
msgid "Gunicorn"
msgstr ""

#: ../../project/docs/deploying/gunicorn.rst:4
#: ec0194ff703c4daaa2d4ac6652951968
msgid "`Gunicorn`_ is a pure Python WSGI server with simple configuration and multiple worker implementations for performance tuning."
msgstr ""

#: ../../project/docs/deploying/gunicorn.rst:7
#: 99ba272c718046d5b1284c5c421ad16f
msgid "It tends to integrate easily with hosting platforms."
msgstr ""

#: ../../project/docs/deploying/gunicorn.rst:8
#: 4760fcd10cfe4a5f83b6c10dbf30656c
msgid "It does not support Windows (but does run on WSL)."
msgstr ""

#: ../../project/docs/deploying/gunicorn.rst:9
#: ecfa6d92bc9847f78c0308692944cda4
msgid "It is easy to install as it does not require additional dependencies or compilation."
msgstr ""

#: ../../project/docs/deploying/gunicorn.rst:11
#: f804f5c687364af59a201c724cad505c
msgid "It has built-in async worker support using gevent or eventlet."
msgstr ""

#: ../../project/docs/deploying/gunicorn.rst:13
#: 7fed4d4c9c2f4a11b388c0992c783fac
msgid "This page outlines the basics of running Gunicorn. Be sure to read its `documentation`_ and use ``gunicorn --help`` to understand what features are available."
msgstr ""

#: ../../project/docs/deploying/gunicorn.rst:22
#: 0fcb800a0d634a2f89829caff15dec3a
msgid "Installing"
msgstr ""

#: ../../project/docs/deploying/gunicorn.rst:24
#: b7c6ff6c18a84732bba645b1c3c6446b
msgid "Gunicorn is easy to install, as it does not require external dependencies or compilation. It runs on Windows only under WSL."
msgstr ""

#: ../../project/docs/deploying/gunicorn.rst:27
#: ec4bed65ae2247bba9a1dc92d7667be8
msgid "Create a virtualenv, install your application, then install ``gunicorn``."
msgstr ""

#: ../../project/docs/deploying/gunicorn.rst:40
#: 378afde2c9aa42289554d9242130d3b4
msgid "Running"
msgstr ""

#: ../../project/docs/deploying/gunicorn.rst:42
#: 6f030826e43e4414b7d32faf8c3d587f
msgid "The only required argument to Gunicorn tells it how to load your Flask application. The syntax is ``{module_import}:{app_variable}``. ``module_import`` is the dotted import name to the module with your application. ``app_variable`` is the variable with the application. It can also be a function call (with any arguments) if you're using the app factory pattern."
msgstr ""

#: ../../project/docs/deploying/gunicorn.rst:65
#: 567f42aeb7254e1b8090d2ab6e3834d4
msgid "The ``-w`` option specifies the number of processes to run; a starting value could be ``CPU * 2``. The default is only 1 worker, which is probably not what you want for the default worker type."
msgstr ""

#: ../../project/docs/deploying/gunicorn.rst:69
#: 9a2a7fbee2d04ec6a646878f8ac030cd
msgid "Logs for each request aren't shown by default, only worker info and errors are shown. To show access logs on stdout, use the ``--access-logfile=-`` option."
msgstr ""

#: ../../project/docs/deploying/gunicorn.rst:75
#: 081a5aed0e4543959f91b8e39bdea330
msgid "Binding Externally"
msgstr ""

#: ../../project/docs/deploying/gunicorn.rst:77
#: 8a63da8147284a2c88caf720c9c2d1b7
msgid "Gunicorn should not be run as root because it would cause your application code to run as root, which is not secure. However, this means it will not be possible to bind to port 80 or 443. Instead, a reverse proxy such as :doc:`nginx` or :doc:`apache-httpd` should be used in front of Gunicorn."
msgstr ""

#: ../../project/docs/deploying/gunicorn.rst:83
#: 8692be8b62fb4fdaaadf7823da001107
msgid "You can bind to all external IPs on a non-privileged port using the ``-b 0.0.0.0`` option. Don't do this when using a reverse proxy setup, otherwise it will be possible to bypass the proxy."
msgstr ""

#: ../../project/docs/deploying/gunicorn.rst:92
#: 5e4eb3866e724558946e0638b5c83490
msgid "``0.0.0.0`` is not a valid address to navigate to, you'd use a specific IP address in your browser."
msgstr ""

#: ../../project/docs/deploying/gunicorn.rst:97
#: 30db3a9e96064b6cb36dae0b06d8fdf2
msgid "Async with gevent or eventlet"
msgstr ""

#: ../../project/docs/deploying/gunicorn.rst:99
#: 36cde87f56b44fc4b4f86e41741f3de5
msgid "The default sync worker is appropriate for many use cases. If you need asynchronous support, Gunicorn provides workers using either `gevent`_ or `eventlet`_. This is not the same as Python's ``async/await``, or the ASGI server spec. You must actually use gevent/eventlet in your own code to see any benefit to using the workers."
msgstr ""

#: ../../project/docs/deploying/gunicorn.rst:105
#: a15f2d5b611b4272ab56e4da537886e3
msgid "When using either gevent or eventlet, greenlet>=1.0 is required, otherwise context locals such as ``request`` will not work as expected. When using PyPy, PyPy>=7.3.7 is required."
msgstr ""

#: ../../project/docs/deploying/gunicorn.rst:109
#: 8d13c243471947acb8f5d7f8ea6904a8
msgid "To use gevent:"
msgstr ""

#: ../../project/docs/deploying/gunicorn.rst:119
#: 91db759c0ee74c129fa7dd8516cd7bd9
msgid "To use eventlet:"
msgstr ""
