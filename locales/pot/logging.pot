# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 3.1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-20 19:31-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../project/docs/logging.rst:2
#: d7b36a0d5f104bfeab7d15d7bce38b01
msgid "Logging"
msgstr ""

#: ../../project/docs/logging.rst:4
#: ace284b1103547b892abbf0299a0bba1
msgid "Flask uses standard Python :mod:`logging`. Messages about your Flask application are logged with :meth:`app.logger <flask.Flask.logger>`, which takes the same name as :attr:`app.name <flask.Flask.name>`. This logger can also be used to log your own messages."
msgstr ""

#: ../../project/docs/logging.rst:23
#: 0e38093e34604f65ba560c5b8edd1a04
msgid "If you don't configure logging, Python's default log level is usually 'warning'. Nothing below the configured level will be visible."
msgstr ""

#: ../../project/docs/logging.rst:28
#: ea350757541749d9ae5e02189d17d15b
msgid "Basic Configuration"
msgstr ""

#: ../../project/docs/logging.rst:30
#: 05733081b8c6417392986627bcca306b
msgid "When you want to configure logging for your project, you should do it as soon as possible when the program starts. If :meth:`app.logger <flask.Flask.logger>` is accessed before logging is configured, it will add a default handler. If possible, configure logging before creating the application object."
msgstr ""

#: ../../project/docs/logging.rst:35
#: ef61eba522a34ad5b04dce2a2d8d6cd4
msgid "This example uses :func:`~logging.config.dictConfig` to create a logging configuration similar to Flask's default, except for all logs::"
msgstr ""

#: ../../project/docs/logging.rst:60
#: 0de8303b0ad64637978dd2a7f1a70bb2
msgid "Default Configuration"
msgstr ""

#: ../../project/docs/logging.rst:62
#: a54213afd4d94418a56bbec4b4c891c5
msgid "If you do not configure logging yourself, Flask will add a :class:`~logging.StreamHandler` to :meth:`app.logger <flask.Flask.logger>` automatically. During requests, it will write to the stream specified by the WSGI server in ``environ['wsgi.errors']`` (which is usually :data:`sys.stderr`). Outside a request, it will log to :data:`sys.stderr`."
msgstr ""

#: ../../project/docs/logging.rst:70
#: 31ca53acbf45443b80d34ee1e116fee5
msgid "Removing the Default Handler"
msgstr ""

#: ../../project/docs/logging.rst:72
#: 3f6815a495d24734a64afe1e21904215
msgid "If you configured logging after accessing :meth:`app.logger <flask.Flask.logger>`, and need to remove the default handler, you can import and remove it::"
msgstr ""

#: ../../project/docs/logging.rst:82
#: d46bc5d8a25143279990a65d1b13f153
msgid "Email Errors to Admins"
msgstr ""

#: ../../project/docs/logging.rst:84
#: c5d6f3739de6475aad74fedc49fbfb4b
msgid "When running the application on a remote server for production, you probably won't be looking at the log messages very often. The WSGI server will probably send log messages to a file, and you'll only check that file if a user tells you something went wrong."
msgstr ""

#: ../../project/docs/logging.rst:89
#: 5871ac28ddfd46dda06acd637d311f74
msgid "To be proactive about discovering and fixing bugs, you can configure a :class:`logging.handlers.SMTPHandler` to send an email when errors and higher are logged. ::"
msgstr ""

#: ../../project/docs/logging.rst:110
#: 0259e0f311b24e41ae8dbd46e65cdf4a
msgid "This requires that you have an SMTP server set up on the same server. See the Python docs for more information about configuring the handler."
msgstr ""

#: ../../project/docs/logging.rst:115
#: 0900aaa0771d4184a75c91a042920358
msgid "Injecting Request Information"
msgstr ""

#: ../../project/docs/logging.rst:117
#: a515bb9b64ac427988fe103f78f7d989
msgid "Seeing more information about the request, such as the IP address, may help debugging some errors. You can subclass :class:`logging.Formatter` to inject your own fields that can be used in messages. You can change the formatter for Flask's default handler, the mail handler defined above, or any other handler. ::"
msgstr ""

#: ../../project/docs/logging.rst:146
#: eff1ddf852004a359b9b52c53e7a64f7
msgid "Other Libraries"
msgstr ""

#: ../../project/docs/logging.rst:148
#: db7351af808e4a49bc41c66ccc231c52
msgid "Other libraries may use logging extensively, and you want to see relevant messages from those logs too. The simplest way to do this is to add handlers to the root logger instead of only the app logger. ::"
msgstr ""

#: ../../project/docs/logging.rst:158
#: 70972a9b7c7c4b44bc628cda4415b332
msgid "Depending on your project, it may be more useful to configure each logger you care about separately, instead of configuring only the root logger. ::"
msgstr ""

#: ../../project/docs/logging.rst:171
#: 4bc05b4f595a44899698b223a03fe389
msgid "Werkzeug"
msgstr ""

#: ../../project/docs/logging.rst:173
#: 9f8abdd3e07e474492bbcbf8956b1c4a
msgid "Werkzeug logs basic request/response information to the ``'werkzeug'`` logger. If the root logger has no handlers configured, Werkzeug adds a :class:`~logging.StreamHandler` to its logger."
msgstr ""

#: ../../project/docs/logging.rst:179
#: 4a429e82e2df43729ad5b913e747b18c
msgid "Flask Extensions"
msgstr ""

#: ../../project/docs/logging.rst:181
#: 7bf80ca44f97408d80d87526768efc23
msgid "Depending on the situation, an extension may choose to log to :meth:`app.logger <flask.Flask.logger>` or its own named logger. Consult each extension's documentation for details."
msgstr ""
