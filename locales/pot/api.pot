# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 3.1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-20 19:31-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../project/docs/api.rst:2
#: 84591d17c43147579d5eb589f573be7b
msgid "API"
msgstr ""

#: ../../project/docs/api.rst:6
#: 012de3a87b8242bfb8c79703927d41b5
msgid "This part of the documentation covers all the interfaces of Flask. For parts where Flask depends on external libraries, we document the most important right here and provide links to the canonical documentation."
msgstr ""

#: ../../project/docs/api.rst:12
#: 40a4a4243efc4f9696be423286c7c86d
msgid "Application Object"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:1
#: 9adb63f365864c068340387b49815eb3
msgid "The flask object implements a WSGI application and acts as the central object.  It is passed the name of the module or package of the application.  Once it is created it will act as a central registry for the view functions, the URL rules, template configuration and much more."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:6
#: 12d83766a0a3478f8e1d4ff8256584a2
msgid "The name of the package is used to resolve resources from inside the package or the folder the module is contained in depending on if the package parameter resolves to an actual python package (a folder with an :file:`__init__.py` file inside) or a standard module (just a ``.py`` file)."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:11
#: b9f7ce5d3ac249d88e4497b62b85f80c
msgid "For more information about resource loading, see :func:`open_resource`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:13
#: 936f015c8b7d4e2a870ce58b218924c6
msgid "Usually you create a :class:`Flask` instance in your main module or in the :file:`__init__.py` file of your package like this::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:19
#: ed04515766d74e19a9c3b82e04b4a222
msgid "About the First Parameter"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:21
#: cde1c7e8a694474d9c7b591e2ba91c41
msgid "The idea of the first parameter is to give Flask an idea of what belongs to your application.  This name is used to find resources on the filesystem, can be used by extensions to improve debugging information and a lot more."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:26
#: b21a95539ae54abb844747ddc3529aaf
msgid "So it's important what you provide there.  If you are using a single module, `__name__` is always the correct value.  If you however are using a package, it's usually recommended to hardcode the name of your package there."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:31
#: ce720efee6894fbf9fbe1dc74036c1fb
msgid "For example if your application is defined in :file:`yourapplication/app.py` you should create it with one of the two versions below::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:37
#: 9b63e9682bc744b48d477b88195faeb8
msgid "Why is that?  The application will work even with `__name__`, thanks to how resources are looked up.  However it will make debugging more painful.  Certain extensions can make assumptions based on the import name of your application.  For example the Flask-SQLAlchemy extension will look for the code in your application that triggered an SQL query in debug mode.  If the import name is not properly set up, that debugging information is lost.  (For example it would only pick up SQL queries in `yourapplication.app` and not `yourapplication.views.frontend`)"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:58
#: bb788d742e684d71af2766657529365e
msgid "The ``host_matching`` and ``static_host`` parameters were added."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:61
#: c302dfae6c264a4d89022720784c9bbe
msgid "The ``subdomain_matching`` parameter was added. Subdomain matching needs to be enabled manually now. Setting :data:`SERVER_NAME` does not implicitly enable it."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:55
#: a7199deb9d3f4ed6a36d61ec06896a80
msgid "The `root_path` parameter was added."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:51
#: 536ba779b701434f9e6ea70f4305383a
msgid "The `instance_path` and `instance_relative_config` parameters were added."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:47
#: 887df21910044de394102b2eb1f5dc9f
msgid "The `static_url_path`, `static_folder`, and `template_folder` parameters were added."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.after_request:0
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.before_request:0
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.context_processor:0
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.teardown_request:0
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.url_defaults:0
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.url_value_preprocessor:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.add_url_rule:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.after_app_request:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.app_context_processor:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.app_errorhandler:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.app_url_defaults:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.app_url_value_preprocessor:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.before_app_request:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.make_setup_state:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.record:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.record_once:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.teardown_app_request:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.after_request:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.before_request:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.context_processor:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.teardown_request:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.url_defaults:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.url_value_preprocessor:0
#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.AppGroup.command:0
#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.AppGroup.group:0
#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup.get_command:0
#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup.list_commands:0
#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup.parse_args:0
#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.AppContext.pop:0
#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider._default:0
#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag:0
#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.JSONTag.check:0
#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.JSONTag.tag:0
#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.JSONTag.to_json:0
#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.JSONTag.to_python:0
#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer.dumps:0
#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer.loads:0
#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer.tag:0
#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer.untag:0
#: ../../.venv/lib/python3.13/site-packages/flask/sansio/blueprints.py:docstring of flask.sansio.blueprints.BlueprintSetupState.add_url_rule:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.NullSession._fail:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SecureCookieSession.get:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SecureCookieSession.setdefault:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SecureCookieSessionInterface.open_session:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SecureCookieSessionInterface.save_session:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.get_cookie_httponly:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.get_cookie_name:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.get_cookie_path:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.get_cookie_samesite:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.get_cookie_secure:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.get_expiration_time:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.is_null_session:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.make_null_session:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.open_session:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.save_session:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions._lazy_sha1:0
#: ../../.venv/lib/python3.13/site-packages/flask/testing.py:docstring of flask.testing.FlaskClient.session_transaction:0
#: ../../.venv/lib/python3.13/site-packages/flask/views.py:docstring of flask.views.MethodView.dispatch_request:0
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.set_etag:0
#: ../../project/docs/api.rst:0
#: ../../docstring of flask.cli.run_command:0
#: ../../docstring of flask.cli.shell_command:0
#: 097d96746c384eeca53243f5d9545a07
#: 4c36993ba6aa466f8d963dc7ff609592
#: 899ba3b46a714e98859ee32bb24a0549
#: 657d259f70aa46299ca82c167dd85abc
#: ae3640fe05854300bf15c3753f50df99
#: 4409e88a30c648f5ae6c454fdf83e24e
#: c635c6a5b1904ee88c5de02881721ab8
#: a60f993304c5465eb9ffde67c4c90d2c
#: cf36d7ffc09d42b1b26376eca5c85b1a
#: 6c96287a89b045a4826762f560544fbb
#: fe35cf6dbe234d7aa518093ceabb2a78
#: 3ff16481123245f988836bf44bd5cc78
#: f86474e7f4da4871b90e25d51c95140d
#: fb018c850bdb4b7795e33333be5fecbc
#: deb22a8567f542a69bed15529460fd2c
#: cf548b4167954cd7a9b738f0faa59f29
#: 48c501026445473a82b481ec03ef1dfd
#: 9ffa947c7b224b49993ac828225f84df
#: f756b9b11b2e4b48adde1d922ca615d4
#: b0177a1370074335ac26cb9c38d90efe
#: b8c974e9000b45a8bb0ee757694eb879
#: 8a336f2b59ea4f1789441ad638fa37fa
#: ccef42bf700a49d985c882699a597fa4
#: 2c0193d8d62f448dac655af335f97b26
#: 9a2c63e3dc354881ba08f1fc85f9ce9c
#: 16c20e8ed9924c0fab139fc292be8f7a
#: 7f56f097d1294ded834da3acb437b613
#: 2c2c8762672e49a587e030267d3b4bd4
#: 0e9408f79fdd42efbf910726a4d9cdec
#: f83e8c31a87844898c64cc77a01c3e1f
#: 786f65c8df0c459587c2d9b30facf0f8
#: c18dba3867ba46c3b24abfd04816f30d
#: 922f6afc47594729993db3d4c1ea34ce
#: 40f09084f34a4b9c8e4d333cbb6d7f9d
#: 3a47b3c2e66a41b29dfd0cedfb0895e6
#: 0b105cbd515e40419217f34c6a073e60
#: 8e7bf9df19f14b30905e346377249986
#: ca56020beb9a4ac288dd1f778473190e
#: 6af8b82b48e44797adb9fb3b6765234e
#: 7ea5536605474bfc8fb2731ea06d71e3
#: b26ab8f316794a55a66037f33fc6eaff
#: a56ad69c0f92422f993b9fc9e2549708
#: abc01d101a524f4b87db2519b2f487c5
#: 7d01ffbc7835421cb72a1bc2a1687910
#: 455b364babc845ada5ba655d53fb4e1d
#: 2c87272122d44cd6b6c69988ba5e6053
#: effc6fa896de4e44bb7da34885d14eff
#: 9a3d1e2dd0cc47348e822c8bbdeb72e2
#: 5a961c038de74cd4a4db75687c0fc714
#: 6f88721a186d411f83d21fdca6be511b
#: b8526cb5c94a4c97916d2d835ffa27e7
#: a89919e8be0f4e3984788d73eb4a75e3
#: c8b0b11ad29b49c191151fc966c86822
#: 2a1846a737b2449eb98f915f828fc38d
#: 828707fe27604687920d63bfee627aaf
#: 835818a80fc3441398a4d5773e0b7a8b
#: 6efb1dcb48204369a8e70cf8b64aee4a
#: 40f5c3a856da48339574dba82be3cc26
#: e6251698bf8b40729c0ceb4e09f529a7
#: 82f3f450ebf54388a6f9e1bebf3930c5
#: cf4a880d31f647179e453ed679afa093
#: d117516a61744224bb79aee273ff721a
#: 99aa3c4d9b684b45a93006b346b7b4fa
#: 238e7951831948d1bd1644a159d62a7a
#: b2cab93575ae4624ba4dce6cc2e5d593
#: f167ff8c900346c0b0a20a8f9af5a0ce
#: fb5ffc34c1da41f694d29bc9fdfb301a
#: aded41bc474b4e6cb101397bff69bf1c
#: e0102997c9fc4a14b68443b133c99186
#: e1ecc8df843441598f2066f9e7615c3d
#: 8fcb326f225e4a1298a18d9351bad508
#: ef231da74a284b04b79d3149ce564352
#: 18cf6ae8f0a948138c961752788bc7e7
#: 60b95d0dec704d4c808cc74321898a68
#: 0ea32817fb1b4af49a1e9de9b56cf1f7
#: 6922d5807b5847b5ae5e14ab3eccaa66
#: 1d637888cd9d4ba29792e20d355ac44c
#: 47a7f3ba8a25479db08ca35170b73a2e
#: ded495d6c12e425381b4cf76e2f2ca33
#: 054c2a9fa7034b6cb520b0ee35b7d1f8
#: 3f9a5e9ac96844e38e79d47b9202664c
#: 14d533ea6d754ead8d924ce39d401801
#: 55860595c43f41419068893e35b88bb9
#: b6faf2f1d1b04c1f99f2085958fbd3b9
#: e29d71583aa044da9bd76303ce8788b3
#: 66f317e3712243b8aa80b4d34e8ff1c6
#: d162c7568edc4388a9d1da66cb85d4dd
#: 1c02c2de6ec9413b8af1c3abd39b8340
#: 6843a0d7e75e49099704bdb04d32b62a
#: 2c214df64fca4dd8b5c192049618f49d
#: 3c232f1550e7465f94278265486a48a1
#: 6b2047c27b9e47daa3f837aa302d4e30
#: 0728e402509a488691c856fafba414d7
#: 1f345f5ca772440d88b5370b0b83bce1
#: a1ea4ca61dfc425ab3d449c3cf632bfa
#: 72097a416f444c7e80cd83f95bfc494f
#: 09ab74b941c64bd29da77306fe9197ac
#: 1990ecfca68e4582ba6d5738383def55
#: 6bf1a2639a144694a96c13bc33811686
#: d9f0a45e63874af7b1939a14db16fa5b
#: fbc050488c6d43ef90f94935c914eb94
#: 900173ff97b144148b0b7f35aa62cd6a
#: d0ec658a2fa24a1b889c90daf41cc305
#: 2dba0718df894350b6d78b56135b7a15
#: 171bca932d37417e9f9efb2d92ae3ee9
#: 8af836cb78a640d9a18a88a7340e0f2c
#: d2ab84fb715549508ade60a1b89b66d8
#: 33f443c01ba04bf5928d22faeb470e19
#: 322cb958e8034e0586d2c8f9aa586d06
#: 5766097abb2f4018947e5e996b3f5c59
#: af89b1eca1e548eeb9775d8d592c5c1b
#: 4318172ce94b4b7a87052512fba07c40
#: 8a734a844dc24e59b59ddd0947791130
#: 3d17dc63713e47dbaf9bb227cf0e6324
#: b337d98bb0a2436ea227bd0e5ca98c29
#: 52f00e3da3d54959965d6104063e7aba
#: dcd738e615f64560b173949256ca9603
#: 55c7ba77db6b4f1f95ce5e8505d5c669
#: 52639575b0b54f63b0a1efb34348cb65
#: 860c72566d5f43138053e4e8512777d6
#: ff744df6af914ccb9ccc21f95c2b2c36
#: 8953cc9df03740b183cc2d55cfc93792
#: a0706f1981d34be4a075a02fd51477dd
#: 7ef34c16ccd64e4a81906edc39e8e97b
#: 0b7a4210290243a8bf921533e614e6b4
#: 9004f14a3f594505bb5bf9417f1a4c3c
#: bd3e22dafad44f6384c68b2a3f0a3910
#: ff15a5af4eeb4e7893cb6b4da6e8a967
#: b66aa790a28b4a069f566d638abeb97b
#: abd9893d62384454adbeb8aa1cd7fcb2
#: a8633ed7a54747a9b261b6a19b6794a9
#: 207519ea93ae4aeca7d1b5527a2ed528
#: d2b4cead30a9475d950fa7e7fa6daa23
#: 755d99df112843e995c903cbae23d82d
#: 13d7c50c1a544d3dbbc5aa2e2300177b
#: 944307f6c6804a4db59e42565dce3b3e
#: 50a2a2aa3c864587be4e59ef8dde9c00
#: 860da33335f84dc5addc9b26b2641b8c
#: 3b18021ebd3d4d11ba119db705d16c72
#: eff36254edf64964bf9d3448030dc673
#: 2513e3ee7d2a48c993a2a8754b4e2291
#: 5d82d86a490a4d3899effd948f5641d8
#: bf6f7915e7c74093a1823ab3ce679a76
#: b3c60d5c60d044d697866a6007851cce
#: 23cab5d9a5fe4323a62fdf177a2a0635
#: 78e1bbdf3084459bb822152ac50e18af
#: 6e8f2b66df5c4c0b924d15bc081f0824
#: 8153d1e0386b4ca3b15e3ecc6fc309e4
#: d10a97c029ad4c5e9e6076e52a2526fb
#: 2ff8464548f74050a36aae1dc74cbbb8
#: e446b0954b1c4844b956077c341da09c
#: 5a7755b562754aef9920f85e43e49d09
#: 22fb84bcdeba473e838b34e9327e36ec
#: c98aa1db55134dcba07cdde3d131d0aa
#: 4bc37c772831494a9eaa4483266ef4dc
#: 9f21cee5bcc7472497e32ebdaf0cc2d7
#: 71063db27e394720bde2a024ec1d9805
#: 0cb0ed5e6e4248e6a906b3eccff11a34
#: 283fa2365f2242a3b53b2c4f3a6887d3
#: d683955b7328459d8d93cfc307be35f3
#: 012676e99a5e4c3aa924bdd336b56901
#: 6aaabb0b9b314f159a6b3d5f10925023
#: 00d8d7c6e533428d9f194cff60143a3e
#: f2a5ac70a57b494fa80eaecdc18e1d83
#: f1c44adeb578445980f4b73cd307a994
#: b1ffc959c9014eb1b135efbe238bbb72
#: e6de2f7fc9d74af09a8f2b16a50019bb
#: 962e81ccbbf34eaeab0e4bbf449586f7
#: 589e001850d747d48253234ff5e412d6
#: a20224d0d6bc44fb9ea39c73314213a4
#: 63b17818976b425496649f6f105effc7
#: 2cac881227fb40feaee10bcfca27e5f3
#: 4b6ca48efcde43588a5b2d8e3327746e
#: 5a88df9680b44fb0a401ea716a2dd9de
#: 56fbf26bd69c4f6f99222bbd04ed8452
#: 3f837a7e86c04248b735e1dffd606ea7
#: 2d20331918d24b929b91ab0982b2935a
#: 8b0702f80f03499ba1e8e14f7158cd98
#: ffdc2848cb7b42dd963d6dae4feb8fd8
#: 185166df7a3b40dea060bfcc4c9731ca
#: 5324354b54f647878ca2e479a67415c6
#: 1a8bf795e44f4a26949c06f4b102d7eb
#: 6c8540881b3c48c986fd0f6000486f93
#: f32ec9e24a424f399481172c7892b71d
#: 36c72a6e11604fddb4df7fa91d9db30c
#: 68d390b5c7ea4f5ebdcc3edbca3ee07b
#: 6f345a4225f54855a6886f2192202644
#: 7f721d78d42b49e9970bb85393179b18
#: ebe0ad91f1f44221bd9e6a3e188fbe3d
#: 8a7054b4221944f5a9873fefb0a815dd
#: a3fd38e8f6794df18c3d90ade51ff597
#: 2be71d39414f4b6e8f9b4d7f3390b278
#: b74ba1f32dab4f9aa18d38442a3813f8
#: 1e09c45f6a2c45b195ee72f78b331091
#: 9ab05c27e147405daa23d79cbda2d70a
#: d21c25d1d1bc48d89cafea9d774dcc17
#: c9297613d7a048aba6557a8fa981d223
#: 040d092bd78a49fcae1ae2946735b809
#: 69ffb1a4d9894d76b1204a09cf35e568
#: b20e47865aeb4249b7b88177e6facbbd
#: dc6da7579dd14cfaa69059867a2cfd05
#: af37aa59939648b6922b07e10fdbe4bc
#: 8d2db72949df4ed4ac7201a9108a78c9
#: a6ae5da3e5f54ebfb94ece8f29fa71f8
#: fb17e314b00b41c99e4f7eaf2d50194c
#: 6bd338c2a7654d86bde0f4aa78e7709d
#: 6f5ceedaee394b6c8f25b653c7ef4f8d
#: 7f1c19df50a34c458853a72e67c07033
#: a03d5a92d64448f0b63c43d5d3ee21d5
#: 27e8dbd1376a4d2d9a2773313ab90c8c
#: cdb929d1883e4c26a8bcb148df6846fa
#: 24742ca6b5c1402d8aa622e0f2c2aee8
#: a45dafe14ae041ba8f53f9aac5841834
#: edfa9c8d67a04e23a323ed11342747a3
#: a2ca901bcd704e7d8fb92563f5a814cc
#: ae111974b08e4a799fb585adcd8576b5
#: f724341482774075adcc0d866aec8238
#: 235ef532c9e0467d864bfd4fcd84a9cd
#: 160c298afdc4448eb5045d400cd0b869
#: 96a551fdadb3423f9b743dd6b72fda5d
msgid "Parameters"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:66
#: fa96b03fdf5d460e9250888721aa2629
msgid "the name of the application package"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:67
#: 7eca34b86c9a46b28999c88321a0451f
msgid "can be used to specify a different path for the static files on the web.  Defaults to the name of the `static_folder` folder."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:70
#: 7c92665e2c7c4b47abb64caec7aec676
msgid "The folder with static files that is served at ``static_url_path``. Relative to the application ``root_path`` or an absolute path. Defaults to ``'static'``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:73
#: b6035cd6ebd84157a2f7e238f0d1d6e2
msgid "the host to use when adding the static route. Defaults to None. Required when using ``host_matching=True`` with a ``static_folder`` configured."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:76
#: b6fd2b09d9c04bd99d689ab9018b6872
msgid "set ``url_map.host_matching`` attribute. Defaults to False."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:78
#: 944f99017c6c4b5fb83a5ef1c72bac01
msgid "consider the subdomain relative to :data:`SERVER_NAME` when matching routes. Defaults to False."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:80
#: e77b7a96dcb84957922a500374b87652
msgid "the folder that contains the templates that should be used by the application.  Defaults to ``'templates'`` folder in the root path of the application."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:84
#: 909bfb5766584286804887a2db5571e9
msgid "An alternative instance path for the application. By default the folder ``'instance'`` next to the package or module is assumed to be the instance path."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:88
#: f473171271094b47b9e6e80ceba3dcb7
msgid "if set to ``True`` relative filenames for loading the config are assumed to be relative to the instance path instead of the application root."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask:92
#: 01c907bb73f24163801a136eee64be86
msgid "The path to the root of the application files. This should only be set manually when it can't be detected automatically, such as for namespace packages."
msgstr ""

#: ../../docstring of flask.Flask.session_interface:1
#: 315a450abbbb471e91d23e2901669834
msgid "the session interface to use.  By default an instance of :class:`~flask.sessions.SecureCookieSessionInterface` is used here."
msgstr ""

#: ../../docstring of flask.Blueprint.cli:1
#: ../../docstring of flask.Flask.cli:1
#: a47145f97f8c4faeb22317c692ec9890
#: 8e5a1c7915e14ae8ba2483e58d677c8f
msgid "The Click command group for registering CLI commands for this object. The commands are available from the ``flask`` command once the application has been discovered and blueprints have been registered."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.get_send_file_max_age:1
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.blueprints.Blueprint.get_send_file_max_age:1
#: ded9bdd1a36e4bd388f3885cd6c10a36
#: 07e01e206b514927958f61b634b94082
msgid "Used by :func:`send_file` to determine the ``max_age`` cache value for a given file path if it wasn't passed."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.get_send_file_max_age:4
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.blueprints.Blueprint.get_send_file_max_age:4
#: 0468a34ae4b9477b99b1806b379d9a5c
#: e306ef82affd415d92d39ce02d0210b5
msgid "By default, this returns :data:`SEND_FILE_MAX_AGE_DEFAULT` from the configuration of :data:`~flask.current_app`. This defaults to ``None``, which tells the browser to use conditional requests instead of a timed cache, which is usually preferable."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.get_send_file_max_age:9
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.send_static_file:6
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.blueprints.Blueprint.get_send_file_max_age:9
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.blueprints.Blueprint.send_static_file:6
#: fc930cd31dc1419b8ca741f192e517ee
#: 815cf87e8e3143ec9bacd1b52eed7664
#: 86335385ed7847e4b5efaed64cd5438e
#: 0c401ed295a34f94917c620b631ead89
msgid "Note this is a duplicate of the same method in the Flask class."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.get_send_file_max_age:12
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.blueprints.Blueprint.get_send_file_max_age:12
#: 7a2030a8391d481e9ee2275c5bd3b4fb
#: 23e9bd47cc3640388d5d962dee4fbf39
msgid "The default configuration is ``None`` instead of 12 hours."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.preprocess_request:0
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.after_request:0
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.before_request:0
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.context_processor:0
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.teardown_request:0
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.url_defaults:0
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.url_value_preprocessor:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.add_url_rule:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.after_app_request:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.app_context_processor:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.app_errorhandler:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.app_url_defaults:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.app_url_value_preprocessor:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.before_app_request:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.make_setup_state:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.record:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.record_once:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.teardown_app_request:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.after_request:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.before_request:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.context_processor:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.teardown_request:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.url_defaults:0
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.url_value_preprocessor:0
#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.AppGroup.command:0
#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.AppGroup.group:0
#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup.get_command:0
#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup.list_commands:0
#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup.parse_args:0
#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.ScriptInfo.load_app:0
#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.AppContext.pop:0
#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.AppContext.push:0
#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.RequestContext.match_request:0
#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider._default:0
#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag:0
#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.JSONTag.check:0
#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.JSONTag.tag:0
#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.JSONTag.to_json:0
#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.JSONTag.to_python:0
#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer.dumps:0
#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer.loads:0
#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer.tag:0
#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer.untag:0
#: ../../.venv/lib/python3.13/site-packages/flask/sansio/blueprints.py:docstring of flask.sansio.blueprints.BlueprintSetupState.add_url_rule:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.NullSession._fail:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SecureCookieSession.get:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SecureCookieSession.setdefault:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SecureCookieSessionInterface.open_session:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SecureCookieSessionInterface.save_session:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.get_cookie_httponly:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.get_cookie_name:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.get_cookie_path:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.get_cookie_samesite:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.get_cookie_secure:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.get_expiration_time:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.is_null_session:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.make_null_session:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.open_session:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.save_session:0
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions._lazy_sha1:0
#: ../../.venv/lib/python3.13/site-packages/flask/testing.py:docstring of flask.testing.FlaskClient.session_transaction:0
#: ../../.venv/lib/python3.13/site-packages/flask/views.py:docstring of flask.views.MethodView.dispatch_request:0
#: ../../.venv/lib/python3.13/site-packages/flask/views.py:docstring of flask.views.View.dispatch_request:0
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.get_etag:0
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.set_etag:0
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.calculate_content_length:0
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.iter_encoded:0
#: ../../project/docs/api.rst:0
#: ../../docstring of flask.cli.run_command:0
#: ../../docstring of flask.cli.shell_command:0
#: b83f91c999504c9fb0dff5a667bb8fbc
#: 401c75eb04d64ba09046273f8daf4770
#: 4982bfd2ebf947be936d99e0b80eeb30
#: 42fb31ff504d4f87a6d44941818db67e
#: beb9700f887540ad8d0eafb6c73e6f1c
#: 47cb7fc39e9f4853b7ef4d33a3576d46
#: 13a24ec9f32b41389d0558d2e469d163
#: baa8e6920cd74f0fabae5f9dd9fbb80f
#: 3a5e3288cce94702a32beec58d3fed28
#: c08074f36cf1444ba417b491a2016249
#: e04851d9ddf74adfa8b24102866b4e6e
#: ff6a0c0576a84153ac4cdb3ceab24300
#: 4b5d6ad95e5f41fda8f9571884cc9b61
#: 6ef7e64d393f4a4591217a3864283879
#: 4071f384c9ae4947908eb2e53f568ada
#: d5f590d86d054ffa999025921e8ed6b4
#: ee8814b2075448b2bc28a383b5554c16
#: 8da32278d52548929e925177bb3d0b71
#: 50eeb22ecbbc46288f3f653cb6c1783b
#: c7593ed0abed49828deb1e0703fff441
#: c2e813fdb8c14c52896783d755afbb75
#: 27d67f29df7440309750ab99cb1cf535
#: b5c39705f3f94252b07538095db1e300
#: 0fc200c6cd1e4ae3b6671d4e2465f51d
#: 4e85c472e39240d8914e8b4871a7939d
#: 3f7a11c4fd4746d3b9df557c90311d16
#: 071846cd6f8a43a5acdc56337d31a7cf
#: 8b843091f438433b86259016084f143b
#: 14b927511a88447aa13db476523f74f3
#: 15d3e4a7206e41e9bf5d6af2df97dfcc
#: af7f1cf8c73447d793390efc092eeef5
#: 5a67b02ae6f64c92924a129d6e8bb350
#: 5d2c1eb3e50c4ebfa8ad38ad98786698
#: 45b805fe37a44be9b45b76507f66fd7e
#: 27869b04610b47529e420d9eeed14f56
#: 2dd2952b87434c84addd86d6cdfa07af
#: 5b81efc3701d4225adca3507f502bfb2
#: fc27c426073e4b0787b9a6ab2be84421
#: c1bf5b7ca4b0405b9b534292b6ab1323
#: 5cb60b75ae9d4fedb5b3d8503716f479
#: 81f446d91a304ec0a95b7a08cd013fda
#: f633ee11c67046ca991752adfd825ddd
#: c0c0231e412a445db634fb77c70c3b5f
#: e412f6c3405d476a9ccdd83b7a9f03af
#: 36434a5591004b5ca070d8826601b503
#: 7b216d8ed65a486ca861fd4df4d40b9d
#: 5dfe06ddacf3408f80b7f5b18c9a024b
#: 787484d6d8554a359162d0eaf8433045
#: df472eef6c364a769b31c43c7af3bfab
#: 1850bbacdcef405294178d35f47e3f59
#: 203c4129c6044a629ab57f7acfea6ec3
#: e2672bb3c64f4f4288f95fe5d3ef0e94
#: 116bc3eaa96241a4a6d4a7b12986bd19
#: 01408e3c5b5a4579b1f0246e02689f0c
#: 2057c06053e54de790194648621ce6f8
#: 7522c158601d4f7eb5dea08b8f19c6f1
#: a23b1833928c40a7812e576daa3f44ae
#: b397ac59467141a6ba1288e7bc90bd08
#: 920f0368e506482f8d498b55e0c2cf84
#: 2fcbe2d5657441bb942de6c33aa8f189
#: 24499293faa44032bfaf89d68445bfeb
#: 3d539d79c9154bcdb224b167d0dbff66
#: a7eaa04707f6425aa9e4a932a8c92e5e
#: a129926fb5724171b1a52763b2e95b76
#: 0b52882bdbd2407aba441a7d5c129318
#: 53fdac98fa1e4f4aa7e6917e879947cd
#: f0aef7e54c3c49fb8b2cb0722bb42bdf
#: aa5b637edf754faeb1a377463940ccff
#: 18206addb5d34e2f969fbe9e8c312867
#: 9a89250a0ea64590b80e92a3f15e165d
#: 230b40ad46d041b8ac938e2fb1e8c551
#: 513e0461d62b4fe1b86d35c1b2b1db9e
#: 7157290acd904be8af2fa4a426562be9
#: 4e024a29127c443989a93c1abeb7f20b
#: b7886e2ccb5b4aa7a820c233f087bb63
#: 1a56b6e22f104c85855ba31bc39dcd3e
#: 4deb521834fe40dfb4e899b94e957a09
#: abf84a6ce32e42fe9f8c5054867a716b
#: 6d81a4ee1e074bb3b39bfba643bdb132
#: f2b71e6b9f1b4092a3c6d369aec040d7
#: 2510538246b3425ea9fac588d97b0f3c
#: 9472a743eeb3463b9daef493309693f5
#: 51e655bd67ad492eaad703d60f00ed69
#: 3e91773ad1f7463db0b64d376d525d75
#: e672cde56a614dd38ad2b79408a948af
#: 826b076c97e44630a25c0a1f093e8182
#: bc866fb443c7401eb0cf7271bdbc2a83
#: 87de4d797de64ec6a95055dc31621a2c
#: 701f922784754624b885b63eb900272e
#: 9399e70bc3b44193b7dbc916a826332f
#: 8198acad5ef14d738f8ab6540a507c31
#: 0a2f22471aa644ba8dee1238999fd08d
#: 1189d375ba1d4a949b77998c290f0d4b
#: ba1ac49f0f9e4ac683dc2ef8dac665f5
#: e780a395774d4da1ad34ff9ae316dde9
#: 5e867bd1b1454dc19dffde8a9278a195
#: be3e20f0c4ac43418499c7df980a0214
#: 02c1cd6883654abc8c0543253d997c89
#: dde697d3f7594d4a8ea0c215d4d7ef64
#: 4d81cc79fc12440181503940ec7b5ac9
#: 377f140ba8074b75a174016d0b2f2b99
#: 8e2d81860a5149e5b815859fbf998373
#: 56e1fed983374319b631b0117013b757
#: d077ec089c4f4ce79330495ae4ce676a
#: 7a2b01f048d74976a7ee4808d7adc66f
#: 2f33d134bc4845daa31322d8ebb26743
#: 209e81aa59bf41d9ac37c66da0d13ecc
#: 5f02802c38f94c98bf8f427e7f441c4e
#: 9e12c8d0c687481ab164106ee8b32319
#: 8a6c80529d2142e39bbe22c54aab8ec1
#: 6c44a9d750fe466b9eb7aa89f93ae2c2
#: 068cbd808381407995bf82bcb5f56afe
#: e1c90811fb1c4c13a8f73f2fde15fc52
#: 69513bb4fe334cd5b0cacd4924cb1caa
#: d52a0ce698d140fcafcfdac9e77b5c3e
#: e2d225b592474a58a3cbcded9729ce94
#: cc8937712a074e1ab9f8c693bcff1ce0
#: b9d723254fb9409eaaf7092539872459
#: 466daf68d023418fb056a01cdf1e94a7
#: 2739189ef5d64bc89c84fe1a5d994eb1
#: 1b82fe574d2042dfbef7ec9c9b08d709
#: a242815a0b71447fb2022a4b4cce8936
#: 3d1ac462d916497facc1315e86340836
#: d8713a8a58e64ef1833f9d172d4da38d
#: 476296dc3fdd474f83d426c3fc46c14c
#: 646a2e0a8b74442fa4b1714f6a7419f1
#: 8ad22fb6aa9746979929b7296081aa30
#: f97417d678ce4bc3a9108ec5ffb852aa
#: 30ba184b9a314efcb4087d23479e81c1
#: 960803ee2f2e451d96da3330a6a33c71
#: 15cf02788df64539b93a1afbaf8a0d19
#: b8ca0db086fa4f63909668a6d13335e5
#: 1a8823a789d04829a9355e07469715de
#: 7f409a950ba44a9c865b41bd4e693df3
#: fe160d1a4d8a435ebc6a5742c2917cc3
#: 2fb53932bbbe42c7a2758ee213183137
#: d70a7c032aa448a58a5270809c6d9b61
#: f2a1900f42d94387b960b9fd4248fe51
#: 89736e3fbb414ea68f12f96e9975b437
#: 6964d3956c7c40108d422a0ca2eac4be
#: d361ca3a169a4a3a881e71e7c316b668
#: 246df67f87954562bbd80ef1d85382a0
#: c002c732d6064197b06cf93d812af839
#: def6d4487c544443a447e9837a4f6ee0
#: 075d7eba43df4b6fb85d13335e65d20c
#: 2c1fdabdd28441c8b3b9391a85121dfb
#: 66739ca921c447cfbd82007f8660d385
#: 79e63eb17b974c08ae63e77443afa585
#: 94a93e58e9ae4f4fb752510d327fa0ea
#: fab40276594c41f69096e6db78aa8f98
#: 6c2e326eaf844bdc9f0302c3817794c4
#: 747dd24e367946eba5c486d8831b8e32
#: 6e8f82d063d84a0c9c42c8365c3e266c
#: 31fc3d95219b49d984928d756ce246ce
#: 43a43b56f6df41518f7ce891debd4ad1
#: a45285457a0f4140a16dcc410084ce02
#: b40488ab453842198f488d4da384034f
#: 6d8ec103265a4fa2b8275c376e41982d
#: 516cf6fe31614897bda0ece5841b6e16
#: 89a4e65114b149f2a1c8467b3102ec60
#: bd66efe814d44e08a1ff6a5413d9cca0
#: 36034ea7ea6f4c9d81f82c50db152743
#: a3a5a01df1fd4d02918a33fb23763524
#: 016d3b6b70c54f629badc79ee748f229
#: cca9125f79c24b5cabe4cb3900c7d682
#: 07855c1a3c674d8bbe59abbae365c4bf
#: 98f3da5596a24323859b6d42d17e3d73
#: 1b673cec38814052a91022d4301971ad
#: c583d078c11b40449f31831f680909ea
#: 6a27d6611f0d4fbbbdf516fce7eda1d8
#: 838e011d483a401494bfeed33ce2f7b5
#: 1615c6e6b7dc4a439eaef2ca3770eec5
#: 6c7b45ab20d64b4594717eee3410ce74
#: ff892feeb27347cf83e01b356849917c
#: cede5f4de0d74975a0feb956463ea304
#: bb3cc65efe4a4126ae8d6c76dca82eaf
#: 39d7f31373844639aef4cd499f665691
#: 395701fc99bf403aa5c15a7f0ce6dc04
#: f71f66272a594ba492f2cdd7eb80a42e
#: 2a5805d9f2904b5e949b303bb24b688e
#: 9a16dc06568046aebd52e0eb5b80609a
#: c499d97cec4a43bcbe80166d64ece9a7
#: c24f2c30518048f393237d1afed99b22
#: 60194e3c562844f29c1b41d9a868b0a2
#: dfeed26b73bd4b238829dbe4ae5f2323
#: 281b538bbf7e4f0ca2ce2516f0e7a859
#: 5a45bd910f764cef8cf785b3031469b8
#: da7b8a6c97c444528b77e972501c009a
#: 84ca1b86c41341cc921aa37bd0125d04
#: ade8df2f56e1465b8ab5df29b3932538
#: 26d07429071a49ea8bdd9d9514f04973
#: ae55bf79970f40a883869b430014aef5
#: a8c213444be44217be84f14c23346d3f
#: 997a7642e4f94ecfa2409d45d0cf9eee
#: 3988371c3305405a85818195becc5f55
#: 768d78ea80c94110a084d835641864e0
#: b7c40fc8fbeb433195c23a2229e62166
#: 7560bcb5399b4eb5966982da9f08b94d
#: d5d145804bec4eaa8dc3b224f713d960
#: 3a235120b24648da92c9a2fcd19b7e12
#: f8a1522d5f194d889865c808f66d7582
#: 8d512344e39e48dcbe21cfc0605736a7
#: d419984972944706bc114cc3fd2e65cf
#: 3f26399285b04068863bc091f79ecfa8
#: 3a9a9d0f82b04cc290b7dc1ab9918d76
#: 093df2d1446c4f14b7469094dff3308f
#: 10d3d4feef3e466ca8ea1e2ee418747b
#: cf868b01b79841008259241bd3d342b0
#: 3700a1fa40d34b0ca47696e5182006b6
#: 620bd92e163d4ba2879ce97f67cd11cf
#: cef11f3f83cb4b35876d9d56c3ac67a0
#: f83409b8a4f6444896c53283cd47d1b8
#: 5d2c714b93594e6aaa3a6c1b71a7b609
#: ca566948bf864a9abc9f51ed2da776cd
#: a34424ee897a4de7bd44618da98b56c8
#: 57c7931519814d0b9c4b2640cde981d4
#: 5d70a17b67ba47198e91f0d49e6db58f
#: 2e614a0dfa574b2b88e579bcbdd8e11e
#: ee93d66f1a9f48a7a54d84ede646f2f6
#: c3743cf450c940229b3dbbc9d9bdee78
#: 0e6c96f8c028452e8e48764bed20e577
#: b03b47548e214768b4a165073c4f18c4
#: 71e89ffb5beb4026915df9379b4794c1
#: 23ad77989c764a3db7af9bcf4b332a7a
#: 918239a69e04425faa3535c9a8f361e5
#: e9673016c21d4287a7c753437638bbdd
#: 58506d9664924a2aa8ff5b65501d6cc9
#: 489e260f9c2648399335d57a05a5df4b
#: 959c51fb4a1e4c90bb1b665c873e6c5f
#: 8ef4b922aa1f47a794b35b7d8150c3d5
#: 68145344493b41b197a0db23c59a85fc
msgid "Return type"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.send_static_file:1
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.blueprints.Blueprint.send_static_file:1
#: 66554d3608bf427d82c2cd11d41021a9
#: a6bf3d3a5423436aa68fc02ec2c6a642
msgid "The view function used to serve files from :attr:`static_folder`. A route is automatically registered for this view at :attr:`static_url_path` if :attr:`static_folder` is set."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.open_resource:1
#: 553d187f8ef444b69b1a11ec1a453838
msgid "Open a resource file relative to :attr:`root_path` for reading."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.open_resource:3
#: 86ad171ed23b499ea7ead5d3f572d46f
msgid "For example, if the file ``schema.sql`` is next to the file ``app.py`` where the ``Flask`` app is defined, it can be opened with:"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.open_resource:12
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.blueprints.Blueprint.open_resource:5
#: 03df730239f74b5198ce0d456f27218a
#: 2854d1a4d5224f8ca1e22d7a609bbce7
msgid "Path to the resource relative to :attr:`root_path`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.open_resource:13
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.blueprints.Blueprint.open_resource:6
#: 7f3bf49031454e2f804984edb5972375
#: 36298e8b458543cdb4d61dc33b8a3d54
msgid "Open the file in this mode. Only reading is supported, valid values are ``\"r\"`` (or ``\"rt\"``) and ``\"rb\"``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.open_instance_resource:7
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.open_resource:15
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.blueprints.Blueprint.open_resource:8
#: 8ca0e3c635854d8caa4e708f637d0daf
#: 34af2675567f406eb79e9fc75d0c4ef1
#: fc8fd07694fa4bfa88f3c6559597046c
msgid "Open the file with this encoding when opening in text mode. This is ignored when opening in binary mode."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.open_instance_resource:10
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.open_resource:18
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.blueprints.Blueprint.open_resource:11
#: 626e13e235ee49fb8077c3974c8338ee
#: 105e1068004644379693b0fbcf9ddce0
#: 833f3e5d4df44929bc5eddc3c32528b0
msgid "Added the ``encoding`` parameter."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.open_instance_resource:1
#: d34a76e5238e4316bc35e12fd92650e9
msgid "Open a resource file relative to the application's instance folder :attr:`instance_path`. Unlike :meth:`open_resource`, files in the instance folder can be opened for writing."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.open_instance_resource:5
#: edd6743d9b76415584d38e96db53e413
msgid "Path to the resource relative to :attr:`instance_path`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.open_instance_resource:6
#: 638efa39fddc4597a3ba844d6e649f46
msgid "Open the file in this mode."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.create_jinja_environment:1
#: de1ae59b8bee407fb1a117862cb539fb
msgid "Create the Jinja environment based on :attr:`jinja_options` and the various Jinja-related methods of the app. Changing :attr:`jinja_options` after this will have no effect. Also adds Flask-related globals and filters to the environment."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.create_jinja_environment:6
#: f6c4988b23ee455eaadb54b042ae5c12
msgid "``Environment.auto_reload`` set in accordance with ``TEMPLATES_AUTO_RELOAD`` configuration option."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.create_url_adapter:1
#: e5ce5d39a7e24c6d9be082bc9faf29c4
msgid "Creates a URL adapter for the given request. The URL adapter is created at a point where the request context is not yet set up so the request is passed explicitly."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.create_url_adapter:5
#: 91d9966d454a4ed0a1418a37c1405aca
msgid "If :data:`SERVER_NAME` is set, it does not restrict requests to only that domain, for both ``subdomain_matching`` and ``host_matching``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.create_url_adapter:10
#: 1150b45ebd2b49ae9fcc634abe2a6ecb
msgid ":data:`SERVER_NAME` no longer implicitly enables subdomain matching. Use :attr:`subdomain_matching` instead."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.create_url_adapter:14
#: 07159228b4dd41778723fb7476c93542
msgid "This can be called outside a request when the URL adapter is created for an application context."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.update_template_context:1
#: 9c93af9f60da4712ac56e191c33685fd
msgid "Update the template context with some commonly used variables. This injects request, session, config and g into the template context as well as everything template context processors want to inject.  Note that the as of Flask 0.6, the original values in the context will not be overridden if a context processor decides to return a value with the same key."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.update_template_context:8
#: 083591645e6242c7be728604e231d974
msgid "the context as a dictionary that is updated in place to add extra variables."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_shell_context:1
#: d4d711bda427450ab7979a7c5a98bf5c
msgid "Returns the shell context for an interactive shell for this application.  This runs all the registered shell context processors."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.run:1
#: d88bfa50562441629704bdcd277b5546
msgid "Runs the application on a local development server."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.run:3
#: 013440040a7f48039f6e0671e2434a40
msgid "Do not use ``run()`` in a production setting. It is not intended to meet security and performance requirements for a production server. Instead, see :doc:`/deploying/index` for WSGI server recommendations."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.run:7
#: a834455b2f104a9f929ffd41b4901d64
msgid "If the :attr:`debug` flag is set the server will automatically reload for code changes and show a debugger in case an exception happened."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.run:10
#: 79d1c36d8d754825be884aab95151cfc
msgid "If you want to run the application in debug mode, but disable the code execution on the interactive debugger, you can pass ``use_evalex=False`` as parameter.  This will keep the debugger's traceback screen active, but disable code execution."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.run:15
#: b1a5d1388f5b4dd2a97fb4ac7fb10032
msgid "It is not recommended to use this function for development with automatic reloading as this is badly supported.  Instead you should be using the :command:`flask` command line script's ``run`` support."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.run:19
#: 481578f939254bd8a1bc19d2c582097f
msgid "Keep in Mind"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.run:21
#: 8ab0317665ce49ed89f08fc3226c06c3
msgid "Flask will suppress any server error with a generic error page unless it is in debug mode.  As such to enable just the interactive debugger without the code reloading, you have to invoke :meth:`run` with ``debug=True`` and ``use_reloader=False``. Setting ``use_debugger`` to ``True`` without being in debug mode won't catch any exceptions because there won't be any to catch."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.run:29
#: 76a8eeafb3f74cbf94a3de04f7bb277b
msgid "the hostname to listen on. Set this to ``'0.0.0.0'`` to have the server available externally as well. Defaults to ``'127.0.0.1'`` or the host in the ``SERVER_NAME`` config variable if present."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.run:33
#: 154c04ce65cb43d483817e3e42c6837b
msgid "the port of the webserver. Defaults to ``5000`` or the port defined in the ``SERVER_NAME`` config variable if present."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.run:35
#: 2d04be27bb2a4670bb6022ca2802d11f
msgid "if given, enable or disable debug mode. See :attr:`debug`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.run:37
#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup:12
#: b4145cbaf3234f3585b6bba80f70e6d7
#: 981bbd4bfcc545678ec9a8dba933fa6a
msgid "Load the nearest :file:`.env` and :file:`.flaskenv` files to set environment variables. Will also change the working directory to the directory containing the first file found."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.run:40
#: 41fe9228d1fc48c4a29fb5d669ffe41c
msgid "the options to be forwarded to the underlying Werkzeug server. See :func:`werkzeug.serving.run_simple` for more information."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.run:44
#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup:27
#: be26c276c9f04626947d62803a740a5f
#: 30c696404374432596bd8844f2c3f593
msgid "If installed, python-dotenv will be used to load environment variables from :file:`.env` and :file:`.flaskenv` files."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.run:48
#: be4b68fe110f4758aa99009c3c0e18f5
msgid "The :envvar:`FLASK_DEBUG` environment variable will override :attr:`debug`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.run:50
#: ff032cfa4a0b40baa0a2d1cb6a54c812
msgid "Threaded mode is enabled by default."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.run:52
#: ca0cc28cd8804235b0742f81b1a26ff0
msgid "The default port is now picked from the ``SERVER_NAME`` variable."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.test_client:1
#: 183494bbbde04cb4aad3e48d35854e0d
msgid "Creates a test client for this application.  For information about unit testing head over to :doc:`/testing`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.test_client:4
#: 98bd7f765aa64e89b97e7303718ae220
msgid "Note that if you are testing for assertions or exceptions in your application code, you must set ``app.testing = True`` in order for the exceptions to propagate to the test client.  Otherwise, the exception will be handled by the application (not visible to the test client) and the only indication of an AssertionError or other exception will be a 500 status code response to the test client.  See the :attr:`testing` attribute.  For example::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.test_client:15
#: 364261fcfef74217a622ba0951d2f752
msgid "The test client can be used in a ``with`` block to defer the closing down of the context until the end of the ``with`` block.  This is useful if you want to access the context locals for testing::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.test_client:23
#: 61f1bc1361b84e66b8fe0387d09e6f7e
msgid "Additionally, you may pass optional keyword arguments that will then be passed to the application's :attr:`test_client_class` constructor. For example::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.test_client:37
#: de58eb7108ed45478cc69be5c88b7017
msgid "See :class:`~flask.testing.FlaskClient` for more information."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.test_client:47
#: 3788b55a0f534eeda073b1ece90eb28b
msgid "Added `**kwargs` to support passing additional keyword arguments to the constructor of :attr:`test_client_class`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.test_client:42
#: 93a46c6097d44f1187fe60f5cdb80a09
msgid "The `use_cookies` parameter was added as well as the ability to override the client to be used by setting the :attr:`test_client_class` attribute."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.test_client:39
#: 33eead4e05c44e0d9c5f4f239aafd494
msgid "added support for ``with`` block usage for the client."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.test_cli_runner:1
#: 6f9125f7bad64f45be308e3722dbbc73
msgid "Create a CLI runner for testing CLI commands. See :ref:`testing-cli`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.test_cli_runner:4
#: e365ea6eeeca4ace993fff7d920e144e
msgid "Returns an instance of :attr:`test_cli_runner_class`, by default :class:`~flask.testing.FlaskCliRunner`. The Flask app object is passed as the first argument."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.handle_http_exception:1
#: 1c135b119acc4146bcfc29cd5df258e8
msgid "Handles an HTTP exception.  By default this will invoke the registered error handlers and fall back to returning the exception as response."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.handle_http_exception:5
#: bc3e9c634b3f4c7c90796280894a9062
msgid "``RoutingException``, used internally for actions such as  slash redirects during routing, is not passed to error  handlers."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.handle_http_exception:10
#: 7384cb4d6a4b43fbb2a75475d6060cd1
msgid "Exceptions are looked up by code *and* by MRO, so ``HTTPException`` subclasses can be handled with a catch-all handler for the base ``HTTPException``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.handle_user_exception:1
#: 1559c41c1aea4c68a7f2dd8748a71ac9
msgid "This method is called whenever an exception occurs that should be handled. A special case is :class:`~werkzeug .exceptions.HTTPException` which is forwarded to the :meth:`handle_http_exception` method. This function will either return a response value or reraise the exception with the same traceback."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.handle_user_exception:8
#: 97e9168ae800407d805ca42283014b7a
msgid "Key errors raised from request data like ``form`` show the bad key in debug mode rather than a generic bad request message."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.handle_exception:1
#: 90fe742a767643b9a3df36ffa1d1b2ed
msgid "Handle an exception that did not have an error handler associated with it, or that was raised from an error handler. This always causes a 500 ``InternalServerError``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.handle_exception:5
#: 7bb3141e0baf43b3b21277c933d783e4
msgid "Always sends the :data:`got_request_exception` signal."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.handle_exception:7
#: 59cb1460031b43dabae642bd7bbc387f
msgid "If :data:`PROPAGATE_EXCEPTIONS` is ``True``, such as in debug mode, the error will be re-raised so that the debugger can display it. Otherwise, the original exception is logged, and an :exc:`~werkzeug.exceptions.InternalServerError` is returned."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.handle_exception:12
#: 4b27837690594e49ab3d26ee7d5eb925
msgid "If an error handler is registered for ``InternalServerError`` or ``500``, it will be used. For consistency, the handler will always receive the ``InternalServerError``. The original unhandled exception is available as ``e.original_exception``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.handle_exception:17
#: c4b74ab1ed4d4ceab4ba90f13a60eae6
msgid "Always passes the ``InternalServerError`` instance to the handler, setting ``original_exception`` to the unhandled error."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.handle_exception:22
#: 214d67f8652c499ba820c8d45d7e00d5
msgid "``after_request`` functions and other finalization is done even for the default 500 response when there is no handler."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.log_exception:1
#: 0b56d96e19904e959ea810a55e74ba33
msgid "Logs an exception.  This is called by :meth:`handle_exception` if debugging is disabled and right before the handler is called. The default implementation logs the exception as error on the :attr:`logger`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.dispatch_request:1
#: 077bb3a8f57a45eb91695c5be353fcd8
msgid "Does the request dispatching.  Matches the URL and returns the return value of the view or error handler.  This does not have to be a response object.  In order to convert the return value to a proper response object, call :func:`make_response`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.dispatch_request:6
#: 2c4709d9ab8f405fb4a8dbb79ffc5f80
msgid "This no longer does the exception handling, this code was moved to the new :meth:`full_dispatch_request`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.full_dispatch_request:1
#: baf9debfbb8844a3bb57cb2fed227b98
msgid "Dispatches the request and on top of that performs request pre and postprocessing as well as HTTP exception catching and error handling."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.finalize_request:1
#: 3a817dcaa3a64002bf80f1ae4bc37d46
msgid "Given the return value from a view function this finalizes the request by converting it into a response and invoking the postprocessing functions.  This is invoked for both normal request dispatching as well as error handlers."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.finalize_request:6
#: e327a91dc7b14f56a62eba7fb72d829c
msgid "Because this means that it might be called as a result of a failure a special safe mode is available which can be enabled with the `from_error_handler` flag.  If enabled, failures in response processing will be logged and otherwise ignored."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.finalize_request:0
#: 2cdf755c912d4cd0b088aca3d67adb45
msgid "internal"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_default_options_response:1
#: 81dcf7a073ba4dc989bb75ab5cbe8d32
msgid "This method is called to create the default ``OPTIONS`` response. This can be changed through subclassing to change the default behavior of ``OPTIONS`` responses."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.ensure_sync:1
#: 4a73b003997a47beb96a57b675e64d35
msgid "Ensure that the function is synchronous for WSGI workers. Plain ``def`` functions are returned as-is. ``async def`` functions are wrapped to run and wait for the response."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.ensure_sync:5
#: b040a17ca08a43f9a7616ffff7c32740
msgid "Override this method to change how the app runs async views."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.async_to_sync:1
#: 567bc8357d5f455094d2be1c49433247
msgid "Return a sync function that will run the coroutine function."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.async_to_sync:7
#: 0423349801034c51856e93ccf9b0ab0c
msgid "Override this method to change how the app converts async code to be synchronously callable."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.url_for:1
#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.url_for:1
#: bb88bb1640424e2c9a08441da50b6825
#: 47a01b0de6f245738eb23aac2fcd39a4
msgid "Generate a URL to the given endpoint with the given values."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.url_for:3
#: 3f4f458123ad40218eacb97472246737
msgid "This is called by :func:`flask.url_for`, and can be called directly as well."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.url_for:6
#: 3e9a03ff9c784dd8bf2d9734dede2aab
msgid "An *endpoint* is the name of a URL rule, usually added with :meth:`@app.route() <route>`, and usually the same name as the view function. A route defined in a :class:`~flask.Blueprint` will prepend the blueprint's name separated by a ``.`` to the endpoint."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.url_for:12
#: cd22e98840cc43c5b7e65a370b72b861
msgid "In some cases, such as email messages, you want URLs to include the scheme and domain, like ``https://example.com/hello``. When not in an active request, URLs will be external by default, but this requires setting :data:`SERVER_NAME` so Flask knows what domain to use. :data:`APPLICATION_ROOT` and :data:`PREFERRED_URL_SCHEME` should also be configured as needed. This config is only used when not in an active request."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.url_for:20
#: 579799d0a2614c0fa452fb20e20a5c79
msgid "Functions can be decorated with :meth:`url_defaults` to modify keyword arguments before the URL is built."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.url_for:23
#: 8755121a8d7d4561b283251e5a72e1e8
msgid "If building fails for some reason, such as an unknown endpoint or incorrect values, the app's :meth:`handle_url_build_error` method is called. If that returns a string, that is returned, otherwise a :exc:`~werkzeug.routing.BuildError` is raised."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.url_for:28
#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.url_for:7
#: 3f071613f92c4d81a11527c4eaeea95b
#: be217bbc768a4cabaab75e8ceef6fb8d
msgid "The endpoint name associated with the URL to generate. If this starts with a ``.``, the current blueprint name (if any) will be used."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.url_for:31
#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.url_for:10
#: 19609a8847644a60901ed4258d8d0fd2
#: 019ad4672afa4e05b040fc65d4bee93a
msgid "If given, append this as ``#anchor`` to the URL."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.url_for:32
#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.url_for:11
#: f1a79d48ba6f405daf6403ce378f80d2
#: 8fa08813f1aa4a9a83f06123b1690248
msgid "If given, generate the URL associated with this method for the endpoint."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.url_for:34
#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.url_for:13
#: 80437a2ef92342199df412ff88c4161e
#: 1c2386cbd39b41019574e54646366c1d
msgid "If given, the URL will have this scheme if it is external."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.url_for:36
#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.url_for:15
#: 431b840e92b54384a743f1bfc21ffca3
#: a0c8f5a91c9b475b961c172b2e18ffd0
msgid "If given, prefer the URL to be internal (False) or require it to be external (True). External URLs include the scheme and domain. When not in an active request, URLs are external by default."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.url_for:40
#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.url_for:19
#: 1d53be6578c84b6ea16b662f081b22fb
#: 76180cd0f445458caa7c2657aa4419bf
msgid "Values to use for the variable parts of the URL rule. Unknown keys are appended as query string arguments, like ``?a=b&c=d``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.url_for:44
#: 3721401527ae42b3a1c698977a30de77
msgid "Moved from ``flask.url_for``, which calls this method."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:1
#: ab75c173d39248d0a7525edd8368e526
msgid "Convert the return value from a view function to an instance of :attr:`response_class`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:4
#: b70363664e1446e88c9982fde5ed72b3
msgid "the return value from the view function. The view function must return a response. Returning ``None``, or the view ending without returning, is not allowed. The following types are allowed for ``view_rv``:  ``str``     A response object is created with the string encoded to UTF-8     as the body.  ``bytes``     A response object is created with the bytes as the body.  ``dict``     A dictionary that will be jsonify'd before being returned.  ``list``     A list that will be jsonify'd before being returned.  ``generator`` or ``iterator``     A generator that returns ``str`` or ``bytes`` to be     streamed as the response.  ``tuple``     Either ``(body, status, headers)``, ``(body, status)``, or     ``(body, headers)``, where ``body`` is any of the other types     allowed here, ``status`` is a string or an integer, and     ``headers`` is a dictionary or a list of ``(key, value)``     tuples. If ``body`` is a :attr:`response_class` instance,     ``status`` overwrites the exiting value and ``headers`` are     extended.  :attr:`response_class`     The object is returned unchanged.  other :class:`~werkzeug.wrappers.Response` class     The object is coerced to :attr:`response_class`.  :func:`callable`     The function is called as a WSGI application. The result is     used to create a response object."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:4
#: 389d275569d7464ebfaf871d73f42646
msgid "the return value from the view function. The view function must return a response. Returning ``None``, or the view ending without returning, is not allowed. The following types are allowed for ``view_rv``:"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:9
#: 5a6149b6119c4a1295bd7a7fe608fc25
msgid "``str``"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:10
#: 7e2c7fec987d40f0aac450cda89ebd81
msgid "A response object is created with the string encoded to UTF-8 as the body."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:13
#: 9313fbaa37aa461faed82865e175e608
msgid "``bytes``"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:14
#: 7578ef68dbd24bd390d12b54afca3c78
msgid "A response object is created with the bytes as the body."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:16
#: 7ca627149c1540df82e60a4b015a2717
msgid "``dict``"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:17
#: 476c1c23fe654c8797f2e7e24b355942
msgid "A dictionary that will be jsonify'd before being returned."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:19
#: d84727946fe4406090cd3c98fca387c5
msgid "``list``"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:20
#: 327ea47a8b344ba8ad84eeb2562b9cde
msgid "A list that will be jsonify'd before being returned."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:22
#: ddfef3508f594bcbbf3f1c43311c4412
msgid "``generator`` or ``iterator``"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:23
#: 97ecf97318094e0189f505d96c2ba8d7
msgid "A generator that returns ``str`` or ``bytes`` to be streamed as the response."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:26
#: 663e8d49bb3e40288320ea18dd4eb215
msgid "``tuple``"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:27
#: a4bc2d628feb4a4c85c7eb9802f7c9ea
msgid "Either ``(body, status, headers)``, ``(body, status)``, or ``(body, headers)``, where ``body`` is any of the other types allowed here, ``status`` is a string or an integer, and ``headers`` is a dictionary or a list of ``(key, value)`` tuples. If ``body`` is a :attr:`response_class` instance, ``status`` overwrites the exiting value and ``headers`` are extended."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:35
#: eb95392039f84b1087ffe338545b0778
msgid ":attr:`response_class`"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:36
#: 0b070731b26442029cc1a6342b9df2b7
msgid "The object is returned unchanged."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:38
#: ca56cd929cd04ae7ae7af17aa80cea6b
msgid "other :class:`~werkzeug.wrappers.Response` class"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:39
#: 2112b63736014a31bd6bac70b0a8e8c4
msgid "The object is coerced to :attr:`response_class`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:41
#: c35b779e228142808db66f2a385afb43
msgid ":func:`callable`"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:42
#: 97bfed50217f4ff68afbf522646b113c
msgid "The function is called as a WSGI application. The result is used to create a response object."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:45
#: f190f1fc90e642df87100217ebbf878d
msgid "A generator will be converted to a streaming response. A list will be converted to a JSON response."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:49
#: 2c491f6af0974514b88a9c89b605e47f
msgid "A dict will be converted to a JSON response."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.make_response:52
#: 9fc929fa94da426b8a35ed86f9741052
msgid "Previously a tuple was interpreted as the arguments for the response object."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.preprocess_request:1
#: d973fee46d544bc3b88ec83416617577
msgid "Called before the request is dispatched. Calls :attr:`url_value_preprocessors` registered with the app and the current blueprint (if any). Then calls :attr:`before_request_funcs` registered with the app and the blueprint."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.preprocess_request:6
#: 356b1c8ceb6e4563bc55acba5a406675
msgid "If any :meth:`before_request` handler returns a non-None value, the value is handled as if it was the return value from the view, and further request handling is stopped."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.process_response:1
#: 246fb385cd9d41a38ce40bd132d7d1f8
msgid "Can be overridden in order to modify the response object before it's sent to the WSGI server.  By default this will call all the :meth:`after_request` decorated functions."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.process_response:5
#: 7cbe3ea37bce4aa0b1f5aac7377d14da
msgid "As of Flask 0.5 the functions registered for after request execution are called in reverse order of registration."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.process_response:9
#: bfbb0fed600e4b4380ab7baf99422606
msgid "a :attr:`response_class` object."
msgstr ""

#: ../../project/docs/api.rst:0
#: b5f498f0ecbe47b89321638571efb473
#: 9495c73d02a648f2ae03f2dc7f0d2bea
#: 735f3912501c40cc8f623990a4b9bb39
#: 8e6801fd937b4586aeab45cf3a6c10f6
#: 215269961c9b44bdab717663499b6cce
#: 13690c76f53245e6be5d24b3422bb19c
#: fd665573ca854b2f9a8e6a25b7cb7f46
#: 78870f287c50400cab294763181f238e
#: 08ccf9af0a3b4427b1429a719047641a
#: 612329b037bb468da16dd2fce19151a9
#: d37f2def1aba44249805a17cdd7973c1
#: 42eb23d1cb7d4c11add06e6d7026a479
#: 4b70d6e44b814a8e8c80c05914a27fd5
#: 3ddd2d24b3984259a3d65ff02fdf2a62
msgid "Returns"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.process_response:10
#: 727eab8b478744dfae9ca7c5073346c8
msgid "a new response object or the same, has to be an instance of :attr:`response_class`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.do_teardown_request:1
#: e2bdcf2a2bfb4a6b85f7726bfeda6464
msgid "Called after the request is dispatched and the response is returned, right before the request context is popped."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.do_teardown_request:4
#: eb3a19bb057e463a877030fe888880fc
msgid "This calls all functions decorated with :meth:`teardown_request`, and :meth:`Blueprint.teardown_request` if a blueprint handled the request. Finally, the :data:`request_tearing_down` signal is sent."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.do_teardown_request:9
#: f6559f2f4a554802b1a54c1264c73fa5
msgid "This is called by :meth:`RequestContext.pop() <flask.ctx.RequestContext.pop>`, which may be delayed during testing to maintain access to resources."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.do_teardown_request:14
#: 79c617ba47f040579476f6736016b353
msgid "An unhandled exception raised while dispatching the request. Detected from the current exception information if not passed. Passed to each teardown function."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.do_teardown_request:18
#: fbcbdfe4c4364f5783ef9edd0aed4c23
msgid "Added the ``exc`` argument."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.do_teardown_appcontext:1
#: 10757f75733d411d9cafd5ca25508125
msgid "Called right before the application context is popped."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.do_teardown_appcontext:3
#: b901898db1174be5970d8bc04a6d9ba9
msgid "When handling a request, the application context is popped after the request context. See :meth:`do_teardown_request`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.do_teardown_appcontext:6
#: 13fa7a0759c049c19a0570251098f300
msgid "This calls all functions decorated with :meth:`teardown_appcontext`. Then the :data:`appcontext_tearing_down` signal is sent."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.do_teardown_appcontext:10
#: 949ad352d03b4f71b796d4bb86394ecb
msgid "This is called by :meth:`AppContext.pop() <flask.ctx.AppContext.pop>`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.app_context:1
#: c85ea39c7344491692accefa896dc361
msgid "Create an :class:`~flask.ctx.AppContext`. Use as a ``with`` block to push the context, which will make :data:`current_app` point at this application."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.app_context:5
#: e75bb6421daf4135aa468734fd374af2
msgid "An application context is automatically pushed by :meth:`RequestContext.push() <flask.ctx.RequestContext.push>` when handling a request, and when running a CLI command. Use this to manually create a context outside of these situations."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.app_context:15
#: 463011caea3245eaa4b0fac88840c65a
msgid "See :doc:`/appcontext`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.request_context:1
#: 97e144485b1f4475871a9a919b5c9871
msgid "Create a :class:`~flask.ctx.RequestContext` representing a WSGI environment. Use a ``with`` block to push the context, which will make :data:`request` point at this request."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.request_context:5
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.test_request_context:6
#: 6a605627b8c24716b4fd8b6b392af33b
#: 5bc284e77a174991a346eb32188ce75a
msgid "See :doc:`/reqcontext`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.request_context:7
#: 21e6d13c9db9437cb9236270989a0640
msgid "Typically you should not call this from your own code. A request context is automatically pushed by the :meth:`wsgi_app` when handling a request. Use :meth:`test_request_context` to create an environment and context instead of this method."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.request_context:12
#: d2e7ce77d0e247a9b040292c49845c0e
msgid "a WSGI environment"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.test_request_context:1
#: 862d69955f25460483c82e0e95f386cb
msgid "Create a :class:`~flask.ctx.RequestContext` for a WSGI environment created from the given values. This is mostly useful during testing, where you may want to run a function that uses request data without dispatching a full request."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.test_request_context:8
#: 767aece3fa074a95aca7e4f45da4a7c0
msgid "Use a ``with`` block to push the context, which will make :data:`request` point at the request for the created environment. ::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.test_request_context:15
#: 5df5da55cd8e4b4d91849e83906b1ca6
msgid "When using the shell, it may be easier to push and pop the context manually to avoid indentation. ::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.test_request_context:23
#: 0e2149a442eb4ee18f67ecfe046b545f
msgid "Takes the same arguments as Werkzeug's :class:`~werkzeug.test.EnvironBuilder`, with some defaults from the application. See the linked Werkzeug docs for most of the available arguments. Flask-specific behavior is listed here."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.test_request_context:28
#: b54e99e4c47240ebbd9773dcf2f6ff99
msgid "URL path being requested."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.test_request_context:29
#: c914a00b667a44f8b27ecccee1a5ea0e
msgid "Base URL where the app is being served, which ``path`` is relative to. If not given, built from :data:`PREFERRED_URL_SCHEME`, ``subdomain``, :data:`SERVER_NAME`, and :data:`APPLICATION_ROOT`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.test_request_context:33
#: 763e14b0aa814e468b71b38686dfd78b
msgid "Subdomain name to append to :data:`SERVER_NAME`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.test_request_context:35
#: 973e9acfcc714ea5a5aca8dbd547c0bf
msgid "Scheme to use instead of :data:`PREFERRED_URL_SCHEME`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.test_request_context:37
#: 0bed630b54a04f9982499d23f0e12f4e
msgid "The request body, either as a string or a dict of form keys and values."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.test_request_context:39
#: 7f962f388acc4cea86e242f026193a6d
msgid "If given, this is serialized as JSON and passed as ``data``. Also defaults ``content_type`` to ``application/json``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.test_request_context:42
#: 961501d3e597400abe925572c50af5b5
msgid "other positional arguments passed to :class:`~werkzeug.test.EnvironBuilder`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.test_request_context:44
#: 2e179df740b545eb8d6a6b002c9d91ce
msgid "other keyword arguments passed to :class:`~werkzeug.test.EnvironBuilder`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.wsgi_app:1
#: 0c2d9d25be5c46ffa19a71dbafa57fdf
msgid "The actual WSGI application. This is not implemented in :meth:`__call__` so that middlewares can be applied without losing a reference to the app object. Instead of doing this::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.wsgi_app:7
#: 641ac0e3665145af94889822b546f46f
msgid "It's a better idea to do this instead::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.wsgi_app:11
#: 4ec1b5f9157e42c192a236ec4e1ea46e
msgid "Then you still have the original application object around and can continue to call methods on it."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.wsgi_app:14
#: ab02c71ee9b042f28aedeae9f360147d
msgid "Teardown events for the request and app contexts are called even if an unhandled error occurs. Other events may not be called depending on when an error occurs during dispatch. See :ref:`callbacks-and-errors`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.wsgi_app:20
#: 07ccdde1e1244964a6d467cd48b6d7c5
msgid "A WSGI environment."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.app.Flask.wsgi_app:21
#: 4a339b41355248e79df672e34e98ea19
msgid "A callable accepting a status code, a list of headers, and an optional exception context to start the response."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.add_template_filter:1
#: 22fdae73dae64df8aafe51b5dae3098e
msgid "Register a custom template filter.  Works exactly like the :meth:`template_filter` decorator."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.add_template_filter:4
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.template_filter:9
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.add_app_template_filter:5
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.app_template_filter:4
#: b40152e736a748c2b12d6106d26e6fb4
#: 112e3ba3e8fd4843bbd6a65403c36fd6
#: 421ae7ca966b4a92bf315383ef31be60
#: f43dbf1aece74a4593c22c5f7529ba38
msgid "the optional name of the filter, otherwise the function name will be used."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.add_template_global:1
#: 30606405e7fe4cfc94a3101d2c995be4
msgid "Register a custom template global function. Works exactly like the :meth:`template_global` decorator."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.add_template_global:6
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.template_global:11
#: 966d338d76c14a70af27a47aaa3ad694
#: 91defd85388c41aeae20038e1e92832c
msgid "the optional name of the global function, otherwise the function name will be used."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.add_template_test:1
#: e26dcbebd46841c5b22f9389b887bb5f
msgid "Register a custom template test.  Works exactly like the :meth:`template_test` decorator."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.add_template_test:6
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.template_test:16
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.add_app_template_test:7
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.app_template_test:6
#: eae01d7664f945419fee2ef40b2c44b3
#: 1f961306d94c4f2fbf13f8159dec1bd5
#: fb40453c628d4f278954cbd181861cd3
#: 7cfd9291546145c5aa74d0282eec256b
msgid "the optional name of the test, otherwise the function name will be used."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.add_url_rule:1
#: aeb2fa2e4410437d940148f460e12381
msgid "Register a rule for routing incoming requests and building URLs. The :meth:`route` decorator is a shortcut to call this with the ``view_func`` argument. These are equivalent:"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.add_url_rule:18
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.route:11
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.route:11
#: df38dc2df4684eb68434a84ec9eeef03
#: 11453aae51c140768ac27cd2489745fa
#: 6116cdbdad5243d289c46b6235a4f470
msgid "See :ref:`url-route-registrations`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.add_url_rule:20
#: 607590ce09634c239de3a2ed1ab683ac
msgid "The endpoint name for the route defaults to the name of the view function if the ``endpoint`` parameter isn't passed. An error will be raised if a function has already been registered for the endpoint."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.add_url_rule:25
#: 2f3e7d1791964415898593323fdbfa24
msgid "The ``methods`` parameter defaults to ``[\"GET\"]``. ``HEAD`` is always added automatically, and ``OPTIONS`` is added automatically by default."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.add_url_rule:29
#: 5a0b446150d34bcfb682294f95908a15
msgid "``view_func`` does not necessarily need to be passed, but if the rule should participate in routing an endpoint name must be associated with a view function at some point with the :meth:`endpoint` decorator."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.add_url_rule:42
#: 7100d28b83f7407896d0c13682de6b96
msgid "If ``view_func`` has a ``required_methods`` attribute, those methods are added to the passed and automatic methods. If it has a ``provide_automatic_methods`` attribute, it is used as the default if the parameter is not passed."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.add_url_rule:47
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.route:19
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.route:19
#: 81f27958e81343e69f4cca98b824a006
#: 59d0d552b4a1416db539e53dd2c7d810
#: d96a40ea413743209a765992cab9b6a2
msgid "The URL rule string."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.add_url_rule:48
#: da781779e1674958b763c86297f1aa85
msgid "The endpoint name to associate with the rule and view function. Used when routing and building URLs. Defaults to ``view_func.__name__``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.add_url_rule:51
#: 4320546a694840b0be6bfd5de7829902
msgid "The view function to associate with the endpoint name."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.add_url_rule:53
#: 740b48350811471c89b021dfbb30ad42
msgid "Add the ``OPTIONS`` method and respond to ``OPTIONS`` requests automatically."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.add_url_rule:55
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.route:20
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.route:20
#: be7454ce259b4e5b94bd03810e2ccba6
#: 439c724d93db45c5b76a071a524a2921
#: 6266fc75cf184edb80b1f95f9f2893b4
msgid "Extra options passed to the :class:`~werkzeug.routing.Rule` object."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.after_request:1
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.after_request:1
#: 248d1e208a0241db8e52a9aa9a327e1b
#: a987e05908d0417192138789fb79eb3e
msgid "Register a function to run after each request to this object."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.after_request:3
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.after_request:3
#: 33d169420a874da5bed56d6ea5e07dad
#: 15e6e088ae404beba1f955c4f2906652
msgid "The function is called with the response object, and must return a response object. This allows the functions to modify or replace the response before it is sent."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.after_request:7
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.after_request:7
#: 4fce0a53c3034db3ab7937c74b6f8f6e
#: f6b1bbaad55240ff90a07e711eb54a7a
msgid "If a function raises an exception, any remaining ``after_request`` functions will not be called. Therefore, this should not be used for actions that must execute, such as to close resources. Use :meth:`teardown_request` for that."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.after_request:12
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.after_request:12
#: bf3dda9eb07048b1bcc93e29f12e2358
#: a0ddc87f18044686873c48e98ac45e71
msgid "This is available on both app and blueprint objects. When used on an app, this executes after every request. When used on a blueprint, this executes after every request that the blueprint handles. To register with a blueprint and execute after every request, use :meth:`.Blueprint.after_app_request`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.auto_find_instance_path:1
#: 9aa56193c44046a6ae1916cd1bff5fd0
msgid "Tries to locate the instance path if it was not provided to the constructor of the application class.  It will basically calculate the path to a folder named ``instance`` next to your main file or the package."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.before_request:1
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.before_request:1
#: d52499b2483445c0a9946f037b1b30d8
#: d0faa16f074c4f1583cbf531dcd82e17
msgid "Register a function to run before each request."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.before_request:3
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.before_request:3
#: 4dc510ba3a3f43b18f7407442bdbc6f5
#: 115cd779ab174042827fd3c730a48767
msgid "For example, this can be used to open a database connection, or to load the logged in user from the session."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.before_request:13
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.before_request:13
#: f195de09ca1b4ce28ca9efdd28e7aa81
#: b4f821662ef444c2b0835c2e915f2250
msgid "The function will be called without any arguments. If it returns a non-``None`` value, the value is handled as if it was the return value from the view, and further request handling is stopped."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.before_request:18
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.before_request:18
#: 388e195c61014ab6975bbb021bde4013
#: 7baa3a2197604f5689f4e53f46be4b2c
msgid "This is available on both app and blueprint objects. When used on an app, this executes before every request. When used on a blueprint, this executes before every request that the blueprint handles. To register with a blueprint and execute before every request, use :meth:`.Blueprint.before_app_request`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.context_processor:1
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.context_processor:1
#: f8e5c8d6b4354394935fdc7acb9ceb24
#: 97ce7cf74e5b4ae5ad217bc5b3c6779a
msgid "Registers a template context processor function. These functions run before rendering a template. The keys of the returned dict are added as variables available in the template."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.context_processor:5
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.context_processor:5
#: 25741945ef1047b5adf4f399c156b0f4
#: ec09a2de5f45462bb0ea67b8505dee44
msgid "This is available on both app and blueprint objects. When used on an app, this is called for every rendered template. When used on a blueprint, this is called for templates rendered from the blueprint's views. To register with a blueprint and affect every template, use :meth:`.Blueprint.app_context_processor`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.create_global_jinja_loader:1
#: 7b5cf7e7c7504dfe8cb7ce2f460cf30c
msgid "Creates the loader for the Jinja2 environment.  Can be used to override just the loader and keeping the rest unchanged.  It's discouraged to override this function.  Instead one should override the :meth:`jinja_loader` function instead."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.create_global_jinja_loader:6
#: 8d01de57c56644a1ac21fee73ef6042e
msgid "The global loader dispatches between the loaders of the application and the individual blueprints."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.Flask.debug:1
#: eb56acea3aad402096ca6a5f9409b343
msgid "Whether debug mode is enabled. When using ``flask run`` to start the development server, an interactive debugger will be shown for unhandled exceptions, and the server will be reloaded when code changes. This maps to the :data:`DEBUG` config key. It may not behave as expected if set late."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.Flask.debug:6
#: fbac534101974314853f48bd16ee0bb1
msgid "**Do not enable debug mode when deploying in production.**"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.Flask.debug:8
#: 6f571897a01c4059a2394a62f2cbe589
msgid "Default: ``False``"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.delete:1
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.delete:1
#: 3a13cd7de65849e7ab91fabf40041c2f
#: 6755700f370f4afe89851ae4e905088e
msgid "Shortcut for :meth:`route` with ``methods=[\"DELETE\"]``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.endpoint:1
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.endpoint:1
#: df8362be4f4644fc8a7b3d235ce87bef
#: 9959c177058e452c8753fbb7b4509ac7
msgid "Decorate a view function to register it for the given endpoint. Used if a rule is added without a ``view_func`` with :meth:`add_url_rule`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.endpoint:13
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.endpoint:13
#: a3c0ff101795479183dc47427986ce7f
#: 4e29d365f7374fbfb25ff01fc72e11e1
msgid "The endpoint name to associate with the view function."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.errorhandler:1
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.errorhandler:1
#: 6d0634eb18274c3e9d3919802e4ffd89
#: dc610acfed3f49a0a9466ff5325a2bce
msgid "Register a function to handle errors by code or exception class."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.errorhandler:3
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.errorhandler:3
#: 6397a94ca8a54488b06b8c53ad861bbe
#: eac88850bbbe4bada617d51716920b90
msgid "A decorator that is used to register a function given an error code.  Example::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.errorhandler:10
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.errorhandler:10
#: 2a02ec214249465d86ca16566f04e2bf
#: cae05a25ef3349cb9c3b5d6a35a56204
msgid "You can also register handlers for arbitrary exceptions::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.errorhandler:16
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.errorhandler:16
#: 3b0b411f3a604ff291f93712310d0197
#: dfde9ff926ae4ffc932d8b26e0d02abb
msgid "This is available on both app and blueprint objects. When used on an app, this can handle errors from every request. When used on a blueprint, this can handle errors from requests that the blueprint handles. To register with a blueprint and affect every request, use :meth:`.Blueprint.app_errorhandler`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.errorhandler:21
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.errorhandler:21
#: 1f98adee94144c3e92785b5be53e2f85
#: b269930458944ab68a3afe3761bf7162
msgid "Use :meth:`register_error_handler` instead of modifying :attr:`error_handler_spec` directly, for application wide error handlers."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.errorhandler:26
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.errorhandler:26
#: e09ba2f1654b43c5ab09ac104c6cb513
#: 1b3e8de68d6a4628affeb1e6f84d6561
msgid "One can now additionally also register custom exception types that do not necessarily have to be a subclass of the :class:`~werkzeug.exceptions.HTTPException` class."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.errorhandler:31
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.errorhandler:31
#: 945e13afd0864262b8a1a757fef27826
#: 2256326870d547b6be06dc84f37c84ff
msgid "the code as integer for the handler, or an arbitrary exception"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.get:1
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.get:1
#: 34f3894a79dd4fa79956e3adf777962d
#: 2b21b44b07724d87aacdfd9f966cd1f5
msgid "Shortcut for :meth:`route` with ``methods=[\"GET\"]``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.handle_url_build_error:1
#: 7c29aec4a8c545ce9e99b968b2cebb1a
msgid "Called by :meth:`.url_for` if a :exc:`~werkzeug.routing.BuildError` was raised. If this returns a value, it will be returned by ``url_for``, otherwise the error will be re-raised."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.handle_url_build_error:6
#: a8ad6d4042274a3b9309de4f67ec6f15
msgid "Each function in :attr:`url_build_error_handlers` is called with ``error``, ``endpoint`` and ``values``. If a function returns ``None`` or raises a ``BuildError``, it is skipped. Otherwise, its return value is returned by ``url_for``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.handle_url_build_error:11
#: 461463c6e3b644c3a88429989839c700
msgid "The active ``BuildError`` being handled."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.handle_url_build_error:12
#: f52eb2cb80f0433ca823e89a03695127
msgid "The endpoint being built."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.handle_url_build_error:13
#: 2ff4542033ce4c7995a48465652b674f
msgid "The keyword arguments passed to ``url_for``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.Flask.has_static_folder:1
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.Blueprint.has_static_folder:1
#: 38a347aef1f34c05b6c6c983990c4360
#: 32321f1556824ddf9c148e4505210648
msgid "``True`` if :attr:`static_folder` is set."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.inject_url_defaults:1
#: 8b371bdb46da45a9b0c6c1009cc689c8
msgid "Injects the URL defaults for the given endpoint directly into the values dictionary passed.  This is used internally and automatically called on URL building."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.iter_blueprints:1
#: dce875e01a6c470db6f4de5d8d4e5051
msgid "Iterates over all blueprints by the order they were registered."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.Flask.jinja_env:1
#: f4346bac4214445d8c6ae564a502b5a0
msgid "The Jinja environment used to load templates."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.Flask.jinja_env:3
#: c8c0494e47974f948cfc672629e669ed
msgid "The environment is created the first time this property is accessed. Changing :attr:`jinja_options` after that will have no effect."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.Flask.jinja_loader:1
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.Blueprint.jinja_loader:1
#: c1da58acebbd47d19adb08296c9ccc2c
#: 87a532e7d0b24cffb5bf94e6447efbe1
msgid "The Jinja loader for this object's templates. By default this is a class :class:`jinja2.loaders.FileSystemLoader` to :attr:`template_folder` if it is set."
msgstr ""

#: ../../docstring of flask.Flask.jinja_options:1
#: b2cb358853db407fbac4402df4a9d5bf
msgid "Options that are passed to the Jinja environment in :meth:`create_jinja_environment`. Changing these options after the environment is created (accessing :attr:`jinja_env`) will have no effect."
msgstr ""

#: ../../docstring of flask.Flask.jinja_options:6
#: a29f95a723754004a44b35138513718b
msgid "This is a ``dict`` instead of an ``ImmutableDict`` to allow easier configuration."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.Flask.logger:1
#: ea14afaba8b54f04b6bce377f6172785
msgid "A standard Python :class:`~logging.Logger` for the app, with the same name as :attr:`name`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.Flask.logger:4
#: a37957367b564e82be66369c90157fb2
msgid "In debug mode, the logger's :attr:`~logging.Logger.level` will be set to :data:`~logging.DEBUG`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.Flask.logger:7
#: 173ccec52f91446dafa126820de0032a
msgid "If there are no handlers configured, a default handler will be added. See :doc:`/logging` for more information."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.Flask.logger:10
#: 596bebb7f46041c5b6e0e6d691750d31
msgid "The logger takes the same name as :attr:`name` rather than hard-coding ``\"flask.app\"``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.Flask.logger:14
#: 14f67ab85e5b470bbdfb8dd609b17119
msgid "Behavior was simplified. The logger is always named ``\"flask.app\"``. The level is only set during configuration, it doesn't check ``app.debug`` each time. Only one format is used, not different ones depending on ``app.debug``. No handlers are removed, and a handler is only added if no handlers are already configured."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.make_aborter:1
#: 5dd09bd886a3467e935a2cbdd57357f9
msgid "Create the object to assign to :attr:`aborter`. That object is called by :func:`flask.abort` to raise HTTP errors, and can be called directly as well."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.make_aborter:5
#: 096dc3837e1d4f61812d2bdd242fda7c
msgid "By default, this creates an instance of :attr:`aborter_class`, which defaults to :class:`werkzeug.exceptions.Aborter`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.make_config:1
#: 6a6739dd051a4d6091ede35fd1e40cb8
msgid "Used to create the config attribute by the Flask constructor. The `instance_relative` parameter is passed in from the constructor of Flask (there named `instance_relative_config`) and indicates if the config should be relative to the instance path or the root path of the application."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.Flask.name:1
#: b89af16cf4804dfe8c7eaa64fd990d3b
msgid "The name of the application.  This is usually the import name with the difference that it's guessed from the run file if the import name is main.  This name is used as a display name when Flask needs the name of the application.  It can be set and overridden to change the value."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.patch:1
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.patch:1
#: a88a2281e61743769ad846bd85cc862b
#: 95ce3d541f6c460b89355e0877da0ba6
msgid "Shortcut for :meth:`route` with ``methods=[\"PATCH\"]``."
msgstr ""

#: ../../docstring of flask.Flask.permanent_session_lifetime:1
#: a462781ea02e466d8618053d011356ba
msgid "A :class:`~datetime.timedelta` which is used to set the expiration date of a permanent session.  The default is 31 days which makes a permanent session survive for roughly one month."
msgstr ""

#: ../../docstring of flask.Flask.permanent_session_lifetime:5
#: b34f262f1025432899c611c48b019a2b
msgid "This attribute can also be configured from the config with the ``PERMANENT_SESSION_LIFETIME`` configuration key.  Defaults to ``timedelta(days=31)``"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.post:1
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.post:1
#: 8f9076e8d28942df8b3d811340c73bba
#: 448b6a39e2e34bbc8e6698ff4a6d3e66
msgid "Shortcut for :meth:`route` with ``methods=[\"POST\"]``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.put:1
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.put:1
#: dacc53e84186424da050028ad2b2726c
#: a38ce370a51a481d878324e8a1514031
msgid "Shortcut for :meth:`route` with ``methods=[\"PUT\"]``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.redirect:1
#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.redirect:1
#: da9c1efe6cf344859b0740e18589c0a1
#: 47e2e5cc3fdb44798008a598113a3862
msgid "Create a redirect response object."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.redirect:3
#: b09b6915ab1b408f9365f0d9cea0add9
msgid "This is called by :func:`flask.redirect`, and can be called directly as well."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.redirect:6
#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.redirect:7
#: 85c63d6eb7d24297bee00aa2e6c420fd
#: b0c9fe960ef44e3280382b83455c7019
msgid "The URL to redirect to."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.redirect:7
#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.redirect:8
#: 2c79f55ed6ad45da8ea87769914800c7
#: eb37f67c2ca3490bb88608dd26a9b852
msgid "The status code for the redirect."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.redirect:9
#: 54faaa4cfe5046528449967321939875
msgid "Moved from ``flask.redirect``, which calls this method."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.register_blueprint:1
#: 0dfe76b38b534ddeab50fb1775e67c7e
msgid "Register a :class:`~flask.Blueprint` on the application. Keyword arguments passed to this method will override the defaults set on the blueprint."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.register_blueprint:5
#: e1c1129a147d4f4186694ed36a40fe56
msgid "Calls the blueprint's :meth:`~flask.Blueprint.register` method after recording the blueprint in the application's :attr:`blueprints`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.register_blueprint:8
#: 5910adf4a46e4f9686a640b12ddd4705
msgid "The blueprint to register."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.register_blueprint:9
#: 24e010f4f0f14ce882c1f6cc521c09e9
msgid "Blueprint routes will be prefixed with this."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.register_blueprint:10
#: d60b7fab35d440d38937f91a82449785
msgid "Blueprint routes will match on this subdomain."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.register_blueprint:11
#: 4d0c6a7c757a4ed8943559ccdc869c04
msgid "Blueprint routes will use these default values for view arguments."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.register_blueprint:13
#: a85d2f27080146c3b463ab3c407b6692
msgid "Additional keyword arguments are passed to :class:`~flask.blueprints.BlueprintSetupState`. They can be accessed in :meth:`~flask.Blueprint.record` callbacks."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.register_blueprint:17
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.register:23
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.register_blueprint:5
#: 98269b120d9c4dc1a6606086708e3f9b
#: 08c8eae8ae0141278efa81aadb25c0ec
#: 0c88c1d385ea45c7a00e7a04dc13a0a6
msgid "The ``name`` option can be used to change the (pre-dotted) name the blueprint is registered with. This allows the same blueprint to be registered multiple times with unique names for ``url_for``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.register_error_handler:1
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.register_error_handler:1
#: f0b1cd85a9d94872a1e445583c5fe69e
#: 3aaf520e3fa447bc821559216e50443d
msgid "Alternative error attach function to the :meth:`errorhandler` decorator that is more straightforward to use for non decorator usage."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.route:1
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.route:1
#: f029614bf4c64929b2837ff70d5e07b6
#: bf95b7f1ac724ec8944293a7410a7aae
msgid "Decorate a view function to register it with the given URL rule and options. Calls :meth:`add_url_rule`, which has more details about the implementation."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.route:13
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.route:13
#: 5fdca79e5b114f71bb70488c28894a73
#: e00b8be0d488476ebee22e718dfdbbd1
msgid "The endpoint name for the route defaults to the name of the view function if the ``endpoint`` parameter isn't passed."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.route:16
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.route:16
#: 325c4b42c14c4dbb8179ce9cb3ad8d3b
#: 96e8a957799c4b008a5cc86c493fd828
msgid "The ``methods`` parameter defaults to ``[\"GET\"]``. ``HEAD`` and ``OPTIONS`` are added automatically."
msgstr ""

#: ../../docstring of flask.Flask.secret_key:1
#: 76a60dd58d5a47f8a6c5e67ade7b36ae
msgid "If a secret key is set, cryptographic components can use this to sign cookies and other things. Set this to a complex random value when you want to use the secure cookie for instance."
msgstr ""

#: ../../docstring of flask.Flask.secret_key:5
#: b8feb75b05a94fe787157526a5f12756
msgid "This attribute can also be configured from the config with the :data:`SECRET_KEY` configuration key. Defaults to ``None``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.select_jinja_autoescape:1
#: 649a891df54844c6b14cba73191aac23
msgid "Returns ``True`` if autoescaping should be active for the given template name. If no template name is given, returns `True`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.select_jinja_autoescape:4
#: 371f03cf9385473593b536550e52ae94
msgid "Autoescaping is now enabled by default for ``.svg`` files."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.shell_context_processor:1
#: def54aff6a4b4e479c6221ccd202e238
msgid "Registers a shell context processor function."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.should_ignore_error:1
#: bd8be9550b3f4a84be7c83c181c96e0d
msgid "This is called to figure out if an error should be ignored or not as far as the teardown system is concerned.  If this function returns ``True`` then the teardown handlers will not be passed the error."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.Flask.static_folder:1
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.Blueprint.static_folder:1
#: 401b54dadcb14e5193e9910c4e301e69
#: 5832ac5ecb72449f9ea347126ef30de9
msgid "The absolute path to the configured static folder. ``None`` if no static folder is set."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.Flask.static_url_path:1
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.Blueprint.static_url_path:1
#: f02d99c48f714524b7337e5200cc3741
#: bcf68e238080448b9fc4ec8b19fee88e
msgid "The URL prefix that the static route will be accessible from."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.Flask.static_url_path:3
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.Blueprint.static_url_path:3
#: 4337bbd77ac54b3b9d90cf7939f85eb8
#: 5d12535757ff4bda9a5f2ccb72aca487
msgid "If it was not configured during init, it is derived from :attr:`static_folder`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.teardown_appcontext:1
#: 1b5e645e25c844868453d6b757dc47ad
msgid "Registers a function to be called when the application context is popped. The application context is typically popped after the request context for each request, at the end of CLI commands, or after a manually pushed context ends."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.teardown_appcontext:11
#: 098d39bc906c43b486b8f2f3ce2b2454
msgid "When the ``with`` block exits (or ``ctx.pop()`` is called), the teardown functions are called just before the app context is made inactive. Since a request context typically also manages an application context it would also be called when you pop a request context."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.teardown_appcontext:17
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.teardown_request:14
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.teardown_request:14
#: 3fccffb0891d46a1a5f67cd77bcc365f
#: 0d9ee6058a49446c8c9cececa02c81e9
#: 74272f0673874573b9af797d10731ccc
msgid "When a teardown function was called because of an unhandled exception it will be passed an error object. If an :meth:`errorhandler` is registered, it will handle the exception and the teardown will not receive it."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.teardown_appcontext:22
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.teardown_request:19
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.teardown_request:19
#: 053c58c7ae7b44cb953dd50ca03ac40e
#: 8880c7a3695f4de88ff3af49a790c18a
#: ec355ab2627e4a249ab37e78eb8e2723
msgid "Teardown functions must avoid raising exceptions. If they execute code that might fail they must surround that code with a ``try``/``except`` block and log any errors."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.teardown_appcontext:26
#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.teardown_request:23
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.teardown_request:23
#: 8338695d472e4020b5143bb91e9e3f83
#: b2f0a89ac794453a963b571d2d038fd6
#: c80db9282a404df9acec2d2cc27bdcc3
msgid "The return values of teardown functions are ignored."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.teardown_request:1
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.teardown_request:1
#: 60f7d96ddf974a218bbe7440cf6aadd7
#: e9f8144f5d1f4b1c9c0fc5685f69e905
msgid "Register a function to be called when the request context is popped. Typically this happens at the end of each request, but contexts may be pushed manually as well during testing."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.teardown_request:10
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.teardown_request:10
#: 20958943a034469186a7919d224fbc62
#: fc8c65dd9d7a4a4fabc67da925d98c69
msgid "When the ``with`` block exits (or ``ctx.pop()`` is called), the teardown functions are called just before the request context is made inactive."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.teardown_request:25
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.teardown_request:25
#: 8a94c1c3dc454a5089b5cb8d355cc35f
#: a459932419024940ab84265a347e191c
msgid "This is available on both app and blueprint objects. When used on an app, this executes after every request. When used on a blueprint, this executes after every request that the blueprint handles. To register with a blueprint and execute after every request, use :meth:`.Blueprint.teardown_app_request`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.template_filter:1
#: 0ef54b85427945be9c5386bac567802d
msgid "A decorator that is used to register custom template filter. You can specify a name for the filter, otherwise the function name will be used. Example::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.template_global:1
#: b276e152160346929c45e01433708ecb
msgid "A decorator that is used to register a custom template global function. You can specify a name for the global function, otherwise the function name will be used. Example::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.template_test:1
#: c8f10d96bb324b80a41dc0763c0c7def
msgid "A decorator that is used to register custom template test. You can specify a name for the test, otherwise the function name will be used. Example::"
msgstr ""

#: ../../docstring of flask.Flask.test_cli_runner_class:1
#: c4854d3597ba44b59be76809b86123dd
msgid "The :class:`~click.testing.CliRunner` subclass, by default :class:`~flask.testing.FlaskCliRunner` that is used by :meth:`test_cli_runner`. Its ``__init__`` method should take a Flask app object as the first argument."
msgstr ""

#: ../../docstring of flask.Flask.test_client_class:1
#: f8046b5fa7a8461ea84f7f58e0510df9
msgid "The :meth:`test_client` method creates an instance of this test client class. Defaults to :class:`~flask.testing.FlaskClient`."
msgstr ""

#: ../../docstring of flask.Flask.testing:1
#: 1882fb0be1d048598ccc015cabbbd2fd
msgid "The testing flag.  Set this to ``True`` to enable the test mode of Flask extensions (and in the future probably also Flask itself). For example this might activate test helpers that have an additional runtime cost which should not be enabled by default."
msgstr ""

#: ../../docstring of flask.Flask.testing:6
#: 8524c06efc854ddab86be20f67924cca
msgid "If this is enabled and PROPAGATE_EXCEPTIONS is not changed from the default it's implicitly enabled."
msgstr ""

#: ../../docstring of flask.Flask.testing:9
#: 4595b5171f3e49319fb3f8df5ac667b8
msgid "This attribute can also be configured from the config with the ``TESTING`` configuration key.  Defaults to ``False``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.trap_http_exception:1
#: 099c2047698e4f27a4bf8eb2e7324153
msgid "Checks if an HTTP exception should be trapped or not.  By default this will return ``False`` for all exceptions except for a bad request key error if ``TRAP_BAD_REQUEST_ERRORS`` is set to ``True``.  It also returns ``True`` if ``TRAP_HTTP_EXCEPTIONS`` is set to ``True``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.trap_http_exception:6
#: 895bd67e44cd4fb98a7bc1dcb3d98cbd
msgid "This is called for all HTTP exceptions raised by a view function. If it returns ``True`` for any exception the error handler for this exception is not called and it shows up as regular exception in the traceback.  This is helpful for debugging implicitly raised HTTP exceptions."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.app.App.trap_http_exception:12
#: 70acac23eb8240f2a51179103896f359
msgid "Bad request errors are not trapped by default in debug mode."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.url_defaults:1
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.url_defaults:1
#: b75ef55b15cb43a0aa70a7f3fab0d357
#: 1b63ddddef404396a1f3f1b48e80f91e
msgid "Callback function for URL defaults for all view functions of the application.  It's called with the endpoint and values and should update the values passed in place."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.url_defaults:5
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.url_defaults:5
#: c90286a5aab14fcc8d0318cee8679cf0
#: f19bb36a42f243c5953463ad282bca9f
msgid "This is available on both app and blueprint objects. When used on an app, this is called for every request. When used on a blueprint, this is called for requests that the blueprint handles. To register with a blueprint and affect every request, use :meth:`.Blueprint.app_url_defaults`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.url_value_preprocessor:1
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.url_value_preprocessor:1
#: 0f62c778921045e2b500f8096776c374
#: ac375edd22c8474dbf74df2fe243abc2
msgid "Register a URL value preprocessor function for all view functions in the application. These functions will be called before the :meth:`before_request` functions."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.url_value_preprocessor:5
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.url_value_preprocessor:5
#: 7cdbdcf05de646aa8c0ef199e4ee8412
#: c6f6af33a3734d578419999d525efc1e
msgid "The function can modify the values captured from the matched url before they are passed to the view. For example, this can be used to pop a common language code value and place it in ``g`` rather than pass it to every view."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.url_value_preprocessor:10
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.url_value_preprocessor:10
#: 0ee43ba611ef400a8e2344ac3ed5db2a
#: d4f16d71e1c947e2a429745fc6dd0b25
msgid "The function is passed the endpoint name and values dict. The return value is ignored."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/app.py:docstring of flask.sansio.scaffold.Scaffold.url_value_preprocessor:13
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.scaffold.Scaffold.url_value_preprocessor:13
#: 1c51297339654c6d81966b3f4840edff
#: 6c3019f7818449c4a3688987db308619
msgid "This is available on both app and blueprint objects. When used on an app, this is called for every request. When used on a blueprint, this is called for requests that the blueprint handles. To register with a blueprint and affect every request, use :meth:`.Blueprint.app_url_value_preprocessor`."
msgstr ""

#: ../../docstring of flask.Flask.instance_path:1
#: a3c47663db8f4f7a8f6b5c334e6e8e23
msgid "Holds the path to the instance folder."
msgstr ""

#: ../../docstring of flask.Flask.config:1
#: c8e218ef1c654fa2a9c2b916c4a38796
msgid "The configuration dictionary as :class:`Config`.  This behaves exactly like a regular dictionary but supports additional methods to load a config from files."
msgstr ""

#: ../../docstring of flask.Flask.aborter:1
#: 725cd26cb68343d39f0e4e6558c98ae0
msgid "An instance of :attr:`aborter_class` created by :meth:`make_aborter`. This is called by :func:`flask.abort` to raise HTTP errors, and can be called directly as well."
msgstr ""

#: ../../docstring of flask.Flask.aborter:5
#: a61a93d2b51e4e0fa8faec82c6e96773
msgid "Moved from ``flask.abort``, which calls this object."
msgstr ""

#: ../../docstring of flask.Flask.json:1
#: ac8e90760e364eb0a0ae610500a034ce
msgid "Provides access to JSON methods. Functions in ``flask.json`` will call methods on this provider when the application context is active. Used for handling JSON requests and responses."
msgstr ""

#: ../../docstring of flask.Flask.json:5
#: 389cc553d9ca4e1dbad95d2951e48eea
msgid "An instance of :attr:`json_provider_class`. Can be customized by changing that attribute on a subclass, or by assigning to this attribute afterwards."
msgstr ""

#: ../../docstring of flask.Flask.json:9
#: 3842995eab9340f5bf3534327c41512e
msgid "The default, :class:`~flask.json.provider.DefaultJSONProvider`, uses Python's built-in :mod:`json` library. A different provider can use a different JSON library."
msgstr ""

#: ../../docstring of flask.Flask.url_build_error_handlers:1
#: aa835dda68754fcbac5533deb62b0f52
msgid "A list of functions that are called by :meth:`handle_url_build_error` when :meth:`.url_for` raises a :exc:`~werkzeug.routing.BuildError`. Each function is called with ``error``, ``endpoint`` and ``values``. If a function returns ``None`` or raises a ``BuildError``, it is skipped. Otherwise, its return value is returned by ``url_for``."
msgstr ""

#: ../../docstring of flask.Flask.teardown_appcontext_funcs:1
#: 6920b44ed2dd43d08ebed6936cd92200
msgid "A list of functions that are called when the application context is destroyed.  Since the application context is also torn down if the request ends this is the place to store code that disconnects from databases."
msgstr ""

#: ../../docstring of flask.Flask.shell_context_processors:1
#: 8ed5864f874c41a8aa57937fb47360fb
msgid "A list of shell context processor functions that should be run when a shell context is created."
msgstr ""

#: ../../docstring of flask.Flask.blueprints:1
#: 700baacea51a4d29a6551c6001ec9789
msgid "Maps registered blueprint names to blueprint objects. The dict retains the order the blueprints were registered in. Blueprints can be registered multiple times, this dict does not track how often they were attached."
msgstr ""

#: ../../docstring of flask.Flask.extensions:1
#: 770fd8f649b543918b6f246775e4389d
msgid "a place where extensions can store application specific state.  For example this is where an extension could store database engines and similar things."
msgstr ""

#: ../../docstring of flask.Flask.extensions:5
#: befb6e371aa1459eaaca32c13dd044ea
msgid "The key must match the name of the extension module. For example in case of a \"Flask-Foo\" extension in `flask_foo`, the key would be ``'foo'``."
msgstr ""

#: ../../docstring of flask.Flask.url_map:1
#: c511e5867d994b5ab41081d1e577ea5a
msgid "The :class:`~werkzeug.routing.Map` for this instance.  You can use this to change the routing converters after the class was created but before any routes are connected.  Example::"
msgstr ""

#: ../../docstring of flask.Blueprint.import_name:1
#: ../../docstring of flask.Flask.import_name:1
#: e7a2d99dc1de4539a2e7280405409e33
#: fbf22ab87f70402b949eb57914d51b3c
msgid "The name of the package or module that this object belongs to. Do not change this once it is set by the constructor."
msgstr ""

#: ../../docstring of flask.Blueprint.template_folder:1
#: ../../docstring of flask.Flask.template_folder:1
#: 7268889977614d24af30f3b770e3c271
#: dcdf1f3b86e641d0a024401a2ebf0efa
msgid "The path to the templates folder, relative to :attr:`root_path`, to add to the template loader. ``None`` if templates should not be added."
msgstr ""

#: ../../docstring of flask.Blueprint.root_path:1
#: ../../docstring of flask.Flask.root_path:1
#: cf8e0dddb29a44779e4e06fca85ee486
#: 0c359b45abf04e2198425274ac47158e
msgid "Absolute path to the package on the filesystem. Used to look up resources contained in the package."
msgstr ""

#: ../../docstring of flask.Blueprint.view_functions:1
#: ../../docstring of flask.Flask.view_functions:1
#: 2496a22142f24b5d9e3b8a37ad87ff06
#: f9f7f6a18ceb416f8aa36a433c1943ff
msgid "A dictionary mapping endpoint names to view functions."
msgstr ""

#: ../../docstring of flask.Blueprint.view_functions:3
#: ../../docstring of flask.Flask.view_functions:3
#: 92b4fad550ce476ea96deec0fbd6bb2a
#: 8ac1d27c7309432187ea1a7123b6f565
msgid "To register a view function, use the :meth:`route` decorator."
msgstr ""

#: ../../docstring of flask.Blueprint.after_request_funcs:9
#: ../../docstring of flask.Blueprint.before_request_funcs:9
#: ../../docstring of flask.Blueprint.error_handler_spec:12
#: ../../docstring of flask.Blueprint.teardown_request_funcs:10
#: ../../docstring of flask.Blueprint.template_context_processors:10
#: ../../docstring of flask.Blueprint.url_default_functions:10
#: ../../docstring of flask.Blueprint.url_value_preprocessors:10
#: ../../docstring of flask.Blueprint.view_functions:5
#: ../../docstring of flask.Flask.after_request_funcs:9
#: ../../docstring of flask.Flask.before_request_funcs:9
#: ../../docstring of flask.Flask.error_handler_spec:12
#: ../../docstring of flask.Flask.teardown_request_funcs:10
#: ../../docstring of flask.Flask.template_context_processors:10
#: ../../docstring of flask.Flask.url_default_functions:10
#: ../../docstring of flask.Flask.url_value_preprocessors:10
#: ../../docstring of flask.Flask.view_functions:5
#: a8352f84f3e1437c944f79fd0d87176f
#: 4db91958ae2f44d3af910f44d72bcbd6
#: a63f180e37d04a6692162a6e3caa31d4
#: 63d5af1b425d4903a4fb9a3bd0f2eb35
#: f65f275ec02c445d93abdb7fd55b6fa7
#: c441ff266bf848888ff0089febc76963
#: 51e2c38dcb574f4ab5d18b90a31d8035
#: 1473ff9cba744ed5a4d952e3e6730aa2
#: 4baa3e2726084724a310139b72d175e1
#: 20710ad4ba1e49e08925653f089798da
#: a147ad9b085e4f9f9079eb5cc4f2b89b
#: c89f3f966b3549ea9d60da8d0e1cad37
#: 6d589350371c4b86b8bc2d1f7b5d86a6
#: 0cc7e94425bc4a00ab9f2d5db8072deb
#: ca31ff8f8c0e436182bb8c5fd71a501f
#: a1025f7e1a184caaad7f9e5458f71130
msgid "This data structure is internal. It should not be modified directly and its format may change at any time."
msgstr ""

#: ../../docstring of flask.Blueprint.error_handler_spec:1
#: ../../docstring of flask.Flask.error_handler_spec:1
#: 8eb37ac98ba2468890abb07d39d54d19
#: df4c8f739d24418987057a3151879c92
msgid "A data structure of registered error handlers, in the format ``{scope: {code: {class: handler}}}``. The ``scope`` key is the name of a blueprint the handlers are active for, or ``None`` for all requests. The ``code`` key is the HTTP status code for ``HTTPException``, or ``None`` for other exceptions. The innermost dictionary maps exception classes to handler functions."
msgstr ""

#: ../../docstring of flask.Blueprint.error_handler_spec:9
#: ../../docstring of flask.Flask.error_handler_spec:9
#: 19a923f03f7a4a2998a6f1fc0234c0e0
#: 32ad85a2661448a9a40a8d4fff42b2a1
msgid "To register an error handler, use the :meth:`errorhandler` decorator."
msgstr ""

#: ../../docstring of flask.Blueprint.before_request_funcs:1
#: ../../docstring of flask.Flask.before_request_funcs:1
#: 2068c57549f34ca289f3b31c00ed98c0
#: 8f7b85c7c27f4223969acfd6f00dce2c
msgid "A data structure of functions to call at the beginning of each request, in the format ``{scope: [functions]}``. The ``scope`` key is the name of a blueprint the functions are active for, or ``None`` for all requests."
msgstr ""

#: ../../docstring of flask.Blueprint.before_request_funcs:6
#: ../../docstring of flask.Flask.before_request_funcs:6
#: b63a4612e0e74e4187f1072fe89018f2
#: d2401ba9cf49447dae5c2fbac7ed46fb
msgid "To register a function, use the :meth:`before_request` decorator."
msgstr ""

#: ../../docstring of flask.Blueprint.after_request_funcs:1
#: ../../docstring of flask.Flask.after_request_funcs:1
#: c2dd56526df447a0896746b3f5dbf7f3
#: c808b3b2b9a44a159c0c4790843fd140
msgid "A data structure of functions to call at the end of each request, in the format ``{scope: [functions]}``. The ``scope`` key is the name of a blueprint the functions are active for, or ``None`` for all requests."
msgstr ""

#: ../../docstring of flask.Blueprint.after_request_funcs:6
#: ../../docstring of flask.Flask.after_request_funcs:6
#: b215a59a15ca47e69ef3cb12cf1bea2d
#: 9234f072b9df47eba1b0437782d75cca
msgid "To register a function, use the :meth:`after_request` decorator."
msgstr ""

#: ../../docstring of flask.Blueprint.teardown_request_funcs:1
#: ../../docstring of flask.Flask.teardown_request_funcs:1
#: 0f9df945a9544b879779bcffb00574e7
#: 71bbe3fb0ed34eaa93a1625ee279895e
msgid "A data structure of functions to call at the end of each request even if an exception is raised, in the format ``{scope: [functions]}``. The ``scope`` key is the name of a blueprint the functions are active for, or ``None`` for all requests."
msgstr ""

#: ../../docstring of flask.Blueprint.teardown_request_funcs:7
#: ../../docstring of flask.Flask.teardown_request_funcs:7
#: 3821054cfd8b4603b10dea89fece278b
#: 79f8ebbf787247b4880eda70fa3b2a78
msgid "To register a function, use the :meth:`teardown_request` decorator."
msgstr ""

#: ../../docstring of flask.Blueprint.template_context_processors:1
#: ../../docstring of flask.Flask.template_context_processors:1
#: 9b3bb03b56c145078caa6a1945b314de
#: e5e907bea8ce4ac1a43a4094608ce0bf
msgid "A data structure of functions to call to pass extra context values when rendering templates, in the format ``{scope: [functions]}``. The ``scope`` key is the name of a blueprint the functions are active for, or ``None`` for all requests."
msgstr ""

#: ../../docstring of flask.Blueprint.template_context_processors:7
#: ../../docstring of flask.Flask.template_context_processors:7
#: c7fc06b0187f4de687f48f3280b0d001
#: b14dd80c08774fda86a02770cafb4239
msgid "To register a function, use the :meth:`context_processor` decorator."
msgstr ""

#: ../../docstring of flask.Blueprint.url_value_preprocessors:1
#: ../../docstring of flask.Flask.url_value_preprocessors:1
#: cec2ff7d5bd64ff7afdc34a368d38cac
#: b01cd43c3e3f446fbb950b57d62a451c
msgid "A data structure of functions to call to modify the keyword arguments passed to the view function, in the format ``{scope: [functions]}``. The ``scope`` key is the name of a blueprint the functions are active for, or ``None`` for all requests."
msgstr ""

#: ../../docstring of flask.Blueprint.url_value_preprocessors:7
#: ../../docstring of flask.Flask.url_value_preprocessors:7
#: c9b9c0d0f67742709d2a32474891cbe9
#: f69d6ad9e9b54525aadc12c059459d19
msgid "To register a function, use the :meth:`url_value_preprocessor` decorator."
msgstr ""

#: ../../docstring of flask.Blueprint.url_default_functions:1
#: ../../docstring of flask.Flask.url_default_functions:1
#: d0a3dd9de4c2453886b0d926807163c9
#: 49de1b9f7cb84b79816cf7c9d7857472
msgid "A data structure of functions to call to modify the keyword arguments when generating URLs, in the format ``{scope: [functions]}``. The ``scope`` key is the name of a blueprint the functions are active for, or ``None`` for all requests."
msgstr ""

#: ../../docstring of flask.Blueprint.url_default_functions:7
#: ../../docstring of flask.Flask.url_default_functions:7
#: ba80591fcbcf424d9783995fe80dd9e4
#: b8fc956f5f2a4c98bfb0ef50f679a319
msgid "To register a function, use the :meth:`url_defaults` decorator."
msgstr ""

#: ../../project/docs/api.rst:20
#: 7b7f52cffaa849e48e2bacae08c49775
msgid "Blueprint Objects"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.blueprints.Blueprint.open_resource:1
#: 3b63656e68a1425c8435d528f6fffdb5
msgid "Open a resource file relative to :attr:`root_path` for reading. The blueprint-relative equivalent of the app's :meth:`~.Flask.open_resource` method."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.add_app_template_filter:1
#: ad18a13128b740bea6c9e987262e2c31
msgid "Register a template filter, available in any template rendered by the application. Works like the :meth:`app_template_filter` decorator. Equivalent to :meth:`.Flask.add_template_filter`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.add_app_template_global:1
#: fec9f3000c8c440ead7812c9dfe3f25f
msgid "Register a template global, available in any template rendered by the application. Works like the :meth:`app_template_global` decorator. Equivalent to :meth:`.Flask.add_template_global`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.add_app_template_global:7
#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.app_template_global:6
#: c629764c21e34c62b4e16f4e5742e794
#: 106e31d5d4bb4406ac650c284cbcdbfa
msgid "the optional name of the global, otherwise the function name will be used."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.add_app_template_test:1
#: 3c9acc6c74474ebea6773b296a556ae9
msgid "Register a template test, available in any template rendered by the application. Works like the :meth:`app_template_test` decorator. Equivalent to :meth:`.Flask.add_template_test`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.add_url_rule:1
#: 2e782e0690074066af7240e54dad5cc0
msgid "Register a URL rule with the blueprint. See :meth:`.Flask.add_url_rule` for full documentation."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.add_url_rule:4
#: c4aec992047f4aa39122db3230aa2127
msgid "The URL rule is prefixed with the blueprint's URL prefix. The endpoint name, used with :func:`url_for`, is prefixed with the blueprint's name."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.after_app_request:1
#: 76902113d92f4c399a8963b856465555
msgid "Like :meth:`after_request`, but after every request, not only those handled by the blueprint. Equivalent to :meth:`.Flask.after_request`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.app_context_processor:1
#: 0f9649b4c2fe48368559008ab8c88574
msgid "Like :meth:`context_processor`, but for templates rendered by every view, not only by the blueprint. Equivalent to :meth:`.Flask.context_processor`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.app_errorhandler:1
#: 4190a5268650486bbdd304083ea56b39
msgid "Like :meth:`errorhandler`, but for every request, not only those handled by the blueprint. Equivalent to :meth:`.Flask.errorhandler`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.app_template_filter:1
#: 05e5bad7a39743d8a243088189574e5d
msgid "Register a template filter, available in any template rendered by the application. Equivalent to :meth:`.Flask.template_filter`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.app_template_global:1
#: b9c7f92a13a643398bc0d4018983686a
msgid "Register a template global, available in any template rendered by the application. Equivalent to :meth:`.Flask.template_global`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.app_template_test:1
#: 5749f16116d344cd93707687309d50ed
msgid "Register a template test, available in any template rendered by the application. Equivalent to :meth:`.Flask.template_test`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.app_url_defaults:1
#: f6e99f0a119642979bf123a7e58c1d25
msgid "Like :meth:`url_defaults`, but for every request, not only those handled by the blueprint. Equivalent to :meth:`.Flask.url_defaults`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.app_url_value_preprocessor:1
#: bde2c5152d7c4ab8a0c09bd495ecbece
msgid "Like :meth:`url_value_preprocessor`, but for every request, not only those handled by the blueprint. Equivalent to :meth:`.Flask.url_value_preprocessor`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.before_app_request:1
#: 5d34b966600944ce8928df1c716d4310
msgid "Like :meth:`before_request`, but before every request, not only those handled by the blueprint. Equivalent to :meth:`.Flask.before_request`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.make_setup_state:1
#: 7d372f10b6f545d1905b8e8812571d37
msgid "Creates an instance of :meth:`~flask.blueprints.BlueprintSetupState` object that is later passed to the register callback functions. Subclasses can override this to return a subclass of the setup state."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.record:1
#: 4269828a12844e778f9eaa616bb65cdc
msgid "Registers a function that is called when the blueprint is registered on the application.  This function is called with the state as argument as returned by the :meth:`make_setup_state` method."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.record_once:1
#: 7c1c3d6f3fbb4df78c0f6da98feaf3c8
msgid "Works like :meth:`record` but wraps the function in another function that will ensure the function is only called once.  If the blueprint is registered a second time on the application, the function passed is not called."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.register:1
#: 8a9fc658e50c4f6d9aec0b7d0885d305
msgid "Called by :meth:`Flask.register_blueprint` to register all views and callbacks registered on the blueprint with the application. Creates a :class:`.BlueprintSetupState` and calls each :meth:`record` callback with it."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.register:6
#: 744d023c1f7c4ef28d98e0e0e8f6e243
msgid "The application this blueprint is being registered with."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.register:8
#: 7a05e7af0cb449e7ad0b1c2b2d6d2892
msgid "Keyword arguments forwarded from :meth:`~Flask.register_blueprint`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.register:11
#: d3c9f02c859f46948ee08399230e97f2
msgid "Nested blueprints now correctly apply subdomains."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.register:14
#: 0ae4b9b72cd54d3493525a8aa59e544f
msgid "Registering the same blueprint with the same name multiple times is an error."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.register:18
#: db442e498dc142ab9b1a35c01d6df6a2
msgid "Nested blueprints are registered with their dotted name. This allows different blueprints with the same name to be nested at different locations."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.register_blueprint:1
#: 5070fa67110f4347a1ce8bda21a998e5
msgid "Register a :class:`~flask.Blueprint` on this blueprint. Keyword arguments passed to this method will override the defaults set on the blueprint."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/blueprints.py:docstring of flask.sansio.blueprints.Blueprint.teardown_app_request:1
#: eb717da1af3e4881bb15e1d165041cdf
msgid "Like :meth:`teardown_request`, but after every request, not only those handled by the blueprint. Equivalent to :meth:`.Flask.teardown_request`."
msgstr ""

#: ../../project/docs/api.rst:27
#: 8ed90ffcd24844db8014b79c41b7d89e
msgid "Incoming Request Data"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.wrappers.Request:1
#: 8363d886a7314fe8853300a8343d6c00
msgid "The request object used by default in Flask.  Remembers the matched endpoint and view arguments."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.wrappers.Request:4
#: b20284e53aee44ae97e113208c582e2d
msgid "It is what ends up as :class:`~flask.request`.  If you want to replace the request object used you can subclass this and set :attr:`~flask.Flask.request_class` to your subclass."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.wrappers.Request:8
#: aef4441ec4ce488ea11271786ca428e8
msgid "The request object is a :class:`~werkzeug.wrappers.Request` subclass and provides all of the attributes Werkzeug defines plus a few Flask specific ones."
msgstr ""

#: ../../docstring of flask.Request.url_rule:1
#: 96f9d76f047342d0b79622ae958098b7
msgid "The internal URL rule that matched the request.  This can be useful to inspect which methods are allowed for the URL from a before/after handler (``request.url_rule.methods``) etc. Though if the request's method was invalid for the URL rule, the valid list is available in ``routing_exception.valid_methods`` instead (an attribute of the Werkzeug exception :exc:`~werkzeug.exceptions.MethodNotAllowed`) because the request was never internally bound."
msgstr ""

#: ../../docstring of flask.Request.view_args:1
#: bb30709e69fa4a068c9424e237d0e5de
msgid "A dict of view arguments that matched the request.  If an exception happened when matching, this will be ``None``."
msgstr ""

#: ../../docstring of flask.Request.routing_exception:1
#: 036f2ddefa4c4be1a2e392fa545cc272
msgid "If matching the URL failed, this is the exception that will be raised / was raised as part of the request handling.  This is usually a :exc:`~werkzeug.exceptions.NotFound` exception or something similar."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.max_content_length:1
#: ea460f87caf944119de206dee23ac2b0
msgid "The maximum number of bytes that will be read during this request. If this limit is exceeded, a 413 :exc:`~werkzeug.exceptions.RequestEntityTooLarge` error is raised. If it is set to ``None``, no limit is enforced at the Flask application level. However, if it is ``None`` and the request has no ``Content-Length`` header and the WSGI server does not indicate that it terminates the stream, then no data is read to avoid an infinite stream."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.max_content_length:9
#: a6244ef1cbc84435ae9cdd2410dc464b
msgid "Each request defaults to the :data:`MAX_CONTENT_LENGTH` config, which defaults to ``None``. It can be set on a specific ``request`` to apply the limit to that specific view. This should be set appropriately based on an application's or view's specific needs."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.max_content_length:14
#: 2745c5e5909a4cbb8f2cc55a58520d9a
msgid "This can be set per-request."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.max_content_length:17
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.max_form_memory_size:11
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.max_form_parts:11
#: db3d6d7d0f944db9ae59383988250b7d
#: 5ec0642f33c14fca92153821c1ea6f0e
#: c9fc9d3a07314a839e2cb1ad2303e5fa
msgid "This is configurable through Flask config."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.max_form_memory_size:1
#: b3fa98607c364bbe8a5f64f82c853ec6
msgid "The maximum size in bytes any non-file form field may be in a ``multipart/form-data`` body. If this limit is exceeded, a 413 :exc:`~werkzeug.exceptions.RequestEntityTooLarge` error is raised. If it is set to ``None``, no limit is enforced at the Flask application level."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.max_form_memory_size:6
#: bf512193b25e4bd09ba6c0ab2638a907
msgid "Each request defaults to the :data:`MAX_FORM_MEMORY_SIZE` config, which defaults to ``500_000``. It can be set on a specific ``request`` to apply the limit to that specific view. This should be set appropriately based on an application's or view's specific needs."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.max_form_parts:1
#: 0f595a1e60174060aed18829a4a3477b
msgid "The maximum number of fields that may be present in a ``multipart/form-data`` body. If this limit is exceeded, a 413 :exc:`~werkzeug.exceptions.RequestEntityTooLarge` error is raised. If it is set to ``None``, no limit is enforced at the Flask application level."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.max_form_parts:6
#: 43aaccee027044d4a7dc684053ab5ca6
msgid "Each request defaults to the :data:`MAX_FORM_PARTS` config, which defaults to ``1_000``. It can be set on a specific ``request`` to apply the limit to that specific view. This should be set appropriately based on an application's or view's specific needs."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.endpoint:1
#: 01ae4fad9f784324a933e046c25161e4
msgid "The endpoint that matched the request URL."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.endpoint:3
#: 7dd100f0c61a43b3acee241facac0e12
msgid "This will be ``None`` if matching failed or has not been performed yet."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.endpoint:6
#: 4219832175b540308c54573b0942b97e
msgid "This in combination with :attr:`view_args` can be used to reconstruct the same URL or a modified URL."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.blueprint:1
#: 758f985907514352a7ce46d29fd4ae6e
msgid "The registered name of the current blueprint."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.blueprint:3
#: f66500134fdb407eaa9cf9b51d32523d
msgid "This will be ``None`` if the endpoint is not part of a blueprint, or if URL matching failed or has not been performed yet."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.blueprint:7
#: 9464fb8c1de346209876981e9622e53f
msgid "This does not necessarily match the name the blueprint was created with. It may have been nested, or registered with a different name."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.blueprints:1
#: 8eca9912682244d18b667f168ce89a30
msgid "The registered names of the current blueprint upwards through parent blueprints."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.blueprints:4
#: 3b17ddf7081e43f58732d23bf5647352
msgid "This will be an empty list if there is no current blueprint, or if URL matching failed."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.wrappers.Request.on_json_loading_failed:1
#: c1c17cbda5f4477a8a155c572ca14652
msgid "Called if :meth:`get_json` fails and isn't silenced."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.wrappers.Request.on_json_loading_failed:3
#: 1a4a01e09d44468a8ea4856a826dfe64
msgid "If this method returns a value, it is used as the return value for :meth:`get_json`. The default implementation raises :exc:`~werkzeug.exceptions.BadRequest`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.wrappers.Request.on_json_loading_failed:7
#: 4ae3b5fb338a49e49f383ffc0c3f0d59
msgid "If parsing failed, this is the exception. It will be ``None`` if the content type wasn't ``application/json``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.json:9
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.wrappers.Request.on_json_loading_failed:10
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.request.Request.get_json:15
#: c8fe9392a5564c6793d7abeca7bec6ae
#: adc8ea20766b4644a497384298f0f88b
#: 1adc4b1ea8854a52b1947df38cd2b9ac
msgid "Raise a 415 error instead of 400."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.accept_charsets:1
#: 71dfee3566a34dd083e72326cb41f0eb
msgid "List of charsets this client supports as :class:`~werkzeug.datastructures.CharsetAccept` object."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.accept_encodings:1
#: b016f8ab0c9e4cd5b229065a75d1fbbf
msgid "List of encodings this client accepts.  Encodings in a HTTP term are compression encodings such as gzip.  For charsets have a look at :attr:`accept_charset`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.accept_languages:1
#: b2e7f1ad27fa4203a3a081b9a0afa86f
msgid "List of languages this client accepts as :class:`~werkzeug.datastructures.LanguageAccept` object."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.accept_mimetypes:1
#: 1064f6f316d64a66805a8add967ca3d8
msgid "List of mimetypes this client supports as :class:`~werkzeug.datastructures.MIMEAccept` object."
msgstr ""

#: ../../docstring of flask.Request.access_control_request_headers:1
#: 710a8eaf175a4497a4f0848f70762679
msgid "Sent with a preflight request to indicate which headers will be sent with the cross origin request. Set :attr:`~CORSResponseMixin.access_control_allow_headers` on the response to indicate which headers are allowed."
msgstr ""

#: ../../docstring of flask.Request.access_control_request_method:1
#: 079576970c7c421f931d42c511f3c480
msgid "Sent with a preflight request to indicate which method will be used for the cross origin request. Set :attr:`~CORSResponseMixin.access_control_allow_methods` on the response to indicate which methods are allowed."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.access_route:1
#: 38c73e8fcb234927bf543e5e15c1e6c5
msgid "If a forwarded header exists this is a list of all ip addresses from the client ip to the last proxy server."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.request.Request.application:1
#: c35869d068c04f22a2161adec95b4252
msgid "Decorate a function as responder that accepts the request as the last argument.  This works like the :func:`responder` decorator but the function is passed the request object as the last argument and the request object will be closed automatically::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.request.Request.application:11
#: c2086399e2824e1e834bd11505b288af
msgid "As of Werkzeug 0.14 HTTP exceptions are automatically caught and converted to responses instead of failing."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.request.Request.application:14
#: c6d128f7803542e9901e022ea14a83d6
msgid "the WSGI callable to decorate"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.request.Request.application:15
#: af645af7dbe743b5afe8ba1d6d6868f7
msgid "a new WSGI callable"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.args:1
#: ec93f102a2824475bfab30ecf4ae0f1d
msgid "The parsed URL parameters (the part in the URL after the question mark)."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.args:4
#: 73b933f2ea9449c58ac63aa460ddd7b5
msgid "By default an :class:`~werkzeug.datastructures.ImmutableMultiDict` is returned from this function.  This can be changed by setting :attr:`parameter_storage_class` to a different type.  This might be necessary if the order of the form data is important."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.args:10
#: 1927bf93e71a4ddaa415414d889f8b43
msgid "Invalid bytes remain percent encoded."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.authorization:1
#: 4ec4fd24c3604e3687e5e528320d7fa7
msgid "The ``Authorization`` header parsed into an :class:`.Authorization` object. ``None`` if the header is not present."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.authorization:4
#: c060f68c816f4cfe9fc36bd00f597e12
msgid ":class:`Authorization` is no longer a ``dict``. The ``token`` attribute was added for auth schemes that use a token instead of parameters."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.base_url:1
#: 143a8edffe914859b5b98e639e22101b
msgid "Like :attr:`url` but without the query string."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.cache_control:1
#: 1ddca3a319564ee7ba155b63e3ee32dd
msgid "A :class:`~werkzeug.datastructures.RequestCacheControl` object for the incoming cache control headers."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.request.Request.close:1
#: f22e14a5a814480a8154a5ef54aaaf0f
msgid "Closes associated resources of this request object.  This closes all file handles explicitly.  You can also use the request object in a with statement which will automatically close it."
msgstr ""

#: ../../docstring of flask.Request.content_encoding:1
#: ../../docstring of flask.Response.content_encoding:1
#: 4312414850644ca5ba18c29b7b9e9f8d
#: 232f6bedb6a541f180810f3643294f82
msgid "The Content-Encoding entity-header field is used as a modifier to the media-type. When present, its value indicates what additional content codings have been applied to the entity-body, and thus what decoding mechanisms must be applied in order to obtain the media-type referenced by the Content-Type header field."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.content_length:1
#: a92ac32df8fc436b873822a8928bfa52
msgid "The Content-Length entity-header field indicates the size of the entity-body in bytes or, in the case of the HEAD method, the size of the entity-body that would have been sent had the request been a GET."
msgstr ""

#: ../../docstring of flask.Request.content_md5:1
#: ../../docstring of flask.Response.content_md5:1
#: 2cc0203db4ef4ecea805331349f3c135
#: 63d2e6df030e477c9889938d3fe2c2e2
msgid "The Content-MD5 entity-header field, as defined in RFC 1864, is an MD5 digest of the entity-body for the purpose of providing an end-to-end message integrity check (MIC) of the entity-body. (Note: a MIC is good for detecting accidental modification of the entity-body in transit, but is not proof against malicious attacks.)"
msgstr ""

#: ../../docstring of flask.Request.content_type:1
#: ../../docstring of flask.Response.content_type:1
#: 3ff884c550484601898ca8c4815aec10
#: dc880a3506e64f769d973cc8a061fbfa
msgid "The Content-Type entity-header field indicates the media type of the entity-body sent to the recipient or, in the case of the HEAD method, the media type that would have been sent had the request been a GET."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.cookies:1
#: 542a3b6ed5c14227a9cb4537c50a1090
msgid "A :class:`dict` with the contents of all cookies transmitted with the request."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.data:1
#: 0fd81cfd15c44ee893f2c1bebb46dd40
msgid "The raw data read from :attr:`stream`. Will be empty if the request represents form data."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.data:4
#: 3a165973a47d4d749753d4857e5a3628
msgid "To get the raw data even if it represents form data, use :meth:`get_data`."
msgstr ""

#: ../../docstring of flask.Request.date:1
#: ../../docstring of flask.Response.date:1
#: 91e58c0e2b8d40958670cbfcad164422
#: e89b1d22ef894915aaca49357b141185
msgid "The Date general-header field represents the date and time at which the message was originated, having the same semantics as orig-date in RFC 822."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.if_modified_since:3
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.if_unmodified_since:3
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.retry_after:7
#: ../../docstring of flask.Request.date:5
#: ../../docstring of flask.Response.date:5
#: ../../docstring of flask.Response.expires:5
#: ../../docstring of flask.Response.last_modified:5
#: 45fa47f0659f42a8bcc0a8e2b57726a4
#: d8cd5179fc7146f6995d0538af0340f0
#: c3c337fbb8e24fbbb9140cc470fb145b
#: 82d8f2b5923c47ff8cde859dcd5778e2
#: ee56956006a447e5aa63c39489a2b71d
#: 8aabe0acbe8f4659bcbd268a6f67f764
#: 18dc3c5442674cc287acfe32d694c13f
msgid "The datetime object is timezone-aware."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.files:1
#: b143a809c0764aa495525a4b26362a64
msgid ":class:`~werkzeug.datastructures.MultiDict` object containing all uploaded files.  Each key in :attr:`files` is the name from the ``<input type=\"file\" name=\"\">``.  Each value in :attr:`files` is a Werkzeug :class:`~werkzeug.datastructures.FileStorage` object."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.files:6
#: c05875662d75495f84f95ecc6a8260dd
msgid "It basically behaves like a standard file object you know from Python, with the difference that it also has a :meth:`~werkzeug.datastructures.FileStorage.save` function that can store the file on the filesystem."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.files:11
#: 97400ad30566473cafa2752fe4150a25
msgid "Note that :attr:`files` will only contain data if the request method was POST, PUT or PATCH and the ``<form>`` that posted to the request had ``enctype=\"multipart/form-data\"``.  It will be empty otherwise."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.files:15
#: 98195d9500204f35a6d66051999f7cd1
msgid "See the :class:`~werkzeug.datastructures.MultiDict` / :class:`~werkzeug.datastructures.FileStorage` documentation for more details about the used data structure."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.form:1
#: 6dc8e2b567354567831c1fd527e0c385
msgid "The form parameters.  By default an :class:`~werkzeug.datastructures.ImmutableMultiDict` is returned from this function.  This can be changed by setting :attr:`parameter_storage_class` to a different type.  This might be necessary if the order of the form data is important."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.form:7
#: 3ed9659f925044e1b80acb8b209bb464
msgid "Please keep in mind that file uploads will not end up here, but instead in the :attr:`files` attribute."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.form:12
#: 1ec11507fed74dcdb87fcac9317ea9ec
msgid "Previous to Werkzeug 0.9 this would only contain form data for POST and PUT requests."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.request.Request.from_values:1
#: f09c046562934b1cafbe0e16ad162dbe
msgid "Create a new request object based on the values provided.  If environ is given missing values are filled from there.  This method is useful for small scripts when you need to simulate a request from an URL. Do not use this method for unittesting, there is a full featured client object (:class:`Client`) that allows to create multipart requests, support for cookies etc."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.request.Request.from_values:8
#: 1670f76ab4af463484ac51799366e43e
msgid "This accepts the same options as the :class:`~werkzeug.test.EnvironBuilder`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.request.Request.from_values:11
#: b6160241db704cad99d77b6e15d9be17
msgid "This method now accepts the same arguments as :class:`~werkzeug.test.EnvironBuilder`.  Because of this the `environ` parameter is now called `environ_overrides`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.request.Request.from_values:16
#: 3694e48660ac47ca92da201b603dda37
msgid "request object"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.full_path:1
#: 6be2b8a2048b4c5da926f0d6ad9b50aa
msgid "Requested path, including the query string."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.request.Request.get_data:1
#: 0cbf564f40ab4b3aa60f93a075858820
msgid "This reads the buffered incoming data from the client into one bytes object.  By default this is cached but that behavior can be changed by setting `cache` to `False`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.request.Request.get_data:5
#: 7052d1962d7c4500b11f6dd3eed5b458
msgid "Usually it's a bad idea to call this method without checking the content length first as a client could send dozens of megabytes or more to cause memory problems on the server."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.request.Request.get_data:9
#: 7305731b33674a0589af4152f8695d06
msgid "Note that if the form data was already parsed this method will not return anything as form data parsing does not cache the data like this method does.  To implicitly invoke form data parsing function set `parse_form_data` to `True`.  When this is done the return value of this method will be an empty string if the form parser handles the data.  This generally is not necessary as if the whole data is cached (which is the default) the form parser will used the cached data to parse the form data.  Please be generally aware of checking the content length first in any case before calling this method to avoid exhausting server memory."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.request.Request.get_data:20
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.get_data:8
#: 957fec8ee804454faf49b4c038d1c0cc
#: 0841010ca189447399feb8111baa4d48
msgid "If `as_text` is set to `True` the return value will be a decoded string."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.request.Request.get_json:1
#: 2266af444b1647478e09d8aac08babb1
msgid "Parse :attr:`data` as JSON."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.request.Request.get_json:3
#: 5a5051573a0741498ba178bf2164a344
msgid "If the mimetype does not indicate JSON (:mimetype:`application/json`, see :attr:`is_json`), or parsing fails, :meth:`on_json_loading_failed` is called and its return value is used as the return value. By default this raises a 415 Unsupported Media Type resp."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.request.Request.get_json:9
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.get_json:9
#: 2d09ff34196b4ee09bf6c2e12c9083b5
#: b870fcbe689c4ca2be4b2b73c335db22
msgid "Ignore the mimetype and always try to parse JSON."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.request.Request.get_json:10
#: 57773a6594d6471994e6c58e74dc9eee
msgid "Silence mimetype and parsing errors, and return ``None`` instead."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.request.Request.get_json:12
#: 1189f10eca854fddb1ad93207086b9a0
msgid "Store the parsed JSON to return for subsequent calls."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.json:12
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.request.Request.get_json:18
#: 306e521c2e6e48da942177179b7c25e2
#: 2e1ead94163e4d3e946c7d2dba2f3b83
msgid "Raise a 400 error if the content type is incorrect."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.host:1
#: cdbb62bde30d4dbcaf7f4ca73f770a9e
msgid "The host name the request was made to, including the port if it's non-standard. Validated with :attr:`trusted_hosts`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.host_url:1
#: 793ad1d484bd4757a2650127c8d183f0
msgid "The request URL scheme and host only."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.if_match:1
#: d0c3cfef756741c48859e4abf203d818
msgid "An object containing all the etags in the `If-Match` header."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.if_match:3
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.if_none_match:3
#: 55462335868745a48a67fddc0e3202b6
#: 1b71e71fc60042fc98204a1034fd9ef3
msgid ":class:`~werkzeug.datastructures.ETags`"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.if_modified_since:1
#: 030535a288d74e89a99ea7a026e6e68b
msgid "The parsed `If-Modified-Since` header as a datetime object."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.if_none_match:1
#: 8f87388cfff546829dada2c34d2b86ff
msgid "An object containing all the etags in the `If-None-Match` header."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.if_range:1
#: 62978ae0e1b14807906b35ff996b2111
msgid "The parsed ``If-Range`` header."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.if_range:3
#: bfe4534aa0f94d75b4a41e10b956ab36
msgid "``IfRange.date`` is timezone-aware."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.if_unmodified_since:1
#: ef024d19fad54d889cdee5ca3b7f04c5
msgid "The parsed `If-Unmodified-Since` header as a datetime object."
msgstr ""

#: ../../docstring of flask.Request.input_stream:1
#: bdaf3fd7ee9847b189769ef69eebf3ac
msgid "The raw WSGI input stream, without any safety checks."
msgstr ""

#: ../../docstring of flask.Request.input_stream:3
#: 91bea6a953c14b59aee6825e581d66cd
msgid "This is dangerous to use. It does not guard against infinite streams or reading past :attr:`content_length` or :attr:`max_content_length`."
msgstr ""

#: ../../docstring of flask.Request.input_stream:6
#: ca7d810103a54bc2a62c40842ec09124
msgid "Use :attr:`stream` instead."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.is_json:1
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.is_json:1
#: f1ae8d13965f4d12be3074f101c5282c
#: cbe5c98b244141a881435956785eb40f
msgid "Check if the mimetype indicates JSON data, either :mimetype:`application/json` or :mimetype:`application/*+json`."
msgstr ""

#: ../../docstring of flask.Request.is_multiprocess:1
#: f64e025fd6ee458eb55bd11b1052d1a3
msgid "boolean that is `True` if the application is served by a WSGI server that spawns multiple processes."
msgstr ""

#: ../../docstring of flask.Request.is_multithread:1
#: 8521cb98874e41d7b426449dfb5fe0fa
msgid "boolean that is `True` if the application is served by a multithreaded WSGI server."
msgstr ""

#: ../../docstring of flask.Request.is_run_once:1
#: 56e28556542143ae9d4ab20b824d366b
msgid "boolean that is `True` if the application will be executed only once in a process lifetime.  This is the case for CGI for example, but it's not guaranteed that the execution only happens one time."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.is_secure:1
#: eb56a0ed027541bea2300d22200f2db0
msgid "``True`` if the request was made with a secure protocol (HTTPS or WSS)."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.json:1
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.json:1
#: f549246397b248918941be19b15e8feb
#: 3416125821314f118350a481037f0848
msgid "The parsed JSON data if :attr:`mimetype` indicates JSON (:mimetype:`application/json`, see :attr:`is_json`)."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.json:4
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.json:4
#: f1ccc9a77ba0466fbe0c01b31b8c8d2c
#: ebb2b1c8614b46e7bbf0e6e7ed5285ef
msgid "Calls :meth:`get_json` with default arguments."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.json:6
#: a628b59264774b8fb3e8532ffb9a911b
msgid "If the request content type is not ``application/json``, this will raise a 415 Unsupported Media Type error."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.request.Request.make_form_data_parser:1
#: 43cbc0dff2e9454f81822e728cae0fb4
msgid "Creates the form data parser. Instantiates the :attr:`form_data_parser_class` with some parameters."
msgstr ""

#: ../../docstring of flask.Request.max_forwards:1
#: 8722ef68ccfe4ce6902c4b2caf266ff2
msgid "The Max-Forwards request-header field provides a mechanism with the TRACE and OPTIONS methods to limit the number of proxies or gateways that can forward the request to the next inbound server."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.mimetype:1
#: 9b4b664c6a944a66a0ac44d3e566028a
msgid "Like :attr:`content_type`, but without parameters (eg, without charset, type etc.) and always lowercase.  For example if the content type is ``text/HTML; charset=utf-8`` the mimetype would be ``'text/html'``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.mimetype_params:1
#: 1c6ff5de43fd4e7fbdfa7afee970b418
msgid "The mimetype parameters as dict.  For example if the content type is ``text/html; charset=utf-8`` the params would be ``{'charset': 'utf-8'}``."
msgstr ""

#: ../../docstring of flask.Request.origin:1
#: 4e31c40dfb6d415a8bac02350ec75abe
msgid "The host that the request originated from. Set :attr:`~CORSResponseMixin.access_control_allow_origin` on the response to indicate which origins are allowed."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.pragma:1
#: 3dae3af9953749fea5e1162f589c12bb
msgid "The Pragma general-header field is used to include implementation-specific directives that might apply to any recipient along the request/response chain.  All pragma directives specify optional behavior from the viewpoint of the protocol; however, some systems MAY require that behavior be consistent with the directives."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.range:1
#: 8fa55e09524542dc9bf13e92956c2a56
msgid "The parsed `Range` header."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.range:5
#: 4bd0b436eb1844a7bc1a44f5e5c3fc71
msgid ":class:`~werkzeug.datastructures.Range`"
msgstr ""

#: ../../docstring of flask.Request.referrer:1
#: b9ff53af4790414fbd2d2fa759279354
msgid "The Referer[sic] request-header field allows the client to specify, for the server's benefit, the address (URI) of the resource from which the Request-URI was obtained (the \"referrer\", although the header field is misspelled)."
msgstr ""

#: ../../docstring of flask.Request.remote_user:1
#: 6ab3667e0c5d47ec918369a21a112f95
msgid "If the server supports user authentication, and the script is protected, this attribute contains the username the user has authenticated as."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.root_url:1
#: c954051cf79145fe9c97d785d0799084
msgid "The request URL scheme, host, and root path. This is the root that the application is accessed from."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.script_root:1
#: f8b2dcc42bed4a1280da32c8b2889c9c
msgid "Alias for :attr:`self.root_path`. ``environ[\"SCRIPT_ROOT\"]`` without a trailing slash."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.stream:1
#: 7dc6d5dd4b2647cba655f816aa6bac69
msgid "The WSGI input stream, with safety checks. This stream can only be consumed once."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.stream:4
#: dc120ac134d74b9ebc353a07993c100b
msgid "Use :meth:`get_data` to get the full data as bytes or text. The :attr:`data` attribute will contain the full bytes only if they do not represent form data. The :attr:`form` attribute will contain the parsed form data in that case."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.stream:8
#: 6c5b384a528e4e5bbb869e8cb98c4ef2
msgid "Unlike :attr:`input_stream`, this stream guards against infinite streams or reading past :attr:`content_length` or :attr:`max_content_length`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.stream:11
#: ec9ccff6db8a497580d3fecbb537e9eb
msgid "If ``max_content_length`` is set, it can be enforced on streams if ``wsgi.input_terminated`` is set. Otherwise, an empty stream is returned."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.stream:14
#: 10c997389b9744c790b55f97a7b79ad2
msgid "If the limit is reached before the underlying stream is exhausted (such as a file that is too large, or an infinite stream), the remaining contents of the stream cannot be read safely. Depending on how the server handles this, clients may show a \"connection reset\" failure instead of seeing the 413 response."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.stream:19
#: 596e80a3d1cd48868bc23ce2bbe2f702
msgid "Check ``max_content_length`` preemptively and while reading."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.stream:22
#: ba047f0b213744a08d6a19ed887e213a
msgid "The stream is always set (but may be consumed) even if form parsing was accessed first."
msgstr ""

#: ../../docstring of flask.Request.trusted_hosts:1
#: ad420e05525849a385dd839ba5ce345b
msgid "Valid host names when handling requests. By default all hosts are trusted, which means that whatever the client says the host is will be accepted."
msgstr ""

#: ../../docstring of flask.Request.trusted_hosts:5
#: bb03c0bb9c514b5bbbd8e3a106537590
msgid "Because ``Host`` and ``X-Forwarded-Host`` headers can be set to any value by a malicious client, it is recommended to either set this property or implement similar validation in the proxy (if the application is being run behind one)."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.url:1
#: b06233f873d04af3be91ff57e21398bd
msgid "The full request URL with the scheme, host, root path, path, and query string."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.url_root:1
#: 0fc5309c35cd47598a62511e634abf41
msgid "Alias for :attr:`root_url`. The URL with scheme, host, and root path. For example, ``https://example.com/app/``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.user_agent:1
#: eefd7d35b6d743b697a06917718a6aee
msgid "The user agent. Use ``user_agent.string`` to get the header value. Set :attr:`user_agent_class` to a subclass of :class:`~werkzeug.user_agent.UserAgent` to provide parsing for the other properties or other extended data."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.user_agent:6
#: 7a04e0cbb9e642b381df8d42720d4ec0
msgid "The built-in parser was removed. Set ``user_agent_class`` to a ``UserAgent`` subclass to parse data from the string."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.values:1
#: e11eec14c91b4fdea29972fc3b0a2c8d
msgid "A :class:`werkzeug.datastructures.CombinedMultiDict` that combines :attr:`args` and :attr:`form`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.values:4
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.values:6
#: 37bffb32f09346f480ab8d342e8e484f
#: 9c266be53baa4627be985d94e21db825
msgid "For GET requests, only ``args`` are present, not ``form``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Request.want_form_data_parsed:1
#: 7cb83e7b62b0416e9da9a20ef1408f1e
msgid "``True`` if the request method carries content. By default this is true if a ``Content-Type`` is sent."
msgstr ""

#: ../../docstring of flask.Request.environ:1
#: 4f35b77fb30a4d519255bf07bc41c714
msgid "The WSGI environment containing HTTP headers and information from the WSGI server."
msgstr ""

#: ../../docstring of flask.Request.shallow:1
#: b7c16f454c3c461999eebf6164898342
msgid "Set when creating the request object. If ``True``, reading from the request body will cause a ``RuntimeException``. Useful to prevent modifying the stream from middleware."
msgstr ""

#: ../../docstring of flask.Request.method:1
#: cd68b0d9196345a38b3a52f775707d9d
msgid "The method the request was made with, such as ``GET``."
msgstr ""

#: ../../docstring of flask.Request.scheme:1
#: 08a5b1a2fe59425788d6ba7379bab0fc
msgid "The URL scheme of the protocol the request used, such as ``https`` or ``wss``."
msgstr ""

#: ../../docstring of flask.Request.server:1
#: f2a9836a122946d9ad11db8d719430d4
msgid "The address of the server. ``(host, port)``, ``(path, None)`` for unix sockets, or ``None`` if not known."
msgstr ""

#: ../../docstring of flask.Request.root_path:1
#: 616a78f5c53d4cf7bd3fdb022583ff3c
msgid "The prefix that the application is mounted under, without a trailing slash. :attr:`path` comes after this."
msgstr ""

#: ../../docstring of flask.Request.path:1
#: 68f002f68d88459eadee90982f6a4f72
msgid "The path part of the URL after :attr:`root_path`. This is the path used for routing within the application."
msgstr ""

#: ../../docstring of flask.Request.query_string:1
#: ce9919bdd0a9462da5ebaa57bcb05ab5
msgid "The part of the URL after the \"?\". This is the raw value, use :attr:`args` for the parsed values."
msgstr ""

#: ../../docstring of flask.Request.headers:1
#: 5267cbf6dc7f4682a67b2699b252b4ce
msgid "The headers received with the request."
msgstr ""

#: ../../docstring of flask.Request.remote_addr:1
#: 3e021002efda44e89e6fa9316446b90b
msgid "The address of the client sending the request."
msgstr ""

#: ../../project/docs/api.rst:36
#: 9e2917e0df5d4639adce21661d2e49eb
msgid "To access incoming request data, you can use the global `request` object. Flask parses incoming request data for you and gives you access to it through that global object. Internally Flask makes sure that you always get the correct data for the active thread if you are in a multithreaded environment."
msgstr ""

#: ../../project/docs/api.rst:42
#: ../../project/docs/api.rst:72
#: ../../project/docs/api.rst:174
#: ../../project/docs/api.rst:198
#: d07d40b4c3224e09bda44bfd20260a2b
#: 7cba4672826e42a7852798b7ddfc2406
#: 8634dc325ce04138a2cc10e7e41bea98
#: 8b897bbaf30c4a0f9d4a8687f04c63dd
msgid "This is a proxy. See :ref:`notes-on-proxies` for more information."
msgstr ""

#: ../../project/docs/api.rst:44
#: 43405c376d364eb4a39236acafabd877
msgid "The request object is an instance of a :class:`~flask.Request`."
msgstr ""

#: ../../project/docs/api.rst:48
#: a98e1bb5af08423697e04fabd65e4e54
msgid "Response Objects"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.wrappers.Response:1
#: f50e0869c69744c1a32e0551e886db84
msgid "The response object that is used by default in Flask.  Works like the response object from Werkzeug but is set to have an HTML mimetype by default.  Quite often you don't have to create this object yourself because :meth:`~flask.Flask.make_response` will take care of that for you."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.wrappers.Response:6
#: a05a5eeca3a24680b71d1a0a336f0b85
msgid "If you want to replace the response object used you can subclass this and set :attr:`~flask.Flask.response_class` to your subclass."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.wrappers.Response:9
#: 746e0a33a5844cac8aa19109dbbf0ff4
msgid "JSON support is added to the response, like the request. This is useful when testing to get the test client response data as JSON."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.wrappers.Response:15
#: 22a9ccd4fe01456fbbda2c7c38923fe0
msgid "Added :attr:`max_cookie_size`."
msgstr ""

#: ../../docstring of flask.Response.default_mimetype:1
#: a291f9aee72f45ca8d4134c4c3e2e818
msgid "the default mimetype if none is provided."
msgstr ""

#: ../../docstring of flask.Response.accept_ranges:1
#: 7ff21911d3d34b6bb17ea9e82e818176
msgid "The `Accept-Ranges` header. Even though the name would indicate that multiple values are supported, it must be one string token only."
msgstr ""

#: ../../docstring of flask.Response.accept_ranges:5
#: ed9adb8ed4bd4cffb002cbf0d62cc642
msgid "The values ``'bytes'`` and ``'none'`` are common."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.access_control_allow_credentials:1
#: 98e6e541be1846d4a8e301efff011ca6
msgid "Whether credentials can be shared by the browser to JavaScript code. As part of the preflight request it indicates whether credentials can be used on the cross origin request."
msgstr ""

#: ../../docstring of flask.Response.access_control_allow_headers:1
#: cec06ea70eb44b7289b44f42dd1d329c
msgid "Which headers can be sent with the cross origin request."
msgstr ""

#: ../../docstring of flask.Response.access_control_allow_methods:1
#: 595e084b9f81460d9f1d5fc3df8ca3cb
msgid "Which methods can be used for the cross origin request."
msgstr ""

#: ../../docstring of flask.Response.access_control_allow_origin:1
#: 3c5bf8701fe846b984960284fa900824
msgid "The origin or '*' for any origin that may make cross origin requests."
msgstr ""

#: ../../docstring of flask.Response.access_control_expose_headers:1
#: e5b874c3f91147ef9719cac6c369f62c
msgid "Which headers can be shared by the browser to JavaScript code."
msgstr ""

#: ../../docstring of flask.Response.access_control_max_age:1
#: 67efd92110384ded9b1482b733359f1f
msgid "The maximum age in seconds the access control settings can be cached for."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.add_etag:1
#: 7c5a558d935b4e25ac018f22f778f6b4
msgid "Add an etag for the current response if there is none yet."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.add_etag:3
#: 626951d5db2d4435a259f101e823e90d
msgid "SHA-1 is used to generate the value. MD5 may not be available in some environments."
msgstr ""

#: ../../docstring of flask.Response.age:1
#: 4bbfbe82c5d74ea1990a9c74abdade62
msgid "The Age response-header field conveys the sender's estimate of the amount of time since the response (or its revalidation) was generated at the origin server."
msgstr ""

#: ../../docstring of flask.Response.age:5
#: e62ea9016901427f929e74d0ccc00ba9
msgid "Age values are non-negative decimal integers, representing time in seconds."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.allow:1
#: 6ffbe790138543ed8c7b5b3f8ac7a6c0
msgid "The Allow entity-header field lists the set of methods supported by the resource identified by the Request-URI. The purpose of this field is strictly to inform the recipient of valid methods associated with the resource. An Allow header field MUST be present in a 405 (Method Not Allowed) response."
msgstr ""

#: ../../docstring of flask.Response.automatically_set_content_length:1
#: 3c266eda58e5471396ea333ad43632cb
msgid "Should this response object automatically set the content-length header if possible?  This is true by default."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.cache_control:1
#: 4828d5fa3943410cabd2b7f14d82f19c
msgid "The Cache-Control general-header field is used to specify directives that MUST be obeyed by all caching mechanisms along the request/response chain."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.calculate_content_length:1
#: bed60dc0be934e359ee67289cfedfb74
msgid "Returns the content length if available or `None` otherwise."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.call_on_close:1
#: c59ba60f9a5d4121a80f45c681e039f2
msgid "Adds a function to the internal list of functions that should be called as part of closing down the response.  Since 0.7 this function also returns the function that was passed so that this can be used as a decorator."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.close:1
#: 103912e33e504f89bb5fa6841471f753
msgid "Close the wrapped response if possible.  You can also use the object in a with statement which will automatically close it."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.close:4
#: 9a16e8cee7384a018d59c0bb421b2f06
msgid "Can now be used in a with statement."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.content_language:1
#: 9b0bd828431e4ac1a9bd24effbb1335a
msgid "The Content-Language entity-header field describes the natural language(s) of the intended audience for the enclosed entity. Note that this might not be equivalent to all the languages used within the entity-body."
msgstr ""

#: ../../docstring of flask.Response.content_length:1
#: 4be70d0dbf0a479dbd272d70e2c6e1ed
msgid "The Content-Length entity-header field indicates the size of the entity-body, in decimal number of OCTETs, sent to the recipient or, in the case of the HEAD method, the size of the entity-body that would have been sent had the request been a GET."
msgstr ""

#: ../../docstring of flask.Response.content_location:1
#: e685965d7ff840d684248558007267d2
msgid "The Content-Location entity-header field MAY be used to supply the resource location for the entity enclosed in the message when that entity is accessible from a location separate from the requested resource's URI."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.content_range:1
#: 1bf10dcc748447be8f1964b5be9970a9
msgid "The ``Content-Range`` header as a :class:`~werkzeug.datastructures.ContentRange` object. Available even if the header is not set."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.content_security_policy:1
#: 77dd4e51936b4b599c6d072e7d450d4d
msgid "The ``Content-Security-Policy`` header as a :class:`~werkzeug.datastructures.ContentSecurityPolicy` object. Available even if the header is not set."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.content_security_policy:5
#: 1670135c0b91415b8e2fadc7a1e1d5c4
msgid "The Content-Security-Policy header adds an additional layer of security to help detect and mitigate certain types of attacks."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.content_security_policy_report_only:1
#: 098f51280af7448ca73e8ed9568d98fb
msgid "The ``Content-Security-policy-report-only`` header as a :class:`~werkzeug.datastructures.ContentSecurityPolicy` object. Available even if the header is not set."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.content_security_policy_report_only:5
#: 8c546e86f98346cf845aab8f77a3da3a
msgid "The Content-Security-Policy-Report-Only header adds a csp policy that is not enforced but is reported thereby helping detect certain types of attacks."
msgstr ""

#: ../../docstring of flask.Response.cross_origin_embedder_policy:1
#: 7d6bb271260f43278c23a8854d81346b
msgid "Prevents a document from loading any cross-origin resources that do not explicitly grant the document permission. Values must be a member of the :class:`werkzeug.http.COEP` enum."
msgstr ""

#: ../../docstring of flask.Response.cross_origin_opener_policy:1
#: db2f89143c384affb0b8bf8de5e08af0
msgid "Allows control over sharing of browsing context group with cross-origin documents. Values must be a member of the :class:`werkzeug.http.COOP` enum."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.data:1
#: 559466d162304637ad3cf3d8a0668d50
msgid "A descriptor that calls :meth:`get_data` and :meth:`set_data`."
msgstr ""

#: ../../docstring of flask.Response.default_status:1
#: fa39b2b5b6514d30a8471c203d4509f2
msgid "the default status if none is provided."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.delete_cookie:1
#: c4db40cfbcd5430ab25bd8119206fa87
msgid "Delete a cookie.  Fails silently if key doesn't exist."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.delete_cookie:3
#: 5d18724d97d8402d9314e25d1605ba45
msgid "the key (name) of the cookie to be deleted."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.delete_cookie:4
#: f4ea1246b9b34e1381cb178857f2b8b0
msgid "if the cookie that should be deleted was limited to a path, the path has to be defined here."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.delete_cookie:6
#: 01c1658eb8a64e24a91ce479db9212da
msgid "if the cookie that should be deleted was limited to a domain, that domain has to be defined here."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.delete_cookie:8
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.set_cookie:19
#: 15e53d4e753d40b89cd9143e8e4e37eb
#: 584056a531854623baf08fe974cb84cc
msgid "If ``True``, the cookie will only be available via HTTPS."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.delete_cookie:10
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.set_cookie:21
#: 2a6c36cd45174ecfb3672e822dbfaa79
#: 8742253b308845c2ae8e5cdaa5227ea2
msgid "Disallow JavaScript access to the cookie."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.delete_cookie:11
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.set_cookie:22
#: ef2830497fae459b89e6e3ba9a3b8ed0
#: e7b468eee3da421088f3aa3d6934018e
msgid "Limit the scope of the cookie to only be attached to requests that are \"same-site\"."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.delete_cookie:13
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.set_cookie:24
#: bb9c58befb824257b5f1259686ed2fc9
#: 602646b4a4f24bbc93fd2e91abc9d3ed
msgid "If ``True``, the cookie will be partitioned."
msgstr ""

#: ../../docstring of flask.Response.expires:1
#: 42bd221dfe6d43b8abe6c103356d875b
msgid "The Expires entity-header field gives the date/time after which the response is considered stale. A stale cache entry may not normally be returned by a cache."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.force_type:1
#: 2eb997b225e346d89cb85beae6d21ddb
msgid "Enforce that the WSGI response is a response object of the current type.  Werkzeug will use the :class:`Response` internally in many situations like the exceptions.  If you call :meth:`get_response` on an exception you will get back a regular :class:`Response` object, even if you are using a custom subclass."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.force_type:7
#: 5709eae01df142dd919c154535959f88
msgid "This method can enforce a given response type, and it will also convert arbitrary WSGI callables into response objects if an environ is provided::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.force_type:18
#: 77a781912de14bd88d831b47a39cf605
msgid "This is especially useful if you want to post-process responses in the main dispatcher and use functionality provided by your subclass."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.force_type:21
#: 193ffa5125394491bc0356e81d78bb34
msgid "Keep in mind that this will modify response objects in place if possible!"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.force_type:24
#: 07179590fcf7406e97c42caff128b1ea
msgid "a response object or wsgi application."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.force_type:25
#: efb5a76ac6bb4aff860f2b88d6a31336
msgid "a WSGI environment object."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.force_type:26
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.from_app:11
#: 51f0bb8b4f334b86858b68b17832e031
#: dae37515df4e4e3e86c266e5fed59deb
msgid "a response object."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.freeze:1
#: 2242dfd07c7e4cf8bb03311749ddff15
msgid "Make the response object ready to be pickled. Does the following:"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.freeze:4
#: 88466a3ebebc445a9d0e500dc8b9bf66
msgid "Buffer the response into a list, ignoring :attr:`implicity_sequence_conversion` and :attr:`direct_passthrough`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.freeze:7
#: a7db9e5563f548ada4c4bea260e5bf7d
msgid "Set the ``Content-Length`` header."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.freeze:8
#: 5c573638c6214845b7303a4bf303d2f6
msgid "Generate an ``ETag`` header if one is not already set."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.freeze:10
#: 4334fd4057c6455295e4f93ac078fe16
msgid "Removed the ``no_etag`` parameter."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.freeze:13
#: 7fa190fae3b149369fe443da67200509
msgid "An ``ETag`` header is always added."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.freeze:16
#: 3caaa775d4d74580a8012aa2542872fe
msgid "The ``Content-Length`` header is set."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.from_app:1
#: 22b28a0b05c74d49b65c27cad3e58840
msgid "Create a new response object from an application output.  This works best if you pass it an application that returns a generator all the time.  Sometimes applications may use the `write()` callable returned by the `start_response` function.  This tries to resolve such edge cases automatically.  But if you don't get the expected output you should set `buffered` to `True` which enforces buffering."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.from_app:8
#: 8f96b3ae2cca4d54af46f966e765e368
msgid "the WSGI application to execute."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.from_app:9
#: 672880b12a9547f09965bc6a5aabbbc1
msgid "the WSGI environment to execute against."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.from_app:10
#: 698f07991fda4b699e233362d0e749e0
msgid "set to `True` to enforce buffering."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.get_app_iter:1
#: e895f385636d413084c1ddd8cb1281b0
msgid "Returns the application iterator for the given environ.  Depending on the request method and the current status code the return value might be an empty response rather than the one from the response."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.get_app_iter:5
#: 08511fb9784948ba8f29f2ae39b66925
msgid "If the request method is `HEAD` or the status code is in a range where the HTTP specification requires an empty response, an empty iterable is returned."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.get_app_iter:11
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.get_wsgi_headers:20
#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.get_wsgi_response:10
#: 5760ee3da6c648b0a431d57c69f57512
#: 3ea300831761478c9fa4e1464add646a
#: 1be03d9f997c440089d6c6e5a745535c
msgid "the WSGI environment of the request."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.get_app_iter:12
#: 653c4e09d26a4b4fb0830f8be27e1f1f
msgid "a response iterable."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.get_data:1
#: 252f804c63de4c39b4ed81c35a11b692
msgid "The string representation of the response body.  Whenever you call this property the response iterable is encoded and flattened.  This can lead to unwanted behavior if you stream big data."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.get_data:5
#: e39ca9d8e37c410db8b70be38b6f789e
msgid "This behavior can be disabled by setting :attr:`implicit_sequence_conversion` to `False`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.get_etag:1
#: 822ec566f14e4fea95748855bc44e9ae
msgid "Return a tuple in the form ``(etag, is_weak)``.  If there is no ETag the return value is ``(None, None)``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.get_json:1
#: c97509f6acf54fbcb3c7561c9f999508
msgid "Parse :attr:`data` as JSON. Useful during testing."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.get_json:3
#: 8fa598e292cd45349c7b17bc89a9e091
msgid "If the mimetype does not indicate JSON (:mimetype:`application/json`, see :attr:`is_json`), this returns ``None``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.get_json:7
#: 5f0ee705d27540139dc25c3c02f6fcab
msgid "Unlike :meth:`Request.get_json`, the result is not cached."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.get_json:10
#: bddaf6832b9d4d65aea15ce130da36a5
msgid "Silence parsing errors and return ``None`` instead."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.get_wsgi_headers:1
#: df35033763074f47ae49dd632c52e605
msgid "This is automatically called right before the response is started and returns headers modified for the given environment.  It returns a copy of the headers from the response with some modifications applied if necessary."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.get_wsgi_headers:6
#: 645dd669f2714fe8b57888d4c32ddbfa
msgid "For example the location header (if present) is joined with the root URL of the environment.  Also the content length is automatically set to zero here for certain status codes."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.get_wsgi_headers:10
#: 841b4e65e4384310af1c2dcbde545b31
msgid "Previously that function was called `fix_headers` and modified the response object in place.  Also since 0.6, IRIs in location and content-location headers are handled properly."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.get_wsgi_headers:15
#: f979dbf1704549639349e6fedebf2144
msgid "Also starting with 0.6, Werkzeug will attempt to set the content length if it is able to figure it out on its own.  This is the case if all the strings in the response iterable are already encoded and the iterable is buffered."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.get_wsgi_headers:21
#: e19a0d3cd3ce498daeedf41f9cea9758
msgid "returns a new :class:`~werkzeug.datastructures.Headers` object."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.get_wsgi_response:1
#: 82e97fb1a60e4ec98c7683a50998920f
msgid "Returns the final WSGI response as tuple.  The first item in the tuple is the application iterator, the second the status and the third the list of headers.  The response returned is created specially for the given environment.  For example if the request method in the WSGI environment is ``'HEAD'`` the response will be empty and only the headers and status code will be present."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.get_wsgi_response:11
#: b7962bac5a8d4cf6b634164be5b364dc
msgid "an ``(app_iter, status, headers)`` tuple."
msgstr ""

#: ../../docstring of flask.Response.implicit_sequence_conversion:1
#: a59488fe2ac7498cb5b8e883bc9243de
msgid "if set to `False` accessing properties on the response object will not try to consume the response iterator and convert it into a list."
msgstr ""

#: ../../docstring of flask.Response.implicit_sequence_conversion:6
#: c5ced6eae0b741619bd3cc0dcd7d9fbe
msgid "That attribute was previously called `implicit_seqence_conversion`. (Notice the typo).  If you did use this feature, you have to adapt your code to the name change."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.is_sequence:1
#: 9e454f421caa49f9b47ca9f1fd51a104
msgid "If the iterator is buffered, this property will be `True`.  A response object will consider an iterator to be buffered if the response attribute is a list or tuple."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.is_streamed:1
#: e1730e0f331e43c9a3a5e342be959f9e
msgid "If the response is streamed (the response is not an iterable with a length information) this property is `True`.  In this case streamed means that there is no information about the number of iterations. This is usually `True` if a generator is passed to the response object."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.is_streamed:6
#: b377a2fb8f0948b6b5e868d6e39fadec
msgid "This is useful for checking before applying some sort of post filtering that should not take place for streamed responses."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.iter_encoded:1
#: 0a78b81616e04262ae97fd81b67ef10d
msgid "Iter the response encoded with the encoding of the response. If the response object is invoked as WSGI application the return value of this method is used as application iterator unless :attr:`direct_passthrough` was activated."
msgstr ""

#: ../../docstring of flask.Response.last_modified:1
#: 115a459eca694ef58e15e31535fea217
msgid "The Last-Modified entity-header field indicates the date and time at which the origin server believes the variant was last modified."
msgstr ""

#: ../../docstring of flask.Response.location:1
#: a8d6c77677014e859db8453094697c7a
msgid "The Location response-header field is used to redirect the recipient to a location other than the Request-URI for completion of the request or identification of a new resource."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.make_conditional:1
#: 3b086212023341f7b8f5b6af616134b5
msgid "Make the response conditional to the request.  This method works best if an etag was defined for the response already.  The `add_etag` method can be used to do that.  If called without etag just the date header is set."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.make_conditional:6
#: 2cdf766ccd204f6695720941cb5b2acb
msgid "This does nothing if the request method in the request or environ is anything but GET or HEAD."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.make_conditional:9
#: 4ec230fbfd53401f9b1530a5495b9e69
msgid "For optimal performance when handling range requests, it's recommended that your response data object implements `seekable`, `seek` and `tell` methods as described by :py:class:`io.IOBase`.  Objects returned by :meth:`~werkzeug.wsgi.wrap_file` automatically implement those methods."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.make_conditional:14
#: d8ecab3ba51d49f099225337dba78c1b
msgid "It does not remove the body of the response because that's something the :meth:`__call__` function does for us automatically."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.make_conditional:17
#: 470ca5b893f5435fa72a5ef01e97a4b8
msgid "Returns self so that you can do ``return resp.make_conditional(req)`` but modifies the object in-place."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.make_conditional:20
#: c098aa085faf4e1a8e978a900a50041b
msgid "a request object or WSGI environment to be used to make the response conditional against."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.make_conditional:23
#: 5128f724486d462594bf7664a9f95d8f
msgid "This parameter dictates the value of `Accept-Ranges` header. If ``False`` (default), the header is not set. If ``True``, it will be set to ``\"bytes\"``. If it's a string, it will use this value."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.make_conditional:28
#: 5ab6b350b8414a64a380ce6e0769ff4c
msgid "Will be used only in valid Range Requests. It will set `Content-Range` complete length value and compute `Content-Length` real value. This parameter is mandatory for successful Range Requests completion."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.make_conditional:0
#: 5e1f53a3c21b4d5c85ea3ca8e6564b20
msgid "raises"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.make_conditional:33
#: ef54245b20a74375887fc090ff77d40f
msgid ":class:`~werkzeug.exceptions.RequestedRangeNotSatisfiable` if `Range` header could not be parsed or satisfied."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.make_conditional:36
#: 8fd9b744e54545e284a22c2b03dad852
msgid "Range processing is skipped if length is 0 instead of raising a 416 Range Not Satisfiable error."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.make_sequence:1
#: a1b018ba55a84b998a189fd13654fd16
msgid "Converts the response iterator in a list.  By default this happens automatically if required.  If `implicit_sequence_conversion` is disabled, this method is not automatically called and some properties might raise exceptions.  This also encodes all the items."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.mimetype:1
#: 01e4b94087044b178d394801ade71369
msgid "The mimetype (content type without charset etc.)"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.mimetype_params:1
#: b3f5ad5cc41341248e0a26aff9851ed7
msgid "The mimetype parameters as dict. For example if the content type is ``text/html; charset=utf-8`` the params would be ``{'charset': 'utf-8'}``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.retry_after:1
#: 41ff70dff2bb433c8db07d91e612c75b
msgid "The Retry-After response-header field can be used with a 503 (Service Unavailable) response to indicate how long the service is expected to be unavailable to the requesting client."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.retry_after:5
#: d92ab8cc90ab412b83d9a389c0b5a9bb
msgid "Time in seconds until expiration or date."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.set_cookie:1
#: b680f6b01f8c4571ae79f51fe3e6fec3
msgid "Sets a cookie."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.set_cookie:3
#: 6e813a3ce17b474e9f0e28644fd75184
msgid "A warning is raised if the size of the cookie header exceeds :attr:`max_cookie_size`, but the header will still be set."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.set_cookie:6
#: 15621804d5a2406d8e25014a52c96466
msgid "the key (name) of the cookie to be set."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.set_cookie:7
#: 02d71277e18145a4936f293091768184
msgid "the value of the cookie."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.set_cookie:8
#: 3d19ccfa2c6f4a6d8b67dbffbf051f2b
msgid "should be a number of seconds, or `None` (default) if the cookie should last only as long as the client's browser session."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.set_cookie:11
#: 46edaf2d5ac1426cb7602332ffef6190
msgid "should be a `datetime` object or UNIX timestamp."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.set_cookie:12
#: 755ed72b1d8e4ec4b0136602dafbc250
msgid "limits the cookie to a given path, per default it will span the whole domain."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.set_cookie:14
#: fea72e7e86e749638b558c9d4dd5b0b9
msgid "if you want to set a cross-domain cookie.  For example, ``domain=\"example.com\"`` will set a cookie that is readable by the domain ``www.example.com``, ``foo.example.com`` etc.  Otherwise, a cookie will only be readable by the domain that set it."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.set_cookie:26
#: efdb4524cc914900898721614881a33c
msgid "The ``partitioned`` parameter was added."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.wrappers.response.Response.set_data:1
#: 9eee0ee891a04924b33e58e36acff569
msgid "Sets a new string as response.  The value must be a string or bytes. If a string is set it's encoded to the charset of the response (utf-8 by default)."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of werkzeug.sansio.response.Response.set_etag:1
#: 3aa3f015be744813b49ecccc0086564e
msgid "Set the etag, and override the old one if there was one."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.status:1
#: e8a96a5268df4c2fba41bc159b1cb7ba
msgid "The HTTP status code as a string."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.status_code:1
#: 0dde1d5edeb4487986ca4b2967f5aca7
msgid "The HTTP status code as a number."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.stream:1
#: 96de805c38b44f3daa7ba49e0ab7833f
msgid "The response iterable as write-only stream."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.vary:1
#: 0564c5d2b2dd4f3186c8c658ac468e47
msgid "The Vary field value indicates the set of request-header fields that fully determines, while the response is fresh, whether a cache is permitted to use the response to reply to a subsequent request without revalidation."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.www_authenticate:1
#: 34f601f31caa4536987684689aed5dde
msgid "The ``WWW-Authenticate`` header parsed into a :class:`.WWWAuthenticate` object. Modifying the object will modify the header value."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.www_authenticate:4
#: 91701d38bb5d4bc7899d5fd6d2fb10c7
msgid "This header is not set by default. To set this header, assign an instance of :class:`.WWWAuthenticate` to this attribute."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.www_authenticate:13
#: a9033a2ce5024883972523a772ae93ca
msgid "Multiple values for this header can be sent to give the client multiple options. Assign a list to set multiple headers. However, modifying the items in the list will not automatically update the header values, and accessing this attribute will only ever return the first value."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.www_authenticate:18
#: b66c21ac96d7476aab65319e0f27caf0
msgid "To unset this header, assign ``None`` or use ``del``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.www_authenticate:20
#: 58e76a093b4f4484b81a589a1290b1eb
msgid "This attribute can be assigned to to set the header. A list can be assigned to set multiple header values. Use ``del`` to unset the header."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.www_authenticate:24
#: d2b813c1086e49b18c492d01ae3cfa53
msgid ":class:`WWWAuthenticate` is no longer a ``dict``. The ``token`` attribute was added for auth challenges that use a token instead of parameters."
msgstr ""

#: ../../docstring of flask.Response.response:1
#: c698d99d8696439eb5192987e4a391df
msgid "The response body to send as the WSGI iterable. A list of strings or bytes represents a fixed-length response, any other iterable is a streaming response. Strings are encoded to bytes as UTF-8."
msgstr ""

#: ../../docstring of flask.Response.response:5
#: ce3be436c7b943b798fea70cc06afbc3
msgid "Do not set to a plain string or bytes, that will cause sending the response to be very inefficient as it will iterate one byte at a time."
msgstr ""

#: ../../docstring of flask.Response.direct_passthrough:1
#: b31589ad46134fff97c3e7bf1bb356e0
msgid "Pass the response body directly through as the WSGI iterable. This can be used when the body is a binary file or other iterator of bytes, to skip some unnecessary checks. Use :func:`~werkzeug.utils.send_file` instead of setting this manually."
msgstr ""

#: ../../docstring of flask.Response.autocorrect_location_header:1
#: 37b6c5cffa0548c29fc99be71581b683
msgid "If a redirect ``Location`` header is a relative URL, make it an absolute URL, including scheme and domain."
msgstr ""

#: ../../docstring of flask.Response.autocorrect_location_header:4
#: dd5d63507b4745c2b7b6d3fe0ff57d65
msgid "This is disabled by default, so responses will send relative redirects."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.max_cookie_size:1
#: acb476c07607483e9a647dbbc59a73c9
msgid "Read-only view of the :data:`MAX_COOKIE_SIZE` config key."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/wrappers.py:docstring of flask.Response.max_cookie_size:3
#: af52fc5799f648a984621c2c82349251
msgid "See :attr:`~werkzeug.wrappers.Response.max_cookie_size` in Werkzeug's docs."
msgstr ""

#: ../../project/docs/api.rst:56
#: 3b699307e3eb4e6dbe9346954e743fe6
msgid "Sessions"
msgstr ""

#: ../../project/docs/api.rst:58
#: 2d004d64d41843bc8bdf293b2b11747a
msgid "If you have set :attr:`Flask.secret_key` (or configured it from :data:`SECRET_KEY`) you can use sessions in Flask applications. A session makes it possible to remember information from one request to another. The way Flask does this is by using a signed cookie. The user can look at the session contents, but can't modify it unless they know the secret key, so make sure to set that to something complex and unguessable."
msgstr ""

#: ../../project/docs/api.rst:65
#: 412095a4074e4bd788b6515167f0bafe
msgid "To access the current session you can use the :class:`session` object:"
msgstr ""

#: ../../project/docs/api.rst:69
#: 0bc3e45fdade42cd802a51a15d3a8538
msgid "The session object works pretty much like an ordinary dict, with the difference that it keeps track of modifications."
msgstr ""

#: ../../project/docs/api.rst:74
#: 6bc3064cb69d45c8a49de03edac0b110
msgid "The following attributes are interesting:"
msgstr ""

#: ../../project/docs/api.rst:78
#: 05fc47cd2e6d4c4eab57a84905ed27cb
msgid "``True`` if the session is new, ``False`` otherwise."
msgstr ""

#: ../../project/docs/api.rst:82
#: ad4474aa7e6f478e86a2df09a4a16d2b
msgid "``True`` if the session object detected a modification. Be advised that modifications on mutable structures are not picked up automatically, in that situation you have to explicitly set the attribute to ``True`` yourself. Here an example::"
msgstr ""

#: ../../project/docs/api.rst:95
#: 8f82ec2abdf64961bd84bb03962d6ff7
msgid "If set to ``True`` the session lives for :attr:`~flask.Flask.permanent_session_lifetime` seconds. The default is 31 days. If set to ``False`` (which is the default) the session will be deleted when the user closes the browser."
msgstr ""

#: ../../project/docs/api.rst:102
#: 096d9d255ca449c2b1df8a3bf20842b1
msgid "Session Interface"
msgstr ""

#: ../../project/docs/api.rst:106
#: b03bc0e5e2dd4afbb2893bd7667872e9
msgid "The session interface provides a simple way to replace the session implementation that Flask is using."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface:1
#: 1064b17609074f75a5be29453b1a9732
msgid "The basic interface you have to implement in order to replace the default session interface which uses werkzeug's securecookie implementation.  The only methods you have to implement are :meth:`open_session` and :meth:`save_session`, the others have useful defaults which you don't need to change."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface:7
#: 751dd4f148da4ecdbbd0f026df26516f
msgid "The session object returned by the :meth:`open_session` method has to provide a dictionary like interface plus the properties and methods from the :class:`SessionMixin`.  We recommend just subclassing a dict and adding that mixin::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface:15
#: 5072f974ec1649d88979a47cbab52c4d
msgid "If :meth:`open_session` returns ``None`` Flask will call into :meth:`make_null_session` to create a session that acts as replacement if the session support cannot work because some requirement is not fulfilled.  The default :class:`NullSession` class that is created will complain that the secret key was not set."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface:21
#: eafa92cbf87448d2b8d882094970d7ba
msgid "To replace the session interface on an application all you have to do is to assign :attr:`flask.Flask.session_interface`::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface:27
#: 698d04931e9f49df91787082504c6f54
msgid "Multiple requests with the same session may be sent and handled concurrently. When implementing a new session interface, consider whether reads or writes to the backing store must be synchronized. There is no guarantee on the order in which the session for each request is opened or saved, it will occur in the order that requests begin and end processing."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.NullSession:1
#: 5e2e01fa927b44169d881dfa8e6db0fa
msgid ":meth:`make_null_session` will look here for the class that should be created when a null session is requested.  Likewise the :meth:`is_null_session` method will perform a typecheck against this type."
msgstr ""

#: ../../docstring of flask.sessions.SessionInterface.pickle_based:1
#: c792de89c0574fac96284dcded4bda35
msgid "A flag that indicates if the session interface is pickle based. This can be used by Flask extensions to make a decision in regards to how to deal with the session object."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.make_null_session:1
#: 17a95b5a3df642f998a11bb9db30ec02
msgid "Creates a null session which acts as a replacement object if the real session support could not be loaded due to a configuration error.  This mainly aids the user experience because the job of the null session is to still support lookup without complaining but modifications are answered with a helpful error message of what failed."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.make_null_session:8
#: 3475fcf92b6f4749b4521a6cd96c0853
msgid "This creates an instance of :attr:`null_session_class` by default."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.is_null_session:1
#: 4f406eed786b46fc87b8fa5d8ebc998d
msgid "Checks if a given object is a null session.  Null sessions are not asked to be saved."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.is_null_session:4
#: 18c43ffadd3c4debba5d0cdf25cf89df
msgid "This checks if the object is an instance of :attr:`null_session_class` by default."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.get_cookie_name:1
#: 4097ced2beec4f7a8c82927b39baa2f5
msgid "The name of the session cookie. Uses``app.config[\"SESSION_COOKIE_NAME\"]``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.get_cookie_domain:1
#: d0571c9aa8ad455d9c7381d06dc3a065
msgid "The value of the ``Domain`` parameter on the session cookie. If not set, browsers will only send the cookie to the exact domain it was set from. Otherwise, they will send it to any subdomain of the given value as well."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.get_cookie_domain:5
#: eee4570f414b4668957884582a4ac9a1
msgid "Uses the :data:`SESSION_COOKIE_DOMAIN` config."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.get_cookie_domain:7
#: ff107e29398344c49195b0ab396db401
msgid "Not set by default, does not fall back to ``SERVER_NAME``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.get_cookie_path:1
#: 488c848a35ee4ed0b735574ca1a0cd0c
msgid "Returns the path for which the cookie should be valid.  The default implementation uses the value from the ``SESSION_COOKIE_PATH`` config var if it's set, and falls back to ``APPLICATION_ROOT`` or uses ``/`` if it's ``None``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.get_cookie_httponly:1
#: f3f376d02c4d488b81c81dffa7b7813c
msgid "Returns True if the session cookie should be httponly.  This currently just returns the value of the ``SESSION_COOKIE_HTTPONLY`` config var."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.get_cookie_secure:1
#: 3af2e5df468e46148c472b15fe742374
msgid "Returns True if the cookie should be secure.  This currently just returns the value of the ``SESSION_COOKIE_SECURE`` setting."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.get_cookie_samesite:1
#: c3c30464010d47e7acb7ffaab075bf31
msgid "Return ``'Strict'`` or ``'Lax'`` if the cookie should use the ``SameSite`` attribute. This currently just returns the value of the :data:`SESSION_COOKIE_SAMESITE` setting."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.get_cookie_partitioned:1
#: 402d527f4fed4774ac83154d9f386292
msgid "Returns True if the cookie should be partitioned. By default, uses the value of :data:`SESSION_COOKIE_PARTITIONED`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.get_expiration_time:1
#: a0aed5b935204b4ab76752c0e739562c
msgid "A helper method that returns an expiration date for the session or ``None`` if the session is linked to the browser session.  The default implementation returns now + the permanent session lifetime configured on the application."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.should_set_cookie:1
#: 317ea6d5ac204cf3bda217cb969b2b9d
msgid "Used by session backends to determine if a ``Set-Cookie`` header should be set for this session cookie for this response. If the session has been modified, the cookie is set. If the session is permanent and the ``SESSION_REFRESH_EACH_REQUEST`` config is true, the cookie is always set."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.should_set_cookie:7
#: da071d4c497d49ada0bfc063469371fa
msgid "This check is usually skipped if the session was deleted."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SecureCookieSessionInterface.open_session:1
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.open_session:1
#: cabb32f99f604369b6ae5814b8d7088c
#: 2ca8d6c736804b2dbaa4affcbc72960f
msgid "This is called at the beginning of each request, after pushing the request context, before matching the URL."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SecureCookieSessionInterface.open_session:4
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.open_session:4
#: 934b8827587347e39a51b768a672ed20
#: 8d6f4f98e88c40a9a013563c5430a6ea
msgid "This must return an object which implements a dictionary-like interface as well as the :class:`SessionMixin` interface."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SecureCookieSessionInterface.open_session:7
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.open_session:7
#: 4b68238424714de7ba335b69af6a7623
#: a36ebb5096c6485283954d8bdd567106
msgid "This will return ``None`` to indicate that loading failed in some way that is not immediately an error. The request context will fall back to using :meth:`make_null_session` in this case."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SecureCookieSessionInterface.save_session:1
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionInterface.save_session:1
#: 060eb854c92b47c4b152f5f3f6dd2836
#: 122594e200d6437faacea7bb343baf8c
msgid "This is called at the end of each request, after generating a response, before removing the request context. It is skipped if :meth:`is_null_session` returns ``True``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SecureCookieSessionInterface:1
#: efcd7c3e4f6e4ef29c56ea1c035e51a3
msgid "The default session interface that stores sessions in signed cookies through the :mod:`itsdangerous` module."
msgstr ""

#: ../../docstring of flask.sessions.SecureCookieSessionInterface.salt:1
#: 1eae35834fa44f11be4b40d20826a4be
msgid "the salt that should be applied on top of the secret key for the signing of cookie based sessions."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions._lazy_sha1:1
#: a8f2040e79aa43aea11c5d7835bc45c0
msgid "the hash function to use for the signature.  The default is sha1"
msgstr ""

#: ../../docstring of flask.sessions.SecureCookieSessionInterface.key_derivation:1
#: c84f629288e64bfe878fd17a26268cb5
msgid "the name of the itsdangerous supported key derivation.  The default is hmac."
msgstr ""

#: ../../docstring of flask.sessions.SecureCookieSessionInterface.serializer:1
#: d2d93fcd5ccb458dacea0312c06f4e7c
msgid "A python serializer for the payload.  The default is a compact JSON derived serializer with support for some extra Python types such as datetime objects or tuples."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SecureCookieSession:1
#: 99c3a40d03264f2ba0d4f433d3a19335
msgid "Base class for sessions based on signed cookies."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SecureCookieSession:3
#: 2bed9018f10149509429f26ddde1ebe6
msgid "This session backend will set the :attr:`modified` and :attr:`accessed` attributes. It cannot reliably track whether a session is new (vs. empty), so :attr:`new` remains hard coded to ``False``."
msgstr ""

#: ../../docstring of flask.sessions.SecureCookieSession.modified:1
#: ea3d5bb7e94b471881f2dea78f868180
msgid "When data is changed, this is set to ``True``. Only the session dictionary itself is tracked; if the session contains mutable data (for example a nested dict) then this must be set to ``True`` manually when modifying that data. The session cookie will only be written to the response if this is ``True``."
msgstr ""

#: ../../docstring of flask.sessions.SecureCookieSession.accessed:1
#: c90f822f01894f428daf6d50975ead6f
msgid "header, which allows caching proxies to cache different pages for different users."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.NullSession._fail:3
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SecureCookieSession.get:1
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SecureCookieSession.setdefault:3
#: 51828459d0864255a799dd0faa44be47
#: 73af4b4366c04d0a8223699ebee38958
#: 9890f793076f4d19bf3f5a05d67b9d18
msgid "Return the value for key if key is in the dictionary, else default."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.NullSession._fail:1
#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SecureCookieSession.setdefault:1
#: ecf8399732cf4ffb9d11aaaf8378b1f8
#: 8ca6862bd156447fbfe2af1dda21611f
msgid "Insert key with a value of default if key is not in the dictionary."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.NullSession:1
#: 0ad3b068558d4d9a908b0e9200a5f74f
msgid "Class used to generate nicer error messages if sessions are not available.  Will still allow read-only access to the empty session but fail on setting."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.NullSession._fail:1
#: 3fa837008cbd48a8a2e98c1a432a4b78
msgid "Remove all items from the dict."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.NullSession._fail:1
#: 13f7099e2b024d37813e338249bcedd6
msgid "If the key is not found, return the default if given; otherwise, raise a KeyError."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.NullSession._fail:1
#: dfe70032dad94d39b859313c5201ff1f
msgid "Remove and return a (key, value) pair as a 2-tuple."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.NullSession._fail:3
#: f7269a608db24df4b9ea47594c7c2597
msgid "Pairs are returned in LIFO (last-in, first-out) order. Raises KeyError if the dict is empty."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.NullSession._fail:1
#: 87a685b9f645465097889a0d3bfe7f51
msgid "If E is present and has a .keys() method, then does:  for k in E: D[k] = E[k] If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v In either case, this is followed by: for k in F:  D[k] = F[k]"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionMixin:1
#: 9a13efba35d44c6e9c3dc3ccf5a2e412
msgid "Expands a basic dictionary with session attributes."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sessions.py:docstring of flask.sessions.SessionMixin.permanent:1
#: 359b2b2344cc4a74aef7251e8e36f9bc
msgid "This reflects the ``'_permanent'`` key in the dict."
msgstr ""

#: ../../docstring of flask.sessions.SessionMixin.modified:1
#: 82b6a87d9fe7428493f722ee8a588407
msgid "Some implementations can detect changes to the session and set this when that happens. The mixin default is hard coded to ``True``."
msgstr ""

#: ../../docstring of flask.sessions.SessionMixin.accessed:1
#: 894fe51160a440b3b0eac27b2c414b60
msgid "Some implementations can detect when session data is read or written and set this when that happens. The mixin default is hard coded to ``True``."
msgstr ""

#: ../../project/docs/api.rst:126
#: 183c367822ed46359704e87fc81ea2d7
msgid "Notice"
msgstr ""

#: ../../project/docs/api.rst:128
#: 42e9c300770845558bb8ffad2c145a34
msgid "The :data:`PERMANENT_SESSION_LIFETIME` config can be an integer or ``timedelta``. The :attr:`~flask.Flask.permanent_session_lifetime` attribute is always a ``timedelta``."
msgstr ""

#: ../../project/docs/api.rst:134
#: a0f0da325b8e49dc9cd9f81e7d4c9c4e
msgid "Test Client"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/testing.py:docstring of flask.testing.FlaskClient:1
#: f2b2bfdb948148e898c8573911dcaf45
msgid "Works like a regular Werkzeug test client but has knowledge about Flask's contexts to defer the cleanup of the request context until the end of a ``with`` block. For general information about how to use this class refer to :class:`werkzeug.test.Client`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/testing.py:docstring of flask.testing.FlaskClient:6
#: aaea31c18e324946b0fc801f645da11b
msgid "`app.test_client()` includes preset default environment, which can be set after instantiation of the `app.test_client()` object in `client.environ_base`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/testing.py:docstring of flask.testing.FlaskClient:11
#: f806c59b97b9466db08ebd59bc68105c
msgid "Basic usage is outlined in the :doc:`/testing` chapter."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/testing.py:docstring of flask.testing.FlaskClient.session_transaction:1
#: 4f12fa3d42fb4c1ca1b1dd31164dc02f
msgid "When used in combination with a ``with`` statement this opens a session transaction.  This can be used to modify the session that the test client uses.  Once the ``with`` block is left the session is stored back."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/testing.py:docstring of flask.testing.FlaskClient.session_transaction:11
#: 63b51abd1c2e45048e2aabda433a173a
msgid "Internally this is implemented by going through a temporary test request context and since session handling could depend on request variables this function accepts the same arguments as :meth:`~flask.Flask.test_request_context` which are directly passed through."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/testing.py:docstring of flask.testing.FlaskClient.open:1
#: 637ab3d7aeb548ffafa90910231e6803
msgid "Generate an environ dict from the given arguments, make a request to the application using it, and return the response."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/testing.py:docstring of flask.testing.FlaskClient.open:4
#: b1bf5dc093ed4048829a79a647c144fe
msgid "Passed to :class:`EnvironBuilder` to create the environ for the request. If a single arg is passed, it can be an existing :class:`EnvironBuilder` or an environ dict."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/testing.py:docstring of flask.testing.FlaskClient.open:7
#: e1d09a37fbfd468792095e365cc331ff
msgid "Convert the iterator returned by the app into a list. If the iterator has a ``close()`` method, it is called automatically."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/testing.py:docstring of flask.testing.FlaskClient.open:10
#: 40625eadca71464fa35864cc29afe111
msgid "Make additional requests to follow HTTP redirects until a non-redirect status is returned. :attr:`TestResponse.history` lists the intermediate responses."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/testing.py:docstring of flask.testing.FlaskClient.open:15
#: 5e728d75b1a74481afb6cdfd6af675f5
msgid "Removed the ``as_tuple`` parameter."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/testing.py:docstring of flask.testing.FlaskClient.open:18
#: eb518cfd90554d13915d2a7f541de2de
msgid "The request input stream is closed when calling ``response.close()``. Input streams for redirects are automatically closed."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/testing.py:docstring of flask.testing.FlaskClient.open:23
#: c376a9cec483472586be747aa344d563
msgid "If a dict is provided as file in the dict for the ``data`` parameter the content type has to be called ``content_type`` instead of ``mimetype``. This change was made for consistency with :class:`werkzeug.FileWrapper`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/testing.py:docstring of flask.testing.FlaskClient.open:29
#: 0f8c557beca0499599d4cee04ea9f928
msgid "Added the ``follow_redirects`` parameter."
msgstr ""

#: ../../project/docs/api.rst:143
#: f5f6829bb102473ba4ada9ce90724e58
msgid "Test CLI Runner"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/testing.py:docstring of flask.testing.FlaskCliRunner:1
#: 83d11c10d64047d79df15eff6e1e5357
msgid "A :class:`~click.testing.CliRunner` for testing a Flask app's CLI commands. Typically created using :meth:`~flask.Flask.test_cli_runner`. See :ref:`testing-cli`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/testing.py:docstring of flask.testing.FlaskCliRunner.invoke:1
#: 3945e73cd91649e7a8931ce65b70fd84
msgid "Invokes a CLI command in an isolated environment. See :meth:`CliRunner.invoke <click.testing.CliRunner.invoke>` for full method documentation. See :ref:`testing-cli` for examples."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/testing.py:docstring of flask.testing.FlaskCliRunner.invoke:5
#: 85d4dfa969844be0a36728f9bddb62a5
msgid "If the ``obj`` argument is not given, passes an instance of :class:`~flask.cli.ScriptInfo` that knows how to load the Flask app being tested."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/testing.py:docstring of flask.testing.FlaskCliRunner.invoke:9
#: e6e3b7a6d92c4779a8a21291655b46be
msgid "Command object to invoke. Default is the app's :attr:`~flask.app.Flask.cli` group."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/testing.py:docstring of flask.testing.FlaskCliRunner.invoke:11
#: 88ab1a60f64b42c59c10bde7449112a9
msgid "List of strings to invoke the command with."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/testing.py:docstring of flask.testing.FlaskCliRunner.invoke:13
#: 5a5f8e904f9f4d3c9f57d9ed26237045
msgid "a :class:`~click.testing.Result` object."
msgstr ""

#: ../../project/docs/api.rst:152
#: 63f70ef00a874fd1a24badf0b69764c7
msgid "Application Globals"
msgstr ""

#: ../../project/docs/api.rst:156
#: 2344cfab5f6a481c9f5ea3f4e6d735c5
msgid "To share data that is valid for one request only from one function to another, a global variable is not good enough because it would break in threaded environments. Flask provides you with a special object that ensures it is only valid for the active request and that will return different values for each request. In a nutshell: it does the right thing, like it does for :class:`request` and :class:`session`."
msgstr ""

#: ../../project/docs/api.rst:165
#: f42d782132ce42c4ab44157342ddcf2f
msgid "A namespace object that can store data during an :doc:`application context </appcontext>`. This is an instance of :attr:`Flask.app_ctx_globals_class`, which defaults to :class:`ctx._AppCtxGlobals`."
msgstr ""

#: ../../project/docs/api.rst:170
#: dc70e20b794f4a649c51c7733ce025c3
msgid "This is a good place to store resources during a request. For example, a ``before_request`` function could load a user object from a session id, then set ``g.user`` to be used in the view function."
msgstr ""

#: ../../project/docs/api.rst:176
#: c7aea0c6b013406d868a2f94bb3ddf5a
msgid "Bound to the application context instead of the request context."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx._AppCtxGlobals:1
#: cdc7d9d21bb449348f8f454c1523f70a
msgid "A plain object. Used as a namespace for storing data during an application context."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx._AppCtxGlobals:4
#: 71be25aebe074f58863a1759e5c6d142
msgid "Creating an app context automatically creates this object, which is made available as the :data:`g` proxy."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx._AppCtxGlobals:9
#: eedcbed3e9bb4888b12e1adf18bc91c0
msgid "Check whether an attribute is present."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx._AppCtxGlobals:15
#: caf35e8127c548868417d7f94871e429
msgid "Return an iterator over the attribute names."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx._AppCtxGlobals.get:1
#: 0b847abcc3d441e599b2ce849faa51b1
msgid "Get an attribute by name, or a default value. Like :meth:`dict.get`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx._AppCtxGlobals.get:4
#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx._AppCtxGlobals.setdefault:4
#: 8cb3295ec1854f3bbbf0c5a73b998297
#: c421cb4f6ae04eb09d850cd7ab12d3ac
msgid "Name of attribute to get."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx._AppCtxGlobals.get:5
#: 0fac985c6d844592bd49c68867a8cd1f
msgid "Value to return if the attribute is not present."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx._AppCtxGlobals.pop:1
#: aa231c56fe06475fb611ae79b2e37a4d
msgid "Get and remove an attribute by name. Like :meth:`dict.pop`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx._AppCtxGlobals.pop:3
#: 399ad791108241dd9d9697a18aa0eb9f
msgid "Name of attribute to pop."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx._AppCtxGlobals.pop:4
#: 4a75d35230e043a19b48039c43a55dda
msgid "Value to return if the attribute is not present, instead of raising a ``KeyError``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx._AppCtxGlobals.setdefault:1
#: 804fae6805d2441e92d2e51cfe2fd033
msgid "Get the value of an attribute if it is present, otherwise set and return a default value. Like :meth:`dict.setdefault`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx._AppCtxGlobals.setdefault:5
#: 95662cc838754739b681c9f53a970d82
msgid "Value to set and return if the attribute is not present."
msgstr ""

#: ../../project/docs/api.rst:184
#: adc328da35794bdf9b5c4cb76c9a0eb6
msgid "Useful Functions and Classes"
msgstr ""

#: ../../project/docs/api.rst:188
#: 1f10e2877a9e4872a1a04e64d73b96e6
msgid "A proxy to the application handling the current request. This is useful to access the application without needing to import it, or if it can't be imported, such as when using the application factory pattern or in blueprints and extensions."
msgstr ""

#: ../../project/docs/api.rst:193
#: 951aaf02ef9e429da7ba89c3ca6d2ffb
msgid "This is only available when an :doc:`application context </appcontext>` is pushed. This happens automatically during requests and CLI commands. It can be controlled manually with :meth:`~flask.Flask.app_context`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.has_request_context:1
#: d434128957234f588c638f3db1a27ae6
msgid "If you have code that wants to test if a request context is there or not this function can be used.  For instance, you may want to take advantage of request information if the request object is available, but fail silently if it is unavailable."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.has_request_context:16
#: b28b972a85844b4a9e2ead9409bf90bd
msgid "Alternatively you can also just test any of the context bound objects (such as :class:`request` or :class:`g`) for truthness::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.copy_current_request_context:1
#: 136124f3fe9f4669952631c00bf9300a
msgid "A helper function that decorates a function to retain the current request context.  This is useful when working with greenlets.  The moment the function is decorated a copy of the request context is created and then pushed when the function is called.  The current session is also included in the copied request context."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.after_this_request:5
#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.copy_current_request_context:7
#: 912c293bb6af42e59e4c2ca13ac5f250
#: 5a28f03381154a60a343657a7dea5dd1
msgid "Example::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.has_app_context:1
#: a54e2874df404199a1e1cd6c886906b2
msgid "Works like :func:`has_request_context` but for the application context.  You can also just do a boolean check on the :data:`current_app` object instead."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.url_for:3
#: fa70d1eab5f84947a0550aadfeef615c
msgid "This requires an active request or application context, and calls :meth:`current_app.url_for() <flask.Flask.url_for>`. See that method for full documentation."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.url_for:23
#: dfbbb90bb6e74b01b45f5da9ed30c928
msgid "Calls ``current_app.url_for``, allowing an app to override the behavior."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.url_for:27
#: 576a69d540fa4f7e8cd0a9840288dc2b
msgid "The ``_scheme`` parameter was added."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.url_for:30
#: 2769e29728c24aadbcfa1697fe9ba9cb
msgid "The ``_anchor`` and ``_method`` parameters were added."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.url_for:33
#: a8c10434c447433cb8e7a0321e05941b
msgid "Calls ``app.handle_url_build_error`` on build errors."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.abort:1
#: f5727ec68d5944e5879f3df740010fde
msgid "Raise an :exc:`~werkzeug.exceptions.HTTPException` for the given status code."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.abort:4
#: d65a7b8fbc064b6aa9f5d6126189524a
msgid "If :data:`~flask.current_app` is available, it will call its :attr:`~flask.Flask.aborter` object, otherwise it will use :func:`werkzeug.exceptions.abort`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.abort:8
#: e9dab92960214747a4a79762d45ba467
msgid "The status code for the exception, which must be registered in ``app.aborter``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.abort:10
#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.abort:11
#: f9689651da854b83aafbfb3908f486ed
#: 3637448c8d1e4b6880f5a604ef035c78
msgid "Passed to the exception."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.abort:13
#: 6660119f547d473d8a2777f6d1a39f5a
msgid "Calls ``current_app.aborter`` if available instead of always using Werkzeug's default ``abort``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.redirect:3
#: ffb1f989c1b74e45ac432d3a6d757125
msgid "If :data:`~flask.current_app` is available, it will use its :meth:`~flask.Flask.redirect` method, otherwise it will use :func:`werkzeug.utils.redirect`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.redirect:9
#: 728832bbe16945e88260603c8b1330ae
msgid "The response class to use. Not used when ``current_app`` is active, which uses ``app.response_class``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.redirect:12
#: 3f2a9c6fe7b04dc699cf8ed3bdfc923c
msgid "Calls ``current_app.redirect`` if available instead of always using Werkzeug's default ``redirect``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.make_response:1
#: a69f5a9624344d4ba924da30f4b0de03
msgid "Sometimes it is necessary to set additional headers in a view.  Because views do not have to return response objects but can return a value that is converted into a response object by Flask itself, it becomes tricky to add headers to it.  This function can be called instead of using a return and you will get a response object which you can use to attach headers."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.make_response:7
#: b01810aed7bd42e498079d00cd086781
msgid "If view looked like this and you want to add a new header::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.make_response:12
#: 01c313075008492292831170665ddd34
msgid "You can now do something like this::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.make_response:19
#: d28d985bce634463b91fce7885cd3d93
msgid "This function accepts the very same arguments you can return from a view function.  This for example creates a response with a 404 error code::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.make_response:25
#: 361d0c65eac5462490a9a850d8e7812c
msgid "The other use case of this function is to force the return value of a view function into a response which is helpful with view decorators::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.make_response:32
#: 69ba8da76c9f4af68c42780f0a8e8478
msgid "Internally this function does the following things:"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.make_response:34
#: d1179e22a21e499fbed08572f239beae
msgid "if no arguments are passed, it creates a new response argument"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.make_response:35
#: 8d77ee715f7c4a55b46a771e469ca794
msgid "if one argument is passed, :meth:`flask.Flask.make_response` is invoked with it."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.make_response:37
#: 79af0b90a39a4a24b9fc125a7d326a75
msgid "if more than one argument is passed, the arguments are passed to the :meth:`flask.Flask.make_response` function as tuple."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.after_this_request:1
#: dccdb38c6d4a4d3dbc911e6cf652635b
msgid "Executes a function after this request.  This is useful to modify response objects.  The function is passed the response object and has to return the same or a new one."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.after_this_request:15
#: 1f9fb161a23d4418914ad387a424bf3b
msgid "This is more useful if a function other than the view function wants to modify a response.  For instance think of a decorator that wants to add some headers without converting the return value into a response object."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:1
#: b831266af5b04c0c83fd378464f756b3
msgid "Send the contents of a file to the client."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:3
#: 638de934194f4908abbd46a37e41bc65
msgid "The first argument can be a file path or a file-like object. Paths are preferred in most cases because Werkzeug can manage the file and get extra information from the path. Passing a file-like object requires that the file is opened in binary mode, and is mostly useful when building a file in memory with :class:`io.BytesIO`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:9
#: f11c1f6764af465bac2e7695d6d1fbe3
msgid "Never pass file paths provided by a user. The path is assumed to be trusted, so a user could craft a path to access a file you didn't intend. Use :func:`send_from_directory` to safely serve user-requested paths from within a directory."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:14
#: 413d2bc0e8ba49588782137624555ba5
msgid "If the WSGI server sets a ``file_wrapper`` in ``environ``, it is used, otherwise Werkzeug's built-in wrapper is used. Alternatively, if the HTTP server supports ``X-Sendfile``, configuring Flask with ``USE_X_SENDFILE = True`` will tell the server to send the given path, which is much more efficient than reading it in Python."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:20
#: ab62de29320f4f80920ace073ea35b66
msgid "The path to the file to send, relative to the current working directory if a relative path is given. Alternatively, a file-like object opened in binary mode. Make sure the file pointer is seeked to the start of the data."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:24
#: a8fa3e1abad74a78be43ac7b988e6351
msgid "The MIME type to send for the file. If not provided, it will try to detect it from the file name."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:26
#: a10dfbf182814d678c67c8fcf6533471
msgid "Indicate to a browser that it should offer to save the file instead of displaying it."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:28
#: e117d2c04c4b45f39d1519070e88f128
msgid "The default name browsers will use when saving the file. Defaults to the passed file name."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:30
#: c6a4d59dc3bb4425b5c9fa913746b372
msgid "Enable conditional and range responses based on request headers. Requires passing a file path and ``environ``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:32
#: 6a0879f5f305417dbe73bd46546231ad
msgid "Calculate an ETag for the file, which requires passing a file path. Can also be a string to use instead."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:34
#: d87595b647034b9fae15342298dc929f
msgid "The last modified time to send for the file, in seconds. If not provided, it will try to detect it from the file path."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:37
#: 698c76d01f1846afa0bcda5fe10be72c
msgid "How long the client should cache the file, in seconds. If set, ``Cache-Control`` will be ``public``, otherwise it will be ``no-cache`` to prefer conditional caching."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:41
#: 062970ff08ea4bd49004d84bca7bfabe
msgid "``download_name`` replaces the ``attachment_filename`` parameter. If ``as_attachment=False``, it is passed with ``Content-Disposition: inline`` instead."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:46
#: b07681060b0b4b86a65717e66af6824c
msgid "``max_age`` replaces the ``cache_timeout`` parameter. ``conditional`` is enabled and ``max_age`` is not set by default."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:51
#: 1422b1beb2d4453984e6aeb978b511e0
msgid "``etag`` replaces the ``add_etags`` parameter. It can be a string to use instead of generating one."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:55
#: e80585276c3740df93ea0374458e4cf4
msgid "Passing a file-like object that inherits from :class:`~io.TextIOBase` will raise a :exc:`ValueError` rather than sending an empty file."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:60
#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_from_directory:29
#: 62eaf168d23d485fbefb81a40977b9cc
#: f379158fef4b4a819ba94f85a145271a
msgid "Moved the implementation to Werkzeug. This is now a wrapper to pass some Flask-specific arguments."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:64
#: 20e46d8631c8482a8557333f1837bb76
msgid "``filename`` may be a :class:`~os.PathLike` object."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:67
#: 51e355a4abf6408f84d9bea10fa07233
msgid "Passing a :class:`~io.BytesIO` object supports range requests."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:70
#: 7556681f5757454797125873429c93df
msgid "Filenames are encoded with ASCII instead of Latin-1 for broader compatibility with WSGI servers."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:74
#: a7c2262a1c4b469c89b12b653c66735a
msgid "UTF-8 filenames as specified in :rfc:`2231` are supported."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:77
#: f0a576ed094f4727a54e6177f7ce8d57
msgid "The filename is no longer automatically inferred from file objects. If you want to use automatic MIME and etag support, pass a filename via ``filename_or_fp`` or ``attachment_filename``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:83
#: 7facf4f4fc2f4651b7370eb6553a4c0f
msgid "``attachment_filename`` is preferred over ``filename`` for MIME detection."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:87
#: d15c214b83c14bc7823a2cdc7a1298f0
msgid "``cache_timeout`` defaults to :meth:`Flask.get_send_file_max_age`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:91
#: 98f53c74c5524075b369b3fac1003a01
msgid "MIME guessing and etag support for file-like objects was removed because it was unreliable. Pass a filename if you are able to, otherwise attach an etag yourself."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_file:96
#: d934ddc27d574c15872c37d9c49be751
msgid "The ``add_etags``, ``cache_timeout`` and ``conditional`` parameters were added. The default behavior is to add etags."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_from_directory:1
#: e532ce9d7820470984e662fcb107dbd2
msgid "Send a file from within a directory using :func:`send_file`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_from_directory:11
#: aae64020fedd45148a084d7210ddfb84
msgid "This is a secure way to serve files from a folder, such as static files or uploads. Uses :func:`~werkzeug.security.safe_join` to ensure the path coming from the client is not maliciously crafted to point outside the specified directory."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_from_directory:16
#: eb3ba325288543c9bd9cd38b2b188c58
msgid "If the final path does not point to an existing regular file, raises a 404 :exc:`~werkzeug.exceptions.NotFound` error."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_from_directory:19
#: 3cd96c740fcb479ea7da176a37421682
msgid "The directory that ``path`` must be located under, relative to the current application's root path. This *must not* be a value provided by the client, otherwise it becomes insecure."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_from_directory:22
#: efaecdaf07de44fbaf5b9325d89cdaaa
msgid "The path to the file to send, relative to ``directory``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_from_directory:24
#: 72ef977b4d0b4ff4a2c25726eeb188f3
msgid "Arguments to pass to :func:`send_file`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.send_from_directory:26
#: b3ad474b547a4c7dbf61c9c5282d14f9
msgid "``path`` replaces the ``filename`` parameter."
msgstr ""

#: ../../project/docs/api.rst:222
#: 0667dd31c6334947b210c808686f6ec1
msgid "Message Flashing"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.flash:1
#: b69c87780d8e4c58a0975b531333f68c
msgid "Flashes a message to the next request.  In order to remove the flashed message from the session and to display it to the user, the template has to call :func:`get_flashed_messages`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.flash:5
#: 6b62f7d0362e4229b90a766499945181
msgid "`category` parameter added."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.flash:8
#: 38136688f9594a14a3c5809ea43c9ac6
msgid "the message to be flashed."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.flash:9
#: 0ecf0cbd9efc409b9d3a7cf91b54e3c6
msgid "the category for the message.  The following values are recommended: ``'message'`` for any kind of message, ``'error'`` for errors, ``'info'`` for information messages and ``'warning'`` for warnings.  However any kind of string can be used as category."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.get_flashed_messages:1
#: 2c2a297f97794da7bbefe3420cef6ff1
msgid "Pulls all flashed messages from the session and returns them. Further calls in the same request to the function will return the same messages.  By default just the messages are returned, but when `with_categories` is set to ``True``, the return value will be a list of tuples in the form ``(category, message)`` instead."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.get_flashed_messages:7
#: 663238cd2121447ba671fe1daecbd308
msgid "Filter the flashed messages to one or more categories by providing those categories in `category_filter`.  This allows rendering categories in separate html blocks.  The `with_categories` and `category_filter` arguments are distinct:"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.get_flashed_messages:12
#: 0ce3738d0aef49fc95d29ca89073532a
msgid "`with_categories` controls whether categories are returned with message text (``True`` gives a tuple, where ``False`` gives just the message text)."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.get_flashed_messages:14
#: 417b7bcbaf8547719e54bb7616f4babc
msgid "`category_filter` filters the messages down to only those matching the provided categories."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.get_flashed_messages:17
#: 87251b0e30e64c72ac2edb846694a3c2
msgid "See :doc:`/patterns/flashing` for examples."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.get_flashed_messages:22
#: 6b9c289481ae44fbba406208d36afdca
msgid "`category_filter` parameter added."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.get_flashed_messages:19
#: 604e5226f26246ac9d82a1c394cd184c
msgid "`with_categories` parameter added."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.get_flashed_messages:25
#: 79a996b5b6f64c0e9a830da30c96519e
msgid "set to ``True`` to also receive categories."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.get_flashed_messages:26
#: 046056dec00d4810b26d66645e25090c
msgid "filter of categories to limit return values.  Only categories in the list will be returned."
msgstr ""

#: ../../project/docs/api.rst:230
#: d0a51cd3b61b4e109101369da7071ccd
msgid "JSON Support"
msgstr ""

#: ../../project/docs/api.rst:234
#: a90a5f7bb7bf4c54be38dd6f7cc98cc7
msgid "Flask uses Python's built-in :mod:`json` module for handling JSON by default. The JSON implementation can be changed by assigning a different provider to :attr:`flask.Flask.json_provider_class` or :attr:`flask.Flask.json`. The functions provided by ``flask.json`` will use methods on ``app.json`` if an app context is active."
msgstr ""

#: ../../project/docs/api.rst:240
#: 0fe61d9a1485417fbfe4c75b77956ec2
msgid "Jinja's ``|tojson`` filter is configured to use the app's JSON provider. The filter marks the output with ``|safe``. Use it to render data inside HTML ``<script>`` tags."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.jsonify:1
#: 7104e328d45b455480a6b2a8b0604b8a
msgid "Serialize the given arguments as JSON, and return a :class:`~flask.Response` object with the ``application/json`` mimetype. A dict or list returned from a view will be converted to a JSON response automatically without needing to call this."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.jsonify:6
#: ef918ab34d524ebcb7b5682971f94153
msgid "This requires an active request or application context, and calls :meth:`app.json.response() <flask.json.provider.JSONProvider.response>`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.jsonify:9
#: 6bcf36a2ed1c47fa9849a8d2e85c497b
msgid "In debug mode, the output is formatted with indentation to make it easier to read. This may also be controlled by the provider."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.jsonify:12
#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.DefaultJSONProvider.response:9
#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.JSONProvider.response:8
#: af7114ebb9304dbe800e68bdab209c55
#: 4524f35bac21433fb456a42ff709a640
#: 5127063b20cc4615ae952b3e15ab2310
msgid "Either positional or keyword arguments can be given, not both. If no arguments are given, ``None`` is serialized."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.jsonify:15
#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.DefaultJSONProvider.response:12
#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.JSONProvider.response:11
#: 2e289307a5af4fda839686c3a11c7393
#: 41d0bd35ff53467ba68c18460e310059
#: 6ff5644585ba44eba2283533d183e8a7
msgid "A single value to serialize, or multiple values to treat as a list to serialize."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.jsonify:17
#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.DefaultJSONProvider.response:14
#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.JSONProvider.response:13
#: e0bb71d79f7f4d26a02a1854951f451e
#: c6bb49e114bb487fbd08f611f61395e3
#: 85e040d8e53b4e87b687ab2555fdd81a
msgid "Treat as a dict to serialize."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.jsonify:19
#: d4e739112c0b4b40a553c972db74af17
msgid "Calls ``current_app.json.response``, allowing an app to override the behavior."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.dumps:17
#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.jsonify:23
#: 918f08fe4e79446796f46f336550bbd2
#: bca036b26fca4189bdf476bff735554f
msgid ":class:`decimal.Decimal` is supported by converting to a string."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.jsonify:26
#: 984dec312f4c431a9ecf843f7d5c7302
msgid "Added support for serializing top-level arrays. This was a security risk in ancient browsers. See :ref:`security-json`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.dumps:1
#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.JSONProvider.dumps:1
#: ddbfae1d4f644647bf7f4a07dad7e9c6
#: 8e84ed1dbfaa4805bc77a3cb46424420
msgid "Serialize data as JSON."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.dumps:3
#: 438d04c7b7f7466084b76ceecbd6713d
msgid "If :data:`~flask.current_app` is available, it will use its :meth:`app.json.dumps() <flask.json.provider.JSONProvider.dumps>` method, otherwise it will use :func:`json.dumps`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.dump:7
#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.dumps:7
#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.DefaultJSONProvider.dumps:7
#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.JSONProvider.dump:3
#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.JSONProvider.dumps:3
#: 67b06ead5b80455c96873747dd6e5b09
#: ba4710af6b954f0b8d4b456d718b6915
#: 284a388c8f3a4fa6a4656c9d19a126ed
#: c3c0c7bfdadd455f83ce89a69b622bc9
#: 3c3ceb0f857e48c9bbf9b5eeee72c16b
msgid "The data to serialize."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.dumps:8
#: bd1d18a6a892473aa9f55dec1398bd46
msgid "Arguments passed to the ``dumps`` implementation."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.dump:12
#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.dumps:10
#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.load:10
#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.loads:10
#: 45e4e59c444541c6b951477a09d11061
#: 92ff9355f7c04087b8035f0ab5b38763
#: 496675886b2d4d26bfdff11c56f6b6d7
#: f31bbd06348a456db813346b3b11da19
msgid "The ``app`` parameter was removed."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.dumps:13
#: 28ae6e0e64d3419293031465a32af828
msgid "Calls ``current_app.json.dumps``, allowing an app to override the behavior."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.dumps:20
#: c1f7de455a4b4428885e4b8f437677fb
msgid "``encoding`` will be removed in Flask 2.1."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.dumps:23
#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.loads:21
#: fa03b82147154f9dbb277ad20c6fa49f
#: c274df92c9e949f0b01bbc25090c0a5f
msgid "``app`` can be passed directly, rather than requiring an app context for configuration."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.dump:1
#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.JSONProvider.dump:1
#: f9708be22a3045d9bbe913846174f156
#: 41883735b87a4516ad587d1a3e4c7367
msgid "Serialize data as JSON and write to a file."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.dump:3
#: 0a209e255c1b461bae2c2dafdf9c0597
msgid "If :data:`~flask.current_app` is available, it will use its :meth:`app.json.dump() <flask.json.provider.JSONProvider.dump>` method, otherwise it will use :func:`json.dump`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.dump:8
#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.JSONProvider.dump:4
#: 2a4c3939e0384a5f9620a9941bdda7d4
#: fd046950927b42338782fb76e2189048
msgid "A file opened for writing text. Should use the UTF-8 encoding to be valid JSON."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.dump:10
#: 0b164c51e33844beb6b24bca18f4f231
msgid "Arguments passed to the ``dump`` implementation."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.dump:15
#: 820722d99a5444a1baa3ddbbccb74e37
msgid "Calls ``current_app.json.dump``, allowing an app to override the behavior."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.dump:19
#: 7427b2223b044bb3bf337db92f61a015
msgid "Writing to a binary file, and the ``encoding`` argument, will be removed in Flask 2.1."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.loads:1
#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.JSONProvider.loads:1
#: b6c5bbf07d2746459367f31d14855ca4
#: 7c5f95ca5aaf48ecb029e324d36265b0
msgid "Deserialize data as JSON."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.loads:3
#: 674d7a6ad0aa44eaa5da8e0e4d766d3b
msgid "If :data:`~flask.current_app` is available, it will use its :meth:`app.json.loads() <flask.json.provider.JSONProvider.loads>` method, otherwise it will use :func:`json.loads`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.loads:7
#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.DefaultJSONProvider.loads:3
#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.JSONProvider.loads:3
#: a7ddeb268df3476399f670f40ddd7e16
#: 448286d3e7ab42f99fc385ece9c0610d
#: 70e83388ed22499ba85f314b0d0849e0
msgid "Text or UTF-8 bytes."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.loads:8
#: cecd2b2006c44e08a28e5df2b30a323d
msgid "Arguments passed to the ``loads`` implementation."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.loads:13
#: 28e21bff771745a4a083cc596777df04
msgid "Calls ``current_app.json.loads``, allowing an app to override the behavior."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.loads:17
#: b4e7a8065af846a797dde20c34572161
msgid "``encoding`` will be removed in Flask 2.1. The data must be a string or UTF-8 bytes."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.load:1
#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.JSONProvider.load:1
#: d85a297b0eb846b1b96410436a01e505
#: 5461d6372de04bb798443f8135e9d5ea
msgid "Deserialize data as JSON read from a file."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.load:3
#: 8e3bcf45f2364ba68714a4dc87f87cb4
msgid "If :data:`~flask.current_app` is available, it will use its :meth:`app.json.load() <flask.json.provider.JSONProvider.load>` method, otherwise it will use :func:`json.load`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.load:7
#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.JSONProvider.load:3
#: ec2a2e50d5844432a5c0c86857301e3a
#: 5cf85698a05a4eef80d327cb4cd2bb54
msgid "A file opened for reading text or UTF-8 bytes."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.load:8
#: 36569f9afe7a413eab223d13c4368bb3
msgid "Arguments passed to the ``load`` implementation."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.load:13
#: eeb78b60b9a7497fa270dc70b725a623
msgid "Calls ``current_app.json.load``, allowing an app to override the behavior."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.load:17
#: 33e95ad8d7e0469f8611b81808278026
msgid "The ``app`` parameter will be removed in Flask 2.3."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/__init__.py:docstring of flask.json.load:20
#: c4d9c61ae3764244bcd897156f5146dd
msgid "``encoding`` will be removed in Flask 2.1. The file must be text mode, or binary mode with UTF-8 bytes."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.JSONProvider:1
#: b2ce72f244a64fd9ac2fe1a0490c5b34
msgid "A standard set of JSON operations for an application. Subclasses of this can be used to customize JSON behavior or use different JSON libraries."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.JSONProvider:5
#: 7a5ee5ea0c0d4ce39914d7503ae5addf
msgid "To implement a provider for a specific library, subclass this base class and implement at least :meth:`dumps` and :meth:`loads`. All other methods have default implementations."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.JSONProvider:9
#: 60ad647d28c2494ab4177bfca1b9a769
msgid "To use a different provider, either subclass ``Flask`` and set :attr:`~flask.Flask.json_provider_class` to a provider class, or set :attr:`app.json <flask.Flask.json>` to an instance of the class."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.JSONProvider:13
#: 4958de769a7644659ff652ff9dcdefc5
msgid "An application instance. This will be stored as a :class:`weakref.proxy` on the :attr:`_app` attribute."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.JSONProvider.dump:6
#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.JSONProvider.dumps:4
#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.JSONProvider.load:4
#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.JSONProvider.loads:4
#: 4c95ab59b68a4a6bad7b17731b5e502c
#: 18107702ce434e7cb69d407f952a0b0e
#: 36454d2882bc4284ad899a5ba67cacf6
#: e2df23e3ee7c4078ae8337c2a9f43a20
msgid "May be passed to the underlying JSON library."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.JSONProvider.response:1
#: a1aa25b71fd8414dadd8bfca6fbcb9d9
msgid "Serialize the given arguments as JSON, and return a :class:`~flask.Response` object with the ``application/json`` mimetype."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.JSONProvider.response:5
#: 066954c8308147a88ed8f67c945ddfed
msgid "The :func:`~flask.json.jsonify` function calls this method for the current application."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.DefaultJSONProvider:1
#: c754c75cb0f748c29ee5f93154f9fada
msgid "Provide JSON operations using Python's built-in :mod:`json` library. Serializes the following additional data types:"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.DefaultJSONProvider:4
#: da60321c431a4d9f8963ad560afd9903
msgid ":class:`datetime.datetime` and :class:`datetime.date` are serialized to :rfc:`822` strings. This is the same as the HTTP date format."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.DefaultJSONProvider:7
#: 3f65826f43ee48bca251a1187d43630b
msgid ":class:`uuid.UUID` is serialized to a string."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.DefaultJSONProvider:8
#: aa8b0a9e699544ab9c63bac381487dd6
msgid ":class:`dataclasses.dataclass` is passed to :func:`dataclasses.asdict`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.DefaultJSONProvider:10
#: b1e4ceddf1204383911224f9e1590368
msgid ":class:`~markupsafe.Markup` (or any object with a ``__html__`` method) will call the ``__html__`` method to get a string."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider._default:1
#: d683dfbd2322419c99fb8dc598f1c945
msgid "Apply this function to any object that :meth:`json.dumps` does not know how to serialize. It should return a valid JSON type or raise a ``TypeError``."
msgstr ""

#: ../../docstring of flask.json.provider.DefaultJSONProvider.ensure_ascii:1
#: 73b3cc19b0d34fcab044c8964a9eaa14
msgid "Replace non-ASCII characters with escape sequences. This may be more compatible with some clients, but can be disabled for better performance and size."
msgstr ""

#: ../../docstring of flask.json.provider.DefaultJSONProvider.sort_keys:1
#: af04202f808b4de1aedd3a8306e65d18
msgid "Sort the keys in any serialized dicts. This may be useful for some caching situations, but can be disabled for better performance. When enabled, keys must all be strings, they are not converted before sorting."
msgstr ""

#: ../../docstring of flask.json.provider.DefaultJSONProvider.compact:1
#: 57fe3ba1dac84537a9afd6f4ea3b1034
msgid "If ``True``, or ``None`` out of debug mode, the :meth:`response` output will not add indentation, newlines, or spaces. If ``False``, or ``None`` in debug mode, it will use a non-compact representation."
msgstr ""

#: ../../docstring of flask.json.provider.DefaultJSONProvider.mimetype:1
#: 5086b7644ccc44d5866444ff4b35f2e1
msgid "The mimetype set in :meth:`response`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.DefaultJSONProvider.dumps:1
#: ee903d955786450b8befca32f67d1fc9
msgid "Serialize data as JSON to a string."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.DefaultJSONProvider.dumps:3
#: 7eddbf21ea5a41a6acd9bd6906fa9b7c
msgid "Keyword arguments are passed to :func:`json.dumps`. Sets some parameter defaults from the :attr:`default`, :attr:`ensure_ascii`, and :attr:`sort_keys` attributes."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.DefaultJSONProvider.dumps:8
#: 0f30d615a2b74abd9be1ffd70c13421b
msgid "Passed to :func:`json.dumps`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.DefaultJSONProvider.loads:1
#: 8120b4b62c344ee18449914dc3563bae
msgid "Deserialize data as JSON from a string or bytes."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.DefaultJSONProvider.loads:4
#: f353081583ef4265853534796a8e4558
msgid "Passed to :func:`json.loads`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.DefaultJSONProvider.response:1
#: cab7d13a6ab54bdb9dc1ca4e2967f9b5
msgid "Serialize the given arguments as JSON, and return a :class:`~flask.Response` object with it. The response mimetype will be \"application/json\" and can be changed with :attr:`mimetype`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/provider.py:docstring of flask.json.provider.DefaultJSONProvider.response:6
#: a4f714b985a84280b0026958e12c0c2a
msgid "If :attr:`compact` is ``False`` or debug mode is enabled, the output will be formatted to be easier to read."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag:2
#: c6a679b34a5d4a5085e8d99de7ceca28
msgid "Tagged JSON"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag:4
#: 60ada0ad378345648692ae09d349bf7a
msgid "A compact representation for lossless serialization of non-standard JSON types. :class:`~flask.sessions.SecureCookieSessionInterface` uses this to serialize the session data, but it may be useful in other places. It can be extended to support other types."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer:1
#: 5a2a673ab6a74a1eab60d5a23bbeb0a5
msgid "Serializer that uses a tag system to compactly represent objects that are not JSON types. Passed as the intermediate serializer to :class:`itsdangerous.Serializer`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer:5
#: 0c542cd5de5f4c77b806bfbef842f61a
msgid "The following extra types are supported:"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer:7
#: 25448bf84daf464da37d40580148498a
msgid ":class:`dict`"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer:8
#: 30de1003a0004d0293b4ada3d1f96da9
msgid ":class:`tuple`"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer:9
#: 0022e27b741a45afb55fdb182cd1a6cd
msgid ":class:`bytes`"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer:10
#: 3575471d9ab94731929eb29e9795edeb
msgid ":class:`~markupsafe.Markup`"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer:11
#: 962133a6c74d48709c8582da031e91d5
msgid ":class:`~uuid.UUID`"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer:12
#: e3c1eedb565a446e81bedd6d43a957c4
msgid ":class:`~datetime.datetime`"
msgstr ""

#: ../../docstring of flask.json.tag.TaggedJSONSerializer.default_tags:1
#: 90a0299dc1f748f686c5bbbce1387211
msgid "Tag classes to bind when creating the serializer. Other tags can be added later using :meth:`~register`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer.register:1
#: 1128035e6ce74ea2b48c0e7d89b5147b
msgid "Register a new tag with this serializer."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer.register:3
#: efc900933fdd4539af85dce4f17eb579
msgid "tag class to register. Will be instantiated with this serializer instance."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer.register:5
#: 37d054c952ff4401a7c2fac6a70bb9d6
msgid "overwrite an existing tag. If false (default), a :exc:`KeyError` is raised."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer.register:7
#: 9e73f7bb76fc4f43b5ea1548e8898ad4
msgid "index to insert the new tag in the tag order. Useful when the new tag is a special case of an existing tag. If ``None`` (default), the tag is appended to the end of the order."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag:0
#: f34396cb7c634dc984c391ae29e7c9a4
msgid "Raises"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer.register:11
#: 8f51a2fa1f3a41f8b59f9538ad0f425f
msgid "if the tag key is already registered and ``force`` is not true."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer.tag:1
#: 4315e4ad059d4f9ebb5d8c287f979708
msgid "Convert a value to a tagged representation if necessary."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer.untag:1
#: 3bf66e65863e46a78a0e30b765069b7a
msgid "Convert a tagged representation back to the original type."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer.dumps:1
#: 424827ea009243f8a59be67fb66dba8b
msgid "Tag the value and dump it to a compact JSON string."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.TaggedJSONSerializer.loads:1
#: 1b45e725e8ab4bb8929d775f913999cd
msgid "Load data from a JSON string and deserialized any tagged objects."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.JSONTag:1
#: a5a6185c0fe54ca9a1aa9fabc2071c21
msgid "Base class for defining type tags for :class:`TaggedJSONSerializer`."
msgstr ""

#: ../../docstring of flask.json.tag.JSONTag.key:1
#: 3161d20813a74a47b54745554fdc3db7
msgid "The tag to mark the serialized object with. If empty, this tag is only used as an intermediate step during tagging."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.JSONTag.check:1
#: 578c5f20d5194dd5a12c6f737ee171e1
msgid "Check if the given value should be tagged by this tag."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.JSONTag.to_json:1
#: 608263dadfb042008eeab501d890d317
msgid "Convert the Python object to an object that is a valid JSON type. The tag will be added later."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.JSONTag.to_python:1
#: a5be5b36a6404e6898ae90873dc58f50
msgid "Convert the JSON representation back to the correct type. The tag will already be removed."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag.JSONTag.tag:1
#: 7c184449da8e43cf950a9712bfe8ab1d
msgid "Convert the value to a valid JSON type and add the tag structure around it."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/json/tag.py:docstring of flask.json.tag:15
#: ad473283e6014aa889f109b6171faddb
msgid "Let's see an example that adds support for :class:`~collections.OrderedDict`. Dicts don't have an order in JSON, so to handle this we will dump the items as a list of ``[key, value]`` pairs. Subclass :class:`JSONTag` and give it the new key ``' od'`` to identify the type. The session serializer processes dicts first, so insert the new tag at the front of the order since ``OrderedDict`` must be processed before ``dict``."
msgstr ""

#: ../../project/docs/api.rst:273
#: a0d04dc071f34ea8aea3b4773cb5120d
msgid "Template Rendering"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/templating.py:docstring of flask.templating.render_template:1
#: dee2af6143cf47bcab587fa31f9139ed
msgid "Render a template by name with the given context."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/templating.py:docstring of flask.templating.render_template:3
#: ../../.venv/lib/python3.13/site-packages/flask/templating.py:docstring of flask.templating.stream_template:5
#: 745342a0640e48b9a8568567d298f7e2
#: 05daac7cf6574ee3844774e216a306a2
msgid "The name of the template to render. If a list is given, the first name to exist will be rendered."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/templating.py:docstring of flask.templating.render_template:5
#: ../../.venv/lib/python3.13/site-packages/flask/templating.py:docstring of flask.templating.render_template_string:5
#: ../../.venv/lib/python3.13/site-packages/flask/templating.py:docstring of flask.templating.stream_template:7
#: ../../.venv/lib/python3.13/site-packages/flask/templating.py:docstring of flask.templating.stream_template_string:6
#: 83747b17fa0e429182beae987bbb579e
#: 934433bae90c4935b520692a48bb0a01
#: 09272467dd424b63849068c30c12eafe
#: df3a85be5cc744bbb1537afac0146b24
msgid "The variables to make available in the template."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/templating.py:docstring of flask.templating.render_template_string:1
#: c1f02d7a6d044327bdf41ab14ad19b78
msgid "Render a template from the given source string with the given context."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/templating.py:docstring of flask.templating.render_template_string:4
#: ../../.venv/lib/python3.13/site-packages/flask/templating.py:docstring of flask.templating.stream_template_string:5
#: 415d8af3aad240eebbb55c80fc2247f5
#: e103db627b8a4acd963d7ad6723c0a2e
msgid "The source code of the template to render."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/templating.py:docstring of flask.templating.stream_template:1
#: 67bc384e86584bae838739738e2de3da
msgid "Render a template by name with the given context as a stream. This returns an iterator of strings, which can be used as a streaming response from a view."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/templating.py:docstring of flask.templating.stream_template_string:1
#: 84148cc95bca4dd48627d735d69167e4
msgid "Render a template from the given source string with the given context as a stream. This returns an iterator of strings, which can be used as a streaming response from a view."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.get_template_attribute:1
#: 8f3787b727fb417085efa0130008f4ad
msgid "Loads a macro (or variable) a template exports.  This can be used to invoke a macro from within Python code.  If you for example have a template named :file:`_cider.html` with the following contents:"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.get_template_attribute:9
#: a9260913365f4788b398bfa4169981e4
msgid "You can access this from Python code like this::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.get_template_attribute:16
#: aca39148cb754691a7b846807aea92ba
msgid "the name of the template"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.get_template_attribute:17
#: c9d515e51eeb4574a5d06b2b2715b134
msgid "the name of the variable of macro to access"
msgstr ""

#: ../../project/docs/api.rst:288
#: 337331b31543479e9e771ac7ad431006
msgid "Configuration"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config:1
#: e5cf629d7d0f412997359e4386aafc44
msgid "Works exactly like a dict but provides ways to fill it from files or special dictionaries.  There are two common patterns to populate the config."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config:5
#: cb1737cb9d7f406fb4b4eda61432ad2f
msgid "Either you can fill the config from a config file::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config:9
#: c015268aa31d4d4db09c351971f6ab00
msgid "Or alternatively you can define the configuration options in the module that calls :meth:`from_object` or provide an import path to a module that should be loaded.  It is also possible to tell it to use the same module and with that provide the configuration values just before the call::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config:19
#: 86d8a16334e94ce0a1c464f7288b1514
msgid "In both cases (loading from any Python file or loading from modules), only uppercase keys are added to the config.  This makes it possible to use lowercase values in the config file for temporary values that are not added to the config or to define the config keys in the same file that implements the application."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config:25
#: 6270a205f6d24e8cb5c5da71d0a16d5d
msgid "Probably the most interesting way to load configurations is from an environment variable pointing to a file::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config:30
#: 68618efbfbb444a5b4a64dc34fdc5989
msgid "In this case before launching the application you have to set this environment variable to the file you want to use.  On Linux and OS X use the export statement::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config:36
#: 6133ceb72ed24cbbaeda5fb032e8848f
msgid "On windows use `set` instead."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config:38
#: 0e2ad62c76614487bf7d942988c89a0e
msgid "path to which files are read relative from.  When the config object is created by the application, this is the application's :attr:`~flask.Flask.root_path`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config:41
#: ccd3f71ef89349bf97c011e93dd0201a
msgid "an optional dictionary of default values"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_envvar:1
#: b5186e932e01401384b5c2b27c2e13ca
msgid "Loads a configuration from an environment variable pointing to a configuration file.  This is basically just a shortcut with nicer error messages for this line of code::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_envvar:7
#: 9c0e85e3c29c479790dbb02e44aae051
msgid "name of the environment variable"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_envvar:8
#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_pyfile:8
#: 2bcadac436a844d8b61e1e52ddd787cc
#: b4978fe9b96940e7b202506c2f59a427
msgid "set to ``True`` if you want silent failure for missing files."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_envvar:10
#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_file:21
#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_pyfile:10
#: 66cd393158b6452784c77f768e679343
#: a8aceb2c64a84c768a1ebdbacbf342b8
#: eb5de5b70bb44a0ea6b0559f09138c93
msgid "``True`` if the file was loaded successfully."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_prefixed_env:1
#: 3a15eef12daa46409507179dad34312e
msgid "Load any environment variables that start with ``FLASK_``, dropping the prefix from the env key for the config key. Values are passed through a loading function to attempt to convert them to more specific types than strings."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_prefixed_env:6
#: d3c04d76e5d44b628735bd01ed19aaf2
msgid "Keys are loaded in :func:`sorted` order."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_prefixed_env:8
#: 970917a259694d80a8aab3b0969cf334
msgid "The default loading function attempts to parse values as any valid JSON type, including dicts and lists."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_prefixed_env:11
#: 1132e1113adf4bd386e2705615d78cb0
msgid "Specific items in nested dicts can be set by separating the keys with double underscores (``__``). If an intermediate key doesn't exist, it will be initialized to an empty dict."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_prefixed_env:15
#: b5ab712a67394d1e88f0989a98126faa
msgid "Load env vars that start with this prefix, separated with an underscore (``_``)."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_prefixed_env:17
#: 77b2dcf1aee24029ae77fc0ce3904a49
msgid "Pass each string value to this function and use the returned value as the config value. If any error is raised it is ignored and the value remains a string. The default is :func:`json.loads`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_pyfile:1
#: 1e731d58edf94456bc766c53320b5ff3
msgid "Updates the values in the config from a Python file.  This function behaves as if the file was imported as module with the :meth:`from_object` function."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_pyfile:5
#: 0b6349de9bd649c3a070967ccb267da2
msgid "the filename of the config.  This can either be an absolute filename or a filename relative to the root path."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_pyfile:12
#: c89a7a92ab68436d995abc9c94c917bb
msgid "`silent` parameter."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_object:1
#: e7d863559743413db947a0434b7dfa4a
msgid "Updates the values from the given object.  An object can be of one of the following two types:"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_object:4
#: 22c0d47752a6470598121f1530051e28
msgid "a string: in this case the object with that name will be imported"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_object:5
#: 50997fa75a2f495abaf86e886576f223
msgid "an actual object reference: that object is used directly"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_object:7
#: 8e05c9b6da1541979ed37b97e7cbe6c0
msgid "Objects are usually either modules or classes. :meth:`from_object` loads only the uppercase attributes of the module/class. A ``dict`` object will not work with :meth:`from_object` because the keys of a ``dict`` are not attributes of the ``dict`` class."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_object:12
#: 8b1a84a2b0df422faf7414142a6337c0
msgid "Example of module-based configuration::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_object:18
#: a24c28f0696f42d79a197fca40ef9753
msgid "Nothing is done to the object before loading. If the object is a class and has ``@property`` attributes, it needs to be instantiated before being passed to this method."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_object:22
#: d7bac812cd514fd8ba6e89e9d27df619
msgid "You should not use this function to load the actual configuration but rather configuration defaults.  The actual config should be loaded with :meth:`from_pyfile` and ideally from a location not within the package because the package might be installed system wide."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_object:27
#: 299ffb5264ba4a78b85c6c73f7231840
msgid "See :ref:`config-dev-prod` for an example of class-based configuration using :meth:`from_object`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_object:30
#: f8c226ec094e4a878e485c97686ab29a
msgid "an import name or object"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_file:1
#: e0ead8ac1ab349799d1b3ebf329ad007
msgid "Update the values in the config from a file that is loaded using the ``load`` parameter. The loaded data is passed to the :meth:`from_mapping` method."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_file:13
#: e7635310c25145d5b110098e9cc0f709
msgid "The path to the data file. This can be an absolute path or relative to the config root path."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_file:15
#: 4351648045354a61939bba73bce51c51
msgid "A callable that takes a file handle and returns a mapping of loaded data from the file."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_file:19
#: 9df62bf690fa420eb4112161378a0dbc
msgid "Ignore the file if it doesn't exist."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_file:20
#: 29540b817bf24679b83469b4c1e50ce2
msgid "Open the file in text or binary mode."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_file:23
#: 0763ed24676849558519bb7b1f1add6e
msgid "The ``text`` parameter was added."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_mapping:1
#: 3794fdc8f729473e9cf3c06a1604c1d2
msgid "Updates the config like :meth:`update` ignoring items with non-upper keys."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.from_mapping:4
#: cf7b683f787040469c57823b1f74577d
msgid "Always returns ``True``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.get_namespace:1
#: 890cbdc1bf53417abcff1da307bfc01f
msgid "Returns a dictionary containing a subset of configuration options that match the specified namespace/prefix. Example usage::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.get_namespace:9
#: 4f46d3d82de546f191c39f7e1aac76d0
msgid "The resulting dictionary `image_store_config` would look like::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.get_namespace:17
#: 1c7de519f6bd46bbbc35401a3431b219
msgid "This is often useful when configuration options map directly to keyword arguments in functions or class constructors."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.get_namespace:20
#: 512aa319b3e247b4ab11d416ed85a695
msgid "a configuration namespace"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.get_namespace:21
#: 2bd5a742c2f24de08c50392fe756fda9
msgid "a flag indicating if the keys of the resulting dictionary should be lowercase"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/config.py:docstring of flask.config.Config.get_namespace:23
#: 5d51debe25a84214804da84ae8794697
msgid "a flag indicating if the keys of the resulting dictionary should not include the namespace"
msgstr ""

#: ../../project/docs/api.rst:295
#: c8bcbaec4daa4eebb51c02aec05aba6c
msgid "Stream Helpers"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.stream_with_context:1
#: 1edc03469770486580f67b0cee43257f
msgid "Request contexts disappear when the response is started on the server. This is done for efficiency reasons and to make it less likely to encounter memory leaks with badly written WSGI middlewares.  The downside is that if you are using streamed responses, the generator cannot access request bound information any more."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.stream_with_context:7
#: a9cf4bc53b8749c481bc74381988c1f2
msgid "This function however can help you keep the context around for longer::"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/helpers.py:docstring of flask.helpers.stream_with_context:20
#: a26fa94db261445b9184ea51a1035fb5
msgid "Alternatively it can also be used around a specific generator::"
msgstr ""

#: ../../project/docs/api.rst:300
#: 1e7089acdb5845f5ab078932ff0a90f9
msgid "Useful Internals"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.RequestContext:1
#: e5a9471fd9754248a39c6d6bc52cb4e2
msgid "The request context contains per-request information. The Flask app creates and pushes it at the beginning of the request, then pops it at the end of the request. It will create the URL adapter and request object for the WSGI environment provided."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.RequestContext:6
#: 95f778a4d3dc4f3f91291d9eaaf93709
msgid "Do not attempt to use this class directly, instead use :meth:`~flask.Flask.test_request_context` and :meth:`~flask.Flask.request_context` to create this object."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.RequestContext:10
#: 5a7da74e8f804c12803edfc5e9049e50
msgid "When the request context is popped, it will evaluate all the functions registered on the application for teardown execution (:meth:`~flask.Flask.teardown_request`)."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.RequestContext:14
#: 77ba79f83e0946118113930921384089
msgid "The request context is automatically popped at the end of the request. When using the interactive debugger, the context will be restored so ``request`` is still accessible. Similarly, the test client can preserve the context after the request ends. However, teardown functions may already have closed some resources such as database connections."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.RequestContext.copy:1
#: 3f039b923a754538a1b3297a6765d8f6
msgid "Creates a copy of this request context with the same request object. This can be used to move a request context to a different greenlet. Because the actual request object is the same this cannot be used to move a request context to a different thread unless access to the request object is locked."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.RequestContext.copy:9
#: 88f8e50f55e74f0796344f3fa8c8e5ad
msgid "The current session object is used instead of reloading the original data. This prevents `flask.session` pointing to an out-of-date object."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.RequestContext.match_request:1
#: 8f9710f75e6943699268a63d5fda58bc
msgid "Can be overridden by a subclass to hook into the matching of the request."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.RequestContext.pop:1
#: 59b0b2014cc646fda5ad9288a6d0a8f8
msgid "Pops the request context and unbinds it by doing that.  This will also trigger the execution of functions registered by the :meth:`~flask.Flask.teardown_request` decorator."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.RequestContext.pop:5
#: adcb880a6f6b48debeef7177f1707cb0
msgid "Added the `exc` argument."
msgstr ""

#: ../../project/docs/api.rst:307
#: 344bb5c281f3464e82a1b79b4703c572
msgid "The current :class:`~flask.ctx.RequestContext`. If a request context is not active, accessing attributes on this proxy will raise a ``RuntimeError``."
msgstr ""

#: ../../project/docs/api.rst:311
#: 08e98b949a5f46c2a37ee9237ae11457
msgid "This is an internal object that is essential to how Flask handles requests. Accessing this should not be needed in most cases. Most likely you want :data:`request` and :data:`session` instead."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.AppContext:1
#: a88a87e98c06493f88e2e67a26ed9b72
msgid "The app context contains application-specific information. An app context is created and pushed at the beginning of each request if one is not already active. An app context is also pushed when running CLI commands."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.AppContext.push:1
#: 2bee20c85bf640c6a0438d0e42691736
msgid "Binds the app context to the current context."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/ctx.py:docstring of flask.ctx.AppContext.pop:1
#: 3003f4d7f4af4d7eb902281975318ae0
msgid "Pops the app context."
msgstr ""

#: ../../project/docs/api.rst:320
#: 312030869c7d4514b22dd52cc4228e5e
msgid "The current :class:`~flask.ctx.AppContext`. If an app context is not active, accessing attributes on this proxy will raise a ``RuntimeError``."
msgstr ""

#: ../../project/docs/api.rst:324
#: aa59a51fd6af408b91e3332cf213b295
msgid "This is an internal object that is essential to how Flask handles requests. Accessing this should not be needed in most cases. Most likely you want :data:`current_app` and :data:`g` instead."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sansio/blueprints.py:docstring of flask.sansio.blueprints.BlueprintSetupState:1
#: 2ae9553975704f3e946140ca95d08b5a
msgid "Temporary holder object for registering a blueprint with the application.  An instance of this class is created by the :meth:`~flask.Blueprint.make_setup_state` method and later passed to all register callback functions."
msgstr ""

#: ../../docstring of flask.blueprints.BlueprintSetupState.app:1
#: 03da97dea4fb423285ff01355a2f0931
msgid "a reference to the current application"
msgstr ""

#: ../../docstring of flask.blueprints.BlueprintSetupState.blueprint:1
#: ce351cfd641d4e32be8a7c5e31830da9
msgid "a reference to the blueprint that created this setup state."
msgstr ""

#: ../../docstring of flask.blueprints.BlueprintSetupState.options:1
#: 8ba2132d6c804d45a4269fc7460f36cf
msgid "a dictionary with all options that were passed to the :meth:`~flask.Flask.register_blueprint` method."
msgstr ""

#: ../../docstring of flask.blueprints.BlueprintSetupState.first_registration:1
#: 3202c15ce93a42a6ac03293d836d3163
msgid "as blueprints can be registered multiple times with the application and not everything wants to be registered multiple times on it, this attribute can be used to figure out if the blueprint was registered in the past already."
msgstr ""

#: ../../docstring of flask.blueprints.BlueprintSetupState.subdomain:1
#: 2761d2e0cdaf466a85ac9e232ee0e8c7
msgid "The subdomain that the blueprint should be active for, ``None`` otherwise."
msgstr ""

#: ../../docstring of flask.blueprints.BlueprintSetupState.url_prefix:1
#: 7f88f5ea868b4626966543a063d99681
msgid "The prefix that should be used for all URLs defined on the blueprint."
msgstr ""

#: ../../docstring of flask.blueprints.BlueprintSetupState.url_defaults:1
#: 28d45d42eb174212a20f82d2b4fd998d
msgid "A dictionary with URL defaults that is added to each and every URL that was defined with the blueprint."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/sansio/blueprints.py:docstring of flask.sansio.blueprints.BlueprintSetupState.add_url_rule:1
#: c12959c5ffed45a98c17afbe6b82d776
msgid "A helper method to register a rule (and optionally a view function) to the application.  The endpoint is automatically prefixed with the blueprint's name."
msgstr ""

#: ../../project/docs/api.rst:334
#: 5e417e0d6d654e4b9fc032ef2cf385a1
msgid "Signals"
msgstr ""

#: ../../project/docs/api.rst:336
#: afe0199c4f3743279dfedead1fb9b9ea
msgid "Signals are provided by the `Blinker`_ library. See :doc:`signals` for an introduction."
msgstr ""

#: ../../project/docs/api.rst:342
#: 33ec608c288d4271acb32b2a1d8cf7cc
msgid "This signal is sent when a template was successfully rendered. The signal is invoked with the instance of the template as `template` and the context as dictionary (named `context`)."
msgstr ""

#: ../../project/docs/api.rst:346
#: ../../project/docs/api.rst:363
#: ../../project/docs/api.rst:380
#: ../../project/docs/api.rst:393
#: ../../project/docs/api.rst:438
#: ../../project/docs/api.rst:457
#: ../../project/docs/api.rst:511
#: 1e24d5698b544a70923c577a76d86ff0
#: 55aca4321db5423f8463f2e733ae5a23
#: 7583fb6d24a9497c853e87fae648feaf
#: f6b8baf33dc34422b053c193da923db0
#: f8656bd43fcc4280b6d7f5564f429aaa
#: 5d264319bfdd45a7a9dfc18eed05f31d
#: 3166277e244b45b596e964ed1a7fccec
msgid "Example subscriber::"
msgstr ""

#: ../../project/docs/api.rst:359
#: 6b5e08e7b86a42d6ae1dd07181beec88
msgid "This signal is sent before template rendering process. The signal is invoked with the instance of the template as `template` and the context as dictionary (named `context`)."
msgstr ""

#: ../../project/docs/api.rst:375
#: 0cddcd5255fc4d0ba593cd4c746ce66f
msgid "This signal is sent when the request context is set up, before any request processing happens. Because the request context is already bound, the subscriber can access the request with the standard global proxies such as :class:`~flask.request`."
msgstr ""

#: ../../project/docs/api.rst:390
#: 850c2479b7454fa289aa95e78f02934a
msgid "This signal is sent right before the response is sent to the client. It is passed the response to be sent named `response`."
msgstr ""

#: ../../project/docs/api.rst:404
#: 0fc9a00d2a8d4bbab0b1be90ae241798
msgid "This signal is sent when an unhandled exception happens during request processing, including when debugging. The exception is passed to the subscriber as ``exception``."
msgstr ""

#: ../../project/docs/api.rst:408
#: bc41e5bca4a24e549acb047972ea8525
msgid "This signal is not sent for :exc:`~werkzeug.exceptions.HTTPException`, or other exceptions that have error handlers registered, unless the exception was raised from an error handler."
msgstr ""

#: ../../project/docs/api.rst:413
#: e89f26b678004d559c306fcd849a77d6
msgid "This example shows how to do some extra logging if a theoretical ``SecurityException`` was raised:"
msgstr ""

#: ../../project/docs/api.rst:433
#: 2d9a73cd96f0420e901514c9854df95c
msgid "This signal is sent when the request is tearing down. This is always called, even if an exception is caused. Currently functions listening to this signal are called after the regular teardown handlers, but this is not something you can rely on."
msgstr ""

#: ../../project/docs/api.rst:446
#: 394b9c53f952469a96c1a6c03dbc05a5
msgid "As of Flask 0.9, this will also be passed an `exc` keyword argument that has a reference to the exception that caused the teardown if there was one."
msgstr ""

#: ../../project/docs/api.rst:452
#: a489a4eea7f045048f6740ef287fb916
msgid "This signal is sent when the app context is tearing down. This is always called, even if an exception is caused. Currently functions listening to this signal are called after the regular teardown handlers, but this is not something you can rely on."
msgstr ""

#: ../../project/docs/api.rst:465
#: a6ae4dfbb4514947834ee114ddd57fe6
msgid "This will also be passed an `exc` keyword argument that has a reference to the exception that caused the teardown if there was one."
msgstr ""

#: ../../project/docs/api.rst:470
#: ebd7bc631a5a42b2b2c1a55549b4c198
msgid "This signal is sent when an application context is pushed. The sender is the application. This is usually useful for unittests in order to temporarily hook in information. For instance it can be used to set a resource early onto the `g` object."
msgstr ""

#: ../../project/docs/api.rst:475
#: 02847176106a4496aa652ca97362c209
msgid "Example usage::"
msgstr ""

#: ../../project/docs/api.rst:487
#: 729c2900f79a41bea5eb24035daaba76
msgid "And in the testcode::"
msgstr ""

#: ../../project/docs/api.rst:499
#: 84e338ae0b044589ad8aa70087cb59eb
msgid "This signal is sent when an application context is popped. The sender is the application. This usually falls in line with the :data:`appcontext_tearing_down` signal."
msgstr ""

#: ../../project/docs/api.rst:507
#: 643c4883eb0140f08c7f1e193f2e4867
msgid "This signal is sent when the application is flashing a message. The messages is sent as `message` keyword argument and the category as `category`."
msgstr ""

#: ../../project/docs/api.rst:524
#: d51285ec74c349de820b29ad645999dd
msgid "Class-Based Views"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/views.py:docstring of flask.views.View:1
#: 1f70d65ed0ce4a17af9923d0d76f6d9d
msgid "Subclass this class and override :meth:`dispatch_request` to create a generic class-based view. Call :meth:`as_view` to create a view function that creates an instance of the class with the given arguments and calls its ``dispatch_request`` method with any URL variables."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/views.py:docstring of flask.views.MethodView:10
#: ../../.venv/lib/python3.13/site-packages/flask/views.py:docstring of flask.views.View:7
#: 3a3579f50d3e4a60a91b5f6d3dd2c108
#: ee69cf9d89774c75ae1c146ab77a9a02
msgid "See :doc:`views` for a detailed guide."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/views.py:docstring of flask.views.View:21
#: 426ea44e16ff4c599f57cd4cb7649069
msgid "Set :attr:`methods` on the class to change what methods the view accepts."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/views.py:docstring of flask.views.View:24
#: 0e11de5db85645e68c5d19e60ce99ba6
msgid "Set :attr:`decorators` on the class to apply a list of decorators to the generated view function. Decorators applied to the class itself will not be applied to the generated view function!"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/views.py:docstring of flask.views.View:28
#: 222eb32156794e3695da192f86778724
msgid "Set :attr:`init_every_request` to ``False`` for efficiency, unless you need to store request-global data on ``self``."
msgstr ""

#: ../../docstring of flask.views.View.methods:1
#: 138ea48e66d447e7a6080e6652fd1b75
msgid "The methods this view is registered for. Uses the same default (``[\"GET\", \"HEAD\", \"OPTIONS\"]``) as ``route`` and ``add_url_rule`` by default."
msgstr ""

#: ../../docstring of flask.views.View.provide_automatic_options:1
#: 142a7ced27f74e0090c2f07ca127a6e2
msgid "Control whether the ``OPTIONS`` method is handled automatically. Uses the same default (``True``) as ``route`` and ``add_url_rule`` by default."
msgstr ""

#: ../../docstring of flask.views.View.decorators:1
#: dab2f2cbdc664cb3a6e60c3411cd63b8
msgid "A list of decorators to apply, in order, to the generated view function. Remember that ``@decorator`` syntax is applied bottom to top, so the first decorator in the list would be the bottom decorator."
msgstr ""

#: ../../docstring of flask.views.View.init_every_request:1
#: 83561ac515914faeaa70b94454e823e6
msgid "Create a new instance of this view class for every request by default. If a view subclass sets this to ``False``, the same instance is used for every request."
msgstr ""

#: ../../docstring of flask.views.View.init_every_request:5
#: 0f117e5636a640e4b5a6b6677c729786
msgid "A single instance is more efficient, especially if complex setup is done during init. However, storing data on ``self`` is no longer safe across requests, and :data:`~flask.g` should be used instead."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/views.py:docstring of flask.views.MethodView.dispatch_request:1
#: ../../.venv/lib/python3.13/site-packages/flask/views.py:docstring of flask.views.View.dispatch_request:1
#: d146b58626d94fd5a5a403babd0ed690
#: b05781513aa144e183e49582674b2add
msgid "The actual view function behavior. Subclasses must override this and return a valid response. Any variables from the URL rule are passed as keyword arguments."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/views.py:docstring of flask.views.View.as_view:1
#: c63c6e7c24694bcb978b0fe3f0eb677e
msgid "Convert the class into a view function that can be registered for a route."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/views.py:docstring of flask.views.View.as_view:4
#: 3c41e3bedf734a88a80cc2cf24383157
msgid "By default, the generated view will create a new instance of the view class for every request and call its :meth:`dispatch_request` method. If the view class sets :attr:`init_every_request` to ``False``, the same instance will be used for every request."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/views.py:docstring of flask.views.View.as_view:10
#: bb9f2126cd8848b9a286232f9334e6b8
msgid "Except for ``name``, all other arguments passed to this method are forwarded to the view class ``__init__`` method."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/views.py:docstring of flask.views.View.as_view:13
#: 3446d1c2a82145d9ae836b9c9f70ada5
msgid "Added the ``init_every_request`` class attribute."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/views.py:docstring of flask.views.MethodView:1
#: f9f31e9df3a64c859362c22959eedd3a
msgid "Dispatches request methods to the corresponding instance methods. For example, if you implement a ``get`` method, it will be used to handle ``GET`` requests."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/views.py:docstring of flask.views.MethodView:5
#: 2d47e67cb15f47d9a033f64c40865059
msgid "This can be useful for defining a REST API."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/views.py:docstring of flask.views.MethodView:7
#: 7f4684a0de1a4e18acdf8e8b1df046e9
msgid ":attr:`methods` is automatically set based on the methods defined on the class."
msgstr ""

#: ../../project/docs/api.rst:539
#: c5d4587e69984df09d49c720d2eeb7c1
msgid "URL Route Registrations"
msgstr ""

#: ../../project/docs/api.rst:541
#: 14ce1cb527e24e9194090c987024be48
msgid "Generally there are three ways to define rules for the routing system:"
msgstr ""

#: ../../project/docs/api.rst:543
#: 2f2c99862e634268ac7f1903d0982488
msgid "You can use the :meth:`flask.Flask.route` decorator."
msgstr ""

#: ../../project/docs/api.rst:544
#: 930dbd0b6209445ab95d62d3902c5919
msgid "You can use the :meth:`flask.Flask.add_url_rule` function."
msgstr ""

#: ../../project/docs/api.rst:545
#: 9564cef8b72a423bb58d92060faf2c0a
msgid "You can directly access the underlying Werkzeug routing system which is exposed as :attr:`flask.Flask.url_map`."
msgstr ""

#: ../../project/docs/api.rst:548
#: 97aa063be0484a16bd2da0065da86e87
msgid "Variable parts in the route can be specified with angular brackets (``/user/<username>``). By default a variable part in the URL accepts any string without a slash however a different converter can be specified as well by using ``<converter:name>``."
msgstr ""

#: ../../project/docs/api.rst:553
#: 01be67d742b14facb2f551eb2c444a4e
msgid "Variable parts are passed to the view function as keyword arguments."
msgstr ""

#: ../../project/docs/api.rst:555
#: 3e97cd3432694bd0b5c2d2799850eb73
msgid "The following converters are available:"
msgstr ""

#: ../../project/docs/api.rst:558
#: e3cdc4e7296641b39bcd2faa9716569f
msgid "`string`"
msgstr ""

#: ../../project/docs/api.rst:558
#: cc51f2229a09458abc7dbc83f2bae5d7
msgid "accepts any text without a slash (the default)"
msgstr ""

#: ../../project/docs/api.rst:559
#: 4ea72440743b416ba590373fd8775308
msgid "`int`"
msgstr ""

#: ../../project/docs/api.rst:559
#: 5578c2d2c03e4c4cbf6e94e580fc8f8d
msgid "accepts integers"
msgstr ""

#: ../../project/docs/api.rst:560
#: 1acacaf7eea345d7a173e516955bfbae
msgid "`float`"
msgstr ""

#: ../../project/docs/api.rst:560
#: 60e4903b9e08446d859f2b36024d1c5e
msgid "like `int` but for floating point values"
msgstr ""

#: ../../project/docs/api.rst:561
#: 6aac9504008d4f08a131c40db665eddd
msgid "`path`"
msgstr ""

#: ../../project/docs/api.rst:561
#: 4e10611255a14ac6be68bab673a8742f
msgid "like the default but also accepts slashes"
msgstr ""

#: ../../project/docs/api.rst:562
#: ba3dbdd55f224f7192749c1dce9779c0
msgid "`any`"
msgstr ""

#: ../../project/docs/api.rst:562
#: d360c3bf2e334896afad719347f5f8d9
msgid "matches one of the items provided"
msgstr ""

#: ../../project/docs/api.rst:563
#: a08d03a74a9641d7b5cd21813cb8e758
msgid "`uuid`"
msgstr ""

#: ../../project/docs/api.rst:563
#: 2e1e72d792d245ac9eb26c296cdb81b8
msgid "accepts UUID strings"
msgstr ""

#: ../../project/docs/api.rst:566
#: 43d8454f773e4026a1fd24ae714363e7
msgid "Custom converters can be defined using :attr:`flask.Flask.url_map`."
msgstr ""

#: ../../project/docs/api.rst:568
#: 9dd08fc6637d4ea49adaeedf067cb66f
msgid "Here are some examples::"
msgstr ""

#: ../../project/docs/api.rst:582
#: ae0cae813767477b8f854899c3d46aa0
msgid "An important detail to keep in mind is how Flask deals with trailing slashes. The idea is to keep each URL unique so the following rules apply:"
msgstr ""

#: ../../project/docs/api.rst:586
#: 74b34a8c07734e8ebce8350f541cf5e6
msgid "If a rule ends with a slash and is requested without a slash by the user, the user is automatically redirected to the same page with a trailing slash attached."
msgstr ""

#: ../../project/docs/api.rst:589
#: d1f7c161a27b4c34b3c756e654798fb6
msgid "If a rule does not end with a trailing slash and the user requests the page with a trailing slash, a 404 not found is raised."
msgstr ""

#: ../../project/docs/api.rst:592
#: eacbc819f4824fb59513d6059ba4e103
msgid "This is consistent with how web servers deal with static files. This also makes it possible to use relative link targets safely."
msgstr ""

#: ../../project/docs/api.rst:595
#: 4b2f28511d374c3e9560b0bd63a2ed46
msgid "You can also define multiple rules for the same function. They have to be unique however. Defaults can also be specified. Here for example is a definition for a URL that accepts an optional page::"
msgstr ""

#: ../../project/docs/api.rst:604
#: ab81fafc08144b65b8e936cec25766ad
msgid "This specifies that ``/users/`` will be the URL for page one and ``/users/page/N`` will be the URL for page ``N``."
msgstr ""

#: ../../project/docs/api.rst:607
#: aa4a6e7b61be4eee930aadf9fa401e97
msgid "If a URL contains a default value, it will be redirected to its simpler form with a 301 redirect. In the above example, ``/users/page/1`` will be redirected to ``/users/``. If your route handles ``GET`` and ``POST`` requests, make sure the default route only handles ``GET``, as redirects can't preserve form data. ::"
msgstr ""

#: ../../project/docs/api.rst:618
#: 41918c237d3f4086a2b46bf6ae2da650
msgid "Here are the parameters that :meth:`~flask.Flask.route` and :meth:`~flask.Flask.add_url_rule` accept. The only difference is that with the route parameter the view function is defined with the decorator instead of the `view_func` parameter."
msgstr ""

#: ../../project/docs/api.rst:624
#: bffe074045654a15a69948e0e3cfc8fb
msgid "`rule`"
msgstr ""

#: ../../project/docs/api.rst:624
#: ef26603760a24acd93b439a4139ce426
msgid "the URL rule as string"
msgstr ""

#: ../../project/docs/api.rst:625
#: e6985dd5c7eb40549a48261a4977060e
msgid "`endpoint`"
msgstr ""

#: ../../project/docs/api.rst:625
#: 7ad69684dcb1404997ee2c667a6526a1
msgid "the endpoint for the registered URL rule. Flask itself assumes that the name of the view function is the name of the endpoint if not explicitly stated."
msgstr ""

#: ../../project/docs/api.rst:628
#: f911b617d86c4759b65d12e48b563479
msgid "`view_func`"
msgstr ""

#: ../../project/docs/api.rst:628
#: 75e0aa3515984dc9b94919af58eb7be1
msgid "the function to call when serving a request to the provided endpoint. If this is not provided one can specify the function later by storing it in the :attr:`~flask.Flask.view_functions` dictionary with the endpoint as key."
msgstr ""

#: ../../project/docs/api.rst:633
#: dc03da0ceb604f44854e51a5a680d7e6
msgid "`defaults`"
msgstr ""

#: ../../project/docs/api.rst:633
#: 4f49b74780914836b23bd5239f980127
msgid "A dictionary with defaults for this rule. See the example above for how defaults work."
msgstr ""

#: ../../project/docs/api.rst:635
#: 8dc38dc6ecae45c8b2a3ade50e5cf892
msgid "`subdomain`"
msgstr ""

#: ../../project/docs/api.rst:635
#: 0165a1bd8f7d464795498cc0c9513e9a
msgid "specifies the rule for the subdomain in case subdomain matching is in use. If not specified the default subdomain is assumed."
msgstr ""

#: ../../project/docs/api.rst:638
#: a8e28ceb96f8464c9e347e7f213caac7
msgid "`**options`"
msgstr ""

#: ../../project/docs/api.rst:638
#: 6f803058a8f443d7a9221a5cb68c5eae
msgid "the options to be forwarded to the underlying :class:`~werkzeug.routing.Rule` object. A change to Werkzeug is handling of method options. methods is a list of methods this rule should be limited to (``GET``, ``POST`` etc.). By default a rule just listens for ``GET`` (and implicitly ``HEAD``). Starting with Flask 0.6, ``OPTIONS`` is implicitly added and handled by the standard request handling. They have to be specified as keyword arguments."
msgstr ""

#: ../../project/docs/api.rst:650
#: 2f22a4fde29348ffaba705b759a96570
msgid "View Function Options"
msgstr ""

#: ../../project/docs/api.rst:652
#: 6a036dea655a4cebaf70791c16b96dab
msgid "For internal usage the view functions can have some attributes attached to customize behavior the view function would normally not have control over. The following attributes can be provided optionally to either override some defaults to :meth:`~flask.Flask.add_url_rule` or general behavior:"
msgstr ""

#: ../../project/docs/api.rst:657
#: e3ffbff8864744a18c75644cd26b4c38
msgid "`__name__`: The name of a function is by default used as endpoint. If endpoint is provided explicitly this value is used. Additionally this will be prefixed with the name of the blueprint by default which cannot be customized from the function itself."
msgstr ""

#: ../../project/docs/api.rst:662
#: af5ac9bdab4048299c483f8a526be7d2
msgid "`methods`: If methods are not provided when the URL rule is added, Flask will look on the view function object itself if a `methods` attribute exists. If it does, it will pull the information for the methods from there."
msgstr ""

#: ../../project/docs/api.rst:667
#: cddb3e75c74d4caf98979a82a75cfa7b
msgid "`provide_automatic_options`: if this attribute is set Flask will either force enable or disable the automatic implementation of the HTTP ``OPTIONS`` response. This can be useful when working with decorators that want to customize the ``OPTIONS`` response on a per-view basis."
msgstr ""

#: ../../project/docs/api.rst:673
#: ca32fd13ba654a829bf94b5f1e9bdb9f
msgid "`required_methods`: if this attribute is set, Flask will always add these methods when registering a URL rule even if the methods were explicitly overridden in the ``route()`` call."
msgstr ""

#: ../../project/docs/api.rst:677
#: 67fd718af5e0432fb7622cd3def4d4e1
msgid "Full example::"
msgstr ""

#: ../../project/docs/api.rst:689
#: b15893c025c5472586e309e408b8b25d
msgid "The `provide_automatic_options` functionality was added."
msgstr ""

#: ../../project/docs/api.rst:693
#: a4d65cddfa9646cf9c7f536f4fa40870
msgid "Command Line Interface"
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup:1
#: 04322693e3d0456eaaef010984054827
msgid "Special subclass of the :class:`AppGroup` group that supports loading more commands from the configured Flask app.  Normally a developer does not have to interface with this class but there are some very advanced use cases for which it makes sense to create an instance of this. see :ref:`custom-scripts`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup:7
#: 259ffc7094484c9a94607935807699bf
msgid "if this is True then the default run and shell commands will be added."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup:9
#: f91d5c304f1e4811821b3c4c95ab718c
msgid "adds the ``--version`` option."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup:10
#: 6e00b302d4a84d3d92be80e4c048c306
msgid "an optional callback that is passed the script info and returns the loaded app."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup:15
#: 54c0ead72da14139b69743138a5ad890
msgid "Set the app's debug flag."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup:17
#: a3944790ee024b4ea4e427410a6a57e0
msgid "``-e path`` takes precedence over default ``.env`` and ``.flaskenv`` files."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup:20
#: bf39d89b43864217ad1fd41dea0ea55b
msgid "Added the ``-A/--app``, ``--debug/--no-debug``, ``-e/--env-file`` options."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup:23
#: e9b4f88e6af848ee8ebbeccd94b49a9d
msgid "An app context is pushed when running ``app.cli`` commands, so ``@with_appcontext`` is no longer required for those commands."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup.get_command:1
#: bce9b83b28c54d8285e264834d9c5e43
msgid "Given a context and a command name, this returns a :class:`Command` object if it exists or returns `None`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup.list_commands:1
#: 69f006154356460f81811d3a2341f95d
msgid "Returns a list of subcommand names in the order they should appear."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup.make_context:1
#: d4a25cfaee724449babb1374f9bdfeb3
msgid "This function when given an info name and arguments will kick off the parsing and create a new :class:`Context`.  It does not invoke the actual command callback though."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup.make_context:5
#: 34b48fc8330745fa861816e7e5d60538
msgid "To quickly customize the context class used without overriding this method, set the :attr:`context_class` attribute."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup.make_context:8
#: 3c88e501562c4eb4b39a03983fd6441e
msgid "the info name for this invocation.  Generally this is the most descriptive name for the script or command.  For the toplevel script it's usually the name of the script, for commands below it's the name of the command."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup.make_context:13
#: 0e46034d2c484668b4f250668c508642
msgid "the arguments to parse as list of strings."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup.make_context:14
#: 5b86c58858e0444fba2acab590593738
msgid "the parent context if available."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup.make_context:15
#: 0eaa664a38ec4a1094d3a11543f5a6ab
msgid "extra keyword arguments forwarded to the context constructor."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup.make_context:18
#: e5ab34bc32ff41aebb16b147ce63a809
msgid "Added the :attr:`context_class` attribute."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.FlaskGroup.parse_args:1
#: 2af3a8b7b68f4f64a3679382fe81dafb
msgid "Given a context and a list of arguments this creates the parser and parses the arguments, then modifies the context as necessary. This is automatically invoked by :meth:`make_context`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.AppGroup:1
#: 29fe20add219425095a46960a3fbd1f4
msgid "This works similar to a regular click :class:`~click.Group` but it changes the behavior of the :meth:`command` decorator so that it automatically wraps the functions in :func:`with_appcontext`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.AppGroup:5
#: f8e25931660c421ba6291183c3eeb84a
msgid "Not to be confused with :class:`FlaskGroup`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.AppGroup.command:1
#: 51db5b54c41646bb85bbdb232bd67ae6
msgid "This works exactly like the method of the same name on a regular :class:`click.Group` but it wraps callbacks in :func:`with_appcontext` unless it's disabled by passing ``with_appcontext=False``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.AppGroup.group:1
#: 5dbf4da2b8db4dcf81748255d76edf99
msgid "This works exactly like the method of the same name on a regular :class:`click.Group` but it defaults the group class to :class:`AppGroup`."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.ScriptInfo:1
#: b427071c98e040c6acbdac09b4cc8fde
msgid "Helper object to deal with Flask applications.  This is usually not necessary to interface with as it's used internally in the dispatching to click.  In future versions of Flask this object will most likely play a bigger role.  Typically it's created automatically by the :class:`FlaskGroup` but you can also manually create it and pass it onwards as click object."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.ScriptInfo:8
#: 1f2352c068fc4f0499e76dd5237ae461
msgid "Added the ``load_dotenv_defaults`` parameter and attribute."
msgstr ""

#: ../../docstring of flask.cli.ScriptInfo.app_import_path:1
#: c2e5c796295349dd9b61813019cff783
msgid "Optionally the import path for the Flask application."
msgstr ""

#: ../../docstring of flask.cli.ScriptInfo.create_app:1
#: ea0da6b91fe6463598b78bb97dee71e5
msgid "Optionally a function that is passed the script info to create the instance of the application."
msgstr ""

#: ../../docstring of flask.cli.ScriptInfo.data:1
#: e2ee4906884c48f490d6cb684bcc4267
msgid "A dictionary with arbitrary data that can be associated with this script info."
msgstr ""

#: ../../docstring of flask.cli.ScriptInfo.load_dotenv_defaults:1
#: a5b319b25e2f4fbab9500bd20bb2313b
msgid "Whether default ``.flaskenv`` and ``.env`` files should be loaded."
msgstr ""

#: ../../docstring of flask.cli.ScriptInfo.load_dotenv_defaults:3
#: d866fa94be9c414fb88dd29f2cda8f32
msgid "``ScriptInfo`` doesn't load anything, this is for reference when doing the load elsewhere during processing."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.ScriptInfo.load_app:1
#: 618a55079155435ca20ef5032076bfd5
msgid "Loads the Flask app (if not yet loaded) and returns it.  Calling this multiple times will just result in the already loaded app to be returned."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.load_dotenv:1
#: ac26a4630124414ca66319c1dda39680
msgid "Load \"dotenv\" files to set environment variables. A given path takes precedence over ``.env``, which takes precedence over ``.flaskenv``. After loading and combining these files, values are only set if the key is not already set in ``os.environ``."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.load_dotenv:6
#: 84e3c9407f14473fb9110a4b502f55c7
msgid "This is a no-op if `python-dotenv`_ is not installed."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.load_dotenv:10
#: 23a626fa43d04ec0b3bf660f4625e45d
msgid "Load the file at this location."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.load_dotenv:11
#: 8a420b591fde402ca2155695840b2a3b
msgid "Search for and load the default ``.flaskenv`` and ``.env`` files."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.load_dotenv:13
#: 083a4f043abb404f90e0db1ee99cfbc2
msgid "``True`` if at least one env var was loaded."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.load_dotenv:15
#: 8db08d7b845945eaad34985f1b92e37b
msgid "Added the ``load_defaults`` parameter. A given path takes precedence over default files."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.load_dotenv:19
#: d9f17db33eb543ad8c25221f06b1f9f2
msgid "The current directory is not changed to the location of the loaded file."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.load_dotenv:23
#: c45a986cf8ac4db68184e5037c2be8aa
msgid "When loading the env files, set the default encoding to UTF-8."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.load_dotenv:26
#: 6331c9fa3bcb4c118916bb9d355b1ad9
msgid "Returns ``False`` when python-dotenv is not installed, or when the given path isn't a file."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.with_appcontext:1
#: 24673dffb90646f09a87c413d157da05
msgid "Wraps a callback so that it's guaranteed to be executed with the script's application context."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.with_appcontext:4
#: b534b1deeee54b1a96028c588849fe3c
msgid "Custom commands (and their options) registered under ``app.cli`` or ``blueprint.cli`` will always have an app context available, this decorator is not required in that case."
msgstr ""

#: ../../.venv/lib/python3.13/site-packages/flask/cli.py:docstring of flask.cli.with_appcontext:8
#: 790883670eea4540a0677abc88fd844a
msgid "The app context is active for subcommands as well as the decorated callback. The app context is always available to ``app.cli`` command and parameter callbacks."
msgstr ""

#: ../../project/docs/api.rst:712
#: 00be8d3ba59140b987d7c9d5d2540064
msgid "Marks a function so that an instance of :class:`ScriptInfo` is passed as first argument to the click callback."
msgstr ""

#: ../../docstring of flask.cli.run_command:1
#: 36811e02c7ea4e5098c5c9a952b17ffa
msgid "Run a local development server."
msgstr ""

#: ../../docstring of flask.cli.run_command:3
#: b28320bdbda341daba94a01c51af3ba4
msgid "This server is for development purposes only. It does not provide the stability, security, or performance of production WSGI servers."
msgstr ""

#: ../../docstring of flask.cli.run_command:6
#: 687258f53d8d47dcb303b032bd1601cb
msgid "The reloader and debugger are enabled by default with the '--debug' option."
msgstr ""

#: ../../docstring of flask.cli.shell_command:1
#: 75dc59932231493e967c3f9a603037ec
msgid "Run an interactive Python shell in the context of a given Flask application.  The application will populate the default namespace of this shell according to its configuration."
msgstr ""

#: ../../docstring of flask.cli.shell_command:5
#: 9b1f7f5ac255437f960353ac28e7cc7f
msgid "This is useful for executing small snippets of management code without having to manually configure the application."
msgstr ""
