# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-20 19:31-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: zh_CN <withlihui@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../project/docs/server.rst:4 f05ac35ac0ac407d8f6beed1e933bd8d
msgid "Development Server"
msgstr ""

#: ../../project/docs/server.rst:6 f4f11b6cddb746969084910b0df7a9fd
msgid ""
"Flask provides a ``run`` command to run the application with a "
"development server. In debug mode, this server provides an interactive "
"debugger and will reload when code is changed."
msgstr ""

#: ../../project/docs/server.rst:12 a6621bd025ae435c884a9e5e07782cc3
msgid ""
"Do not use the development server when deploying to production. It is "
"intended for use only during local development. It is not designed to be "
"particularly efficient, stable, or secure."
msgstr ""

#: ../../project/docs/server.rst:16 1407b26eee584557b2291c6768b67228
msgid "See :doc:`/deploying/index` for deployment options."
msgstr ""

#: ../../project/docs/server.rst:19 f75ea6385ba34af8a56bda10278ed224
msgid "Command Line"
msgstr ""

#: ../../project/docs/server.rst:21 4fa1f0019113497a88162b294bddcbe8
msgid ""
"The ``flask run`` CLI command is the recommended way to run the "
"development server. Use the ``--app`` option to point to your "
"application, and the ``--debug`` option to enable debug mode."
msgstr ""

#: ../../project/docs/server.rst:29 d909f8296d8f46f4b533a125433c4e54
msgid ""
"This enables debug mode, including the interactive debugger and reloader,"
" and then starts the server on http://localhost:5000/. Use ``flask run "
"--help`` to see the available options, and :doc:`/cli` for detailed "
"instructions about configuring and using the CLI."
msgstr ""

#: ../../project/docs/server.rst:38 8c74ded26de7426b99d37490812b1c44
msgid "Address already in use"
msgstr ""

#: ../../project/docs/server.rst:40 4b4f524dd89945e6968b99eb0ee07ccd
msgid ""
"If another program is already using port 5000, you'll see an ``OSError`` "
"when the server tries to start. It may have one of the following "
"messages:"
msgstr ""

#: ../../project/docs/server.rst:44 09dff5800f6a4b599186e6300ae4e2fd
msgid "``OSError: [Errno 98] Address already in use``"
msgstr ""

#: ../../project/docs/server.rst:45 930a1b7c668c4e488a4b604454fd0b59
msgid ""
"``OSError: [WinError 10013] An attempt was made to access a socket in a "
"way forbidden by its access permissions``"
msgstr ""

#: ../../project/docs/server.rst:48 733772a1bde844449ada775f0adfc1e0
msgid ""
"Either identify and stop the other program, or use ``flask run --port "
"5001`` to pick a different port."
msgstr ""

#: ../../project/docs/server.rst:51 b6a1c0dab52d49edb5e088e994ffd164
msgid ""
"You can use ``netstat`` or ``lsof`` to identify what process id is using "
"a port, then use other operating system tools stop that process. The "
"following example shows that process id 6847 is using port 5000."
msgstr ""

#: ../../project/docs/server.rst:57 a763a1219b4743288bccad60ea394e11
msgid "``netstat`` (Linux)"
msgstr ""

#: ../../project/docs/server.rst:64 681fbe7ec4ce47b1bfa90295c6ac502b
msgid "``lsof`` (macOS / Linux)"
msgstr ""

#: ../../project/docs/server.rst:71 bf493d7fbd774bc5b0bef0cebf9225aa
msgid "``netstat`` (Windows)"
msgstr ""

#: ../../project/docs/server.rst:78 938669ff0a844074a85f3efdb8ab8fba
msgid ""
"macOS Monterey and later automatically starts a service that uses port "
"5000. You can choose to disable this service instead of using a different"
" port by searching for \"AirPlay Receiver\" in System Preferences and "
"toggling it off."
msgstr ""

#: ../../project/docs/server.rst:84 8835989af24d4b40a81805ee5e61e5ec
msgid "Deferred Errors on Reload"
msgstr ""

#: ../../project/docs/server.rst:86 6e6ead56ce6d42ef8e31676367d140ad
msgid ""
"When using the ``flask run`` command with the reloader, the server will "
"continue to run even if you introduce syntax errors or other "
"initialization errors into the code. Accessing the site will show the "
"interactive debugger for the error, rather than crashing the server."
msgstr ""

#: ../../project/docs/server.rst:91 bbc435e0e67b47e9bb5a1ae4982332bd
msgid ""
"If a syntax error is already present when calling ``flask run``, it will "
"fail immediately and show the traceback rather than waiting until the "
"site is accessed. This is intended to make errors more visible initially "
"while still allowing the server to handle errors on reload."
msgstr ""

#: ../../project/docs/server.rst:98 541315763aab408f93e5e408269051cb
msgid "In Code"
msgstr ""

#: ../../project/docs/server.rst:100 e3bf36522f3b4b59aa94c4372d794001
msgid ""
"The development server can also be started from Python with the "
":meth:`Flask.run` method. This method takes arguments similar to the CLI "
"options to control the server. The main difference from the CLI command "
"is that the server will crash if there are errors when reloading. "
"``debug=True`` can be passed to enable debug mode."
msgstr ""

#: ../../project/docs/server.rst:105 aace44b5e4f04da096aabe6af3770683
msgid ""
"Place the call in a main block, otherwise it will interfere when trying "
"to import and run the application with a production server later."
msgstr ""

#~ msgid ""
#~ "Flask provides a ``run`` command to "
#~ "run the application with a development"
#~ " server. In development mode, this "
#~ "server provides an interactive debugger "
#~ "and will reload when code is "
#~ "changed."
#~ msgstr ""

#~ msgid ""
#~ "The ``flask run`` command line script"
#~ " is the recommended way to run "
#~ "the development server. It requires "
#~ "setting the ``FLASK_APP`` environment variable"
#~ " to point to your application, and"
#~ " ``FLASK_ENV=development`` to fully enable "
#~ "development mode."
#~ msgstr ""

#~ msgid "Bash"
#~ msgstr ""

#~ msgid "Fish"
#~ msgstr ""

#~ msgid "CMD"
#~ msgstr ""

#~ msgid "Powershell"
#~ msgstr ""

#~ msgid ""
#~ "This enables the development environment, "
#~ "including the interactive debugger and "
#~ "reloader, and then starts the server "
#~ "on http://localhost:5000/. Use ``flask run "
#~ "--help`` to see the available options,"
#~ " and  :doc:`/cli` for detailed instructions"
#~ " about configuring and using the CLI."
#~ msgstr ""

#~ msgid ""
#~ "Prior to Flask 1.0 the ``FLASK_ENV`` "
#~ "environment variable was not supported "
#~ "and you needed to enable debug "
#~ "mode by exporting ``FLASK_DEBUG=1``. This "
#~ "can still be used to control debug"
#~ " mode, but you should prefer setting"
#~ " the development environment as shown "
#~ "above."
#~ msgstr ""

#~ msgid ""
#~ "macOS Monterey and later automatically "
#~ "starts a service that uses port "
#~ "5000. To disable the service, go "
#~ "to System Preferences, Sharing, and "
#~ "disable \"AirPlay Receiver\"."
#~ msgstr ""

#~ msgid "Lazy or Eager Loading"
#~ msgstr ""

#~ msgid ""
#~ "When using the ``flask run`` command "
#~ "with the reloader, the server will "
#~ "continue to run even if you "
#~ "introduce syntax errors or other "
#~ "initialization errors into the code. "
#~ "Accessing the site will show the "
#~ "interactive debugger for the error, "
#~ "rather than crashing the server. This"
#~ " feature is called \"lazy loading\"."
#~ msgstr ""

#~ msgid ""
#~ "To override this behavior and always "
#~ "fail immediately, even on reload, pass"
#~ " the ``--eager-loading`` option. To "
#~ "always keep the server running, even "
#~ "on the initial call, pass ``--lazy-"
#~ "loading``."
#~ msgstr ""

#~ msgid ""
#~ "As an alternative to the ``flask "
#~ "run`` command, the development server "
#~ "can also be started from Python "
#~ "with the :meth:`Flask.run` method. This "
#~ "method takes arguments similar to the"
#~ " CLI options to control the server."
#~ " The main difference from the CLI "
#~ "command is that the server will "
#~ "crash if there are errors when "
#~ "reloading."
#~ msgstr ""

#~ msgid ""
#~ "``debug=True`` can be passed to enable"
#~ " the debugger and reloader, but the"
#~ " ``FLASK_ENV=development`` environment variable "
#~ "is still required to fully enable "
#~ "development mode."
#~ msgstr ""

