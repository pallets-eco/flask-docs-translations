# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# Grey Li <withlihui@gmail.com>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-20 19:31-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Grey Li <withlihui@gmail.com>\n"
"Language-Team: zh_CN <withlihui@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../project/docs/tutorial/install.rst:2 1901b4d9c96543ff90db0fa9ca78a0d3
msgid "Make the Project Installable"
msgstr "让项目可安装"

#: ../../project/docs/tutorial/install.rst:4 ebcdff9e84c4402f869b24fb37c9ae5b
#, fuzzy
msgid ""
"Making your project installable means that you can build a *wheel* file "
"and install that in another environment, just like you installed Flask in"
" your project's environment. This makes deploying your project the same "
"as installing any other library, so you're using all the standard Python "
"tools to manage everything."
msgstr ""
"让你的项目可以被安装意味着你可以构建一个 *发行* 文件并在另一个环境安装它，就像你在项目环境安装 Flask "
"一样。这使得部署你的项目和安装其他任何库没有区别，你就可以使用所有标准的 Python 工具去管理一切。"

#: ../../project/docs/tutorial/install.rst:9 b4b9e50184964b28bb5c45f7704bc457
msgid ""
"Installing also comes with other benefits that might not be obvious from "
"the tutorial or as a new Python user, including:"
msgstr "安装项目也会带来一些也许在这个教程中或对于 Python 新用户来说并不明显的其他好处，这包括："

#: ../../project/docs/tutorial/install.rst:12 541eebff374843b091c305e1cedff64e
msgid ""
"Currently, Python and Flask understand how to use the ``flaskr`` package "
"only because you're running from your project's directory. Installing "
"means you can import it no matter where you run from."
msgstr "目前，Python 和 Flask 理解如何使用 ``flaskr`` 包仅仅因为你是从项目文件夹运行它。安装则意味着不论从哪里运行都可以导入它。"

#: ../../project/docs/tutorial/install.rst:16 cab0369479f040fb999a3231e47368ae
msgid ""
"You can manage your project's dependencies just like other packages do, "
"so ``pip install yourproject.whl`` installs them."
msgstr "你可以像其他包一样管理项目依赖，如此便可以执行 ``pip install yourproject.whl`` 安装它们。"

#: ../../project/docs/tutorial/install.rst:19 8e75c3c5f0ba464c87a48b7bcc769c25
msgid ""
"Test tools can isolate your test environment from your development "
"environment."
msgstr "测试工具可以将测试环境与你的开发环境隔离开来。"

#: ../../project/docs/tutorial/install.rst:23 5f8bb2e29b9143e18640ba723f3a8f16
msgid ""
"This is being introduced late in the tutorial, but in your future "
"projects you should always start with this."
msgstr "这一章被放到了教程的后面，但是你未来的项目应该始终从这一步开始。"

#: ../../project/docs/tutorial/install.rst:28 723e8a4051044429b234dea966e68fbd
msgid "Describe the Project"
msgstr "描述项目"

#: ../../project/docs/tutorial/install.rst:30 efcb1e2c2be943229aedc7b645cd3f41
#, fuzzy
msgid "The ``pyproject.toml`` file describes your project and how to build it."
msgstr "``setup.py`` 文件描述了项目和项目相关的文件。"

#: ../../project/docs/tutorial/install.rst:32 2ab32e91159b460993dee5fcb07d3f9e
msgid "``pyproject.toml``"
msgstr ""

#: ../../project/docs/tutorial/install.rst:47 19b9aaceda5d4dada2031dd68bd9242c
#, fuzzy
msgid ""
"See the official `Packaging tutorial <packaging tutorial_>`_ for more "
"explanation of the files and options used."
msgstr "参阅 `官方打包教程`_ 了解对所使用的文件和选项的更多解释。"

#: ../../project/docs/tutorial/install.rst:54 abcedc200b834e55a8ed51069672b962
msgid "Install the Project"
msgstr "安装项目"

#: ../../project/docs/tutorial/install.rst:56 6dd31cc1d4134ddbb8f588ed1234a0f1
msgid "Use ``pip`` to install your project in the virtual environment."
msgstr "使用 ``pip`` 在虚拟环境中安装你的项目。"

#: ../../project/docs/tutorial/install.rst:62 0c0d22cdd6394233969bcd7d28244b2e
#, fuzzy
msgid ""
"This tells pip to find ``pyproject.toml`` in the current directory and "
"install the project in *editable* or *development* mode. Editable mode "
"means that as you make changes to your local code, you'll only need to "
"re-install if you change the metadata about the project, such as its "
"dependencies."
msgstr ""
"这告诉 pip 在当前目录找到 ``setup.py`` 并以 *可编辑* 或 *开发* "
"模式安装它。可编辑模式意味着当你对本地代码做出改动时，只有改变了 setup.py 文件中的关于项目的元信息（比如它的依赖），才需要重新安装项目。"

#: ../../project/docs/tutorial/install.rst:67 729fe23045b246fc9ae1d853aade5118
msgid "You can observe that the project is now installed with ``pip list``."
msgstr "项目现在已经被安装了，你可以在 ``pip list`` 命令的输出里找到它。"

#: ../../project/docs/tutorial/install.rst:84 6d02557fdef64a67b14e611f65b555fc
#, fuzzy
msgid ""
"Nothing changes from how you've been running your project so far. "
"``--app`` is still set to ``flaskr`` and ``flask run`` still runs the "
"application, but you can call it from anywhere, not just the ``flask-"
"tutorial`` directory."
msgstr ""
"目前为止，运行项目的方式并没有任何改变。``FLASK_APP`` 仍然被设为 ``flaskr``，``flask run`` "
"仍然会运行应用，不过现在你可以在任意位置运行它，而不仅仅是 ``flask-tutorial`` 目录。"

#: ../../project/docs/tutorial/install.rst:89 c6292f5778264841bf74f3b31955bb70
msgid "Continue to :doc:`tests`."
msgstr "继续阅读 :doc:`tests`。"

#~ msgid "``setup.py``"
#~ msgstr "``setup.py``"

#~ msgid ""
#~ "``packages`` tells Python what package "
#~ "directories (and the Python files they"
#~ " contain) to include. ``find_packages()`` "
#~ "finds these directories automatically so "
#~ "you don't have to type them out."
#~ " To include other files, such as "
#~ "the static and templates directories, "
#~ "``include_package_data`` is set. Python needs"
#~ " another file named ``MANIFEST.in`` to "
#~ "tell what this other data is."
#~ msgstr ""
#~ "``packages`` 告诉 Python 包括哪些包目录（以及它们包含的 Python"
#~ " 文件）。``find_packages()`` "
#~ "会自动找到这些目录，所以你不用逐个写出。要加入其他文件，比如静态文件和模板目录，就要设置 "
#~ "``include_package_data``。Python需要另外一个叫做 ``MANIFEST.in`` "
#~ "的文件来指明具体的其他文件是哪些。"

#~ msgid "``MANIFEST.in``"
#~ msgstr "``MANIFEST.in``"

#~ msgid ""
#~ "This tells Python to copy everything "
#~ "in the ``static`` and ``templates`` "
#~ "directories, and the ``schema.sql`` file, "
#~ "but to exclude all bytecode files."
#~ msgstr ""
#~ "这会告诉 Python 复制 ``static`` 和 "
#~ "``templates`` 目录下的所有文件以及 ``schema.sql`` "
#~ "文件，但是排除所有字节码（bytecode）文件。"

