# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# Jiahua Wang <wjh180909@gmail.com>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-20 19:31-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: zh_CN <withlihui@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../project/docs/deploying/mod_wsgi.rst:2 cc528bcd6d1b41c9ba22ffd29f578635
#, fuzzy
msgid "mod_wsgi"
msgstr "mod_wsgi (Apache)"

#: ../../project/docs/deploying/mod_wsgi.rst:4 8ef54472be9a4e9bb5db0768aaedda88
msgid ""
"`mod_wsgi`_ is a WSGI server integrated with the `Apache httpd`_ server. "
"The modern `mod_wsgi-express`_ command makes it easy to configure and "
"start the server without needing to write Apache httpd configuration."
msgstr ""

#: ../../project/docs/deploying/mod_wsgi.rst:8 cffd51f2ce1f4a9296f04188e2b11182
msgid "Tightly integrated with Apache httpd."
msgstr ""

#: ../../project/docs/deploying/mod_wsgi.rst:9 b9145535e6684647862eef24f5bc00e4
msgid "Supports Windows directly."
msgstr ""

#: ../../project/docs/deploying/mod_wsgi.rst:10
#: 5ca8e5f04aaa4650826e1444dfe67fa6
msgid "Requires a compiler and the Apache development headers to install."
msgstr ""

#: ../../project/docs/deploying/mod_wsgi.rst:11
#: e0c6525caccd4f4ab38ae3fb4cedc3d2
msgid "Does not require a reverse proxy setup."
msgstr ""

#: ../../project/docs/deploying/mod_wsgi.rst:13
#: 89860ca5523f47ddb9df3916314e2e22
msgid ""
"This page outlines the basics of running mod_wsgi-express, not the more "
"complex installation and configuration with httpd. Be sure to read the "
"`mod_wsgi-express`_, `mod_wsgi`_, and `Apache httpd`_ documentation to "
"understand what features are available."
msgstr ""

#: ../../project/docs/deploying/mod_wsgi.rst:24
#: 5e5ec2311cb34746bd6353539a3cdd1b
#, fuzzy
msgid "Installing"
msgstr "安装 `mod_wsgi`"

#: ../../project/docs/deploying/mod_wsgi.rst:26
#: 9b19440d7251413e9d6102df71eba2c1
msgid ""
"Installing mod_wsgi requires a compiler and the Apache server and "
"development headers installed. You will get an error if they are not. How"
" to install them depends on the OS and package manager that you use."
msgstr ""

#: ../../project/docs/deploying/mod_wsgi.rst:30
#: becc883b30994633a3e46cba2dd6f8f7
msgid "Create a virtualenv, install your application, then install ``mod_wsgi``."
msgstr ""

#: ../../project/docs/deploying/mod_wsgi.rst:43
#: 7538d89d2bdc42a8b7a342f58e1bda0b
msgid "Running"
msgstr ""

#: ../../project/docs/deploying/mod_wsgi.rst:45
#: d2483f40c226449b99e15cf54edd095b
msgid ""
"The only argument to ``mod_wsgi-express`` specifies a script containing "
"your Flask application, which must be called ``application``. You can "
"write a small script to import your app with this name, or to create it "
"if using the app factory pattern."
msgstr ""

#: ../../project/docs/deploying/mod_wsgi.rst:50
#: ../../project/docs/deploying/mod_wsgi.rst:57
#: 6c636c0cb2cf494d8a9ab71fd108f53e c6171dae97314600b3574b6a76997a53
msgid "``wsgi.py``"
msgstr ""

#: ../../project/docs/deploying/mod_wsgi.rst:64
#: dd8ae4d020b445e7b6363705ca835018
msgid "Now run the ``mod_wsgi-express start-server`` command."
msgstr ""

#: ../../project/docs/deploying/mod_wsgi.rst:70
#: f7dc9084442c4866a49f06ec59497859
msgid ""
"The ``--processes`` option specifies the number of worker processes to "
"run; a starting value could be ``CPU * 2``."
msgstr ""

#: ../../project/docs/deploying/mod_wsgi.rst:73
#: 625a23acfbf448569989147bccff9f51
msgid ""
"Logs for each request aren't show in the terminal. If an error occurs, "
"its information is written to the error log file shown when starting the "
"server."
msgstr ""

#: ../../project/docs/deploying/mod_wsgi.rst:79
#: fb328056563442c7ba0a6b037385bc91
msgid "Binding Externally"
msgstr ""

#: ../../project/docs/deploying/mod_wsgi.rst:81
#: 527f5189b4d24651954b8eec4e5cae3e
msgid ""
"Unlike the other WSGI servers in these docs, mod_wsgi can be run as root "
"to bind to privileged ports like 80 and 443. However, it must be "
"configured to drop permissions to a different user and group for the "
"worker processes."
msgstr ""

#: ../../project/docs/deploying/mod_wsgi.rst:86
#: d96425ca8be24fe1ab0c09456f000732
msgid ""
"For example, if you created a ``hello`` user and group, you should "
"install your virtualenv and application as that user, then tell mod_wsgi "
"to drop to that user after starting."
msgstr ""

#~ msgid "If you are using the `Apache`_ webserver, consider using `mod_wsgi`_."
#~ msgstr "如果你使用的是 `Apache`_ 网络服务器 ，可以考虑使用 `mod_wsgi`_ 。"

#~ msgid "Watch Out"
#~ msgstr "注意"

#~ msgid ""
#~ "Please make sure in advance that "
#~ "any ``app.run()`` calls you might have"
#~ " in your application file are inside"
#~ " an ``if __name__ == '__main__':`` "
#~ "block or moved to a separate file."
#~ "  Just make sure it's not called "
#~ "because this will always start a "
#~ "local WSGI server which we do not"
#~ " want if we deploy that application"
#~ " to mod_wsgi."
#~ msgstr ""
#~ "请提前确认把 ``app.run()`` 放在 ``if __name__ =="
#~ " '__main__':`` 代码块中或者放在单独的文件中，这样可以确保它不会被调用。因为每调用一次就会开启一个本地的"
#~ " WSGI 服务器，如果我们将应用部署到 mod_wsgi，并不需要开启本地服务器。"

#~ msgid ""
#~ "If you don't have `mod_wsgi` installed"
#~ " yet you have to either install "
#~ "it using a package manager or "
#~ "compile it yourself.  The mod_wsgi "
#~ "`installation instructions`_ cover source "
#~ "installations on UNIX systems."
#~ msgstr ""
#~ "如果你还没有安装 `mod_wsgi`，你可以使用包管理器安装或者自行编译。在 UNIX "
#~ "系统中如何以源代码形式安装 mod_wsgi 请参考 `安装操作`_。"

#~ msgid ""
#~ "If you are using Ubuntu/Debian you "
#~ "can apt-get it and activate it "
#~ "as follows:"
#~ msgstr "如果你使用的是 Ubuntu/Debian 系统，你可以使用如下的 apt-get 命令来安装并启用："

#~ msgid ""
#~ "If you are using a yum based "
#~ "distribution (Fedora, OpenSUSE, etc..) you "
#~ "can install it as follows:"
#~ msgstr "如果你使用的是基于 yum 的发行版（Fedora、OpenSUSE 等）的系统，你可以这样安装："

#~ msgid ""
#~ "On FreeBSD install `mod_wsgi` by "
#~ "compiling the `www/mod_wsgi` port or by"
#~ " using pkg_add:"
#~ msgstr "在 FreeBSD 系统中，可以通过编译 `www/mod_wsgi` 或是使用 pkg_add 来安装 `mod_wsgi`："

#~ msgid ""
#~ "If you are using pkgsrc you can"
#~ " install `mod_wsgi` by compiling the "
#~ "`www/ap2-wsgi` package."
#~ msgstr "如果你使用 pkgsrc，可以通过编译 `www/ap2-wsgi` 包来安装 `mod_wsgi`。"

#~ msgid ""
#~ "If you encounter segfaulting child "
#~ "processes after the first apache reload"
#~ " you can safely ignore them.  Just"
#~ " restart the server."
#~ msgstr "如果你在第一次 apache 重新加载后遇到子进程段错误的话，不必理会，重启服务器即可。"

#~ msgid "Creating a `.wsgi` file"
#~ msgstr "创建一个 `.wsgi` 文件"

#~ msgid ""
#~ "To run your application you need a"
#~ " :file:`yourapplication.wsgi` file. This file "
#~ "contains the code `mod_wsgi` is "
#~ "executing on startup to get the "
#~ "application object.  The object called "
#~ "`application` in that file is then "
#~ "used as application."
#~ msgstr ""
#~ "你需要一个 :file:`yourapplication.wsgi` 文件才能启动你的应用。该文件包含 "
#~ "`mod_wsgi` 启动时所需要运行的代码，通过代码可以获取到应用对象。文件中的 `application`"
#~ " 对象就是之后使用到的应用。"

#~ msgid "For most applications the following file should be sufficient::"
#~ msgstr "对大多数应用来说，文件中包含以下内容就足够了："

#~ msgid ""
#~ "If a factory function is used in"
#~ " a :file:`__init__.py` file, then the "
#~ "function should be imported::"
#~ msgstr "如果你在 :file:`__init__.py` 文件中使用到了工厂函数，那么该函数应当被导入："

#~ msgid ""
#~ "If you don't have a factory "
#~ "function for application creation but a"
#~ " singleton instance you can directly "
#~ "import that one as `application`."
#~ msgstr "如果你没有一个用来创建应用的工厂函数，而是一个单例，那么可以直接把它导入为 `application`。"

#~ msgid ""
#~ "Store that file somewhere that you "
#~ "will find it again (e.g.: "
#~ ":file:`/var/www/yourapplication`) and make sure "
#~ "that `yourapplication` and all the "
#~ "libraries that are in use are on"
#~ " the python load path.  If you "
#~ "don't want to install it system "
#~ "wide consider using a `virtual python`_"
#~ " instance.  Keep in mind that you "
#~ "will have to actually install your "
#~ "application into the virtualenv as well."
#~ "  Alternatively there is the option "
#~ "to just patch the path in the "
#~ "``.wsgi`` file before the import::"
#~ msgstr ""
#~ "把文件放在以后能找得到的地方（比如：:file:`/var/www/yourapplication`），并确保 "
#~ "`yourapplication` 和所有使用到的库都位于 Python "
#~ "加载路径中。如果你不想在系统环境中安装，你可以考虑使用 `虚拟 Python`_ "
#~ "实例。请记住，这时你也需要将你的应用程序安装到虚拟环境中。另外一个选项是在 ``.wsgi`` "
#~ "文件中的导入语句前加入路径："

#~ msgid "Configuring Apache"
#~ msgstr "配置 Apache"

#~ msgid ""
#~ "The last thing you have to do "
#~ "is to create an Apache configuration "
#~ "file for your application.  In this "
#~ "example we are telling `mod_wsgi` to "
#~ "execute the application under a "
#~ "different user for security reasons:"
#~ msgstr "最后，你要为你的应用创建一个 Apache 配置文件。在下面的例子中，出于安全考虑，我们让 `mod_wsgi` 用另一个用户执行应用程序："

#~ msgid ""
#~ "Note: WSGIDaemonProcess isn't implemented in"
#~ " Windows and Apache will refuse to"
#~ " run with the above configuration. On"
#~ " a Windows system, eliminate those "
#~ "lines:"
#~ msgstr ""
#~ "注意：WSGIDaemonProcess 未在 Windows 中实现，并且 Apache"
#~ " 将拒绝以上述配置运行。在 Windows 中，请删除这些行："

#~ msgid ""
#~ "Note: There have been some changes "
#~ "in access control configuration for "
#~ "`Apache 2.4`_."
#~ msgstr "注意：`Apache 2.4`_ 的访问控制配置发生了一些改变。"

#~ msgid ""
#~ "Most notably, the syntax for directory"
#~ " permissions has changed from httpd "
#~ "2.2"
#~ msgstr "最值得注意的是，目录权限的语法已经从 httpd 2.2"

#~ msgid "to httpd 2.4 syntax"
#~ msgstr "变更为 httpd 2.4 的语法"

#~ msgid "For more information consult the `mod_wsgi documentation`_."
#~ msgstr "想要了解更多信息，请参考 `mod_wsgi 文档`_。"

#~ msgid "Troubleshooting"
#~ msgstr "故障排除"

#~ msgid "If your application does not run, follow this guide to troubleshoot:"
#~ msgstr "如果你的应用没有启动，请按照以下指导排除故障："

#~ msgid ""
#~ "**Problem:** application does not run, "
#~ "errorlog shows SystemExit ignored"
#~ msgstr " **问题：** 应用无法启动，错误日志显示 SystemExit ignored"

#~ msgid ""
#~ "You have an ``app.run()`` call in "
#~ "your application file that is not "
#~ "guarded by an ``if __name__ == "
#~ "'__main__':`` condition.  Either remove that"
#~ " :meth:`~flask.Flask.run` call from the "
#~ "file and move it into a separate"
#~ " :file:`run.py` file or put it into"
#~ " such an if block."
#~ msgstr ""
#~ "你的应用文件中有 ``app.run()`` 调用，但并未放入 ``if __name__"
#~ " == '__main__':``。要么把 :meth:`~flask.Flask.run` "
#~ "的调用从文件移除，放入一个单独的 :file:`run.py` 文件中，否则请将它让入 if "
#~ "块中。"

#~ msgid "**Problem:** application gives permission errors"
#~ msgstr " **问题：** 应用抛出权限错误"

#~ msgid ""
#~ "Probably caused by your application "
#~ "running as the wrong user.  Make "
#~ "sure the folders the application needs"
#~ " access to have the proper privileges"
#~ " set and the application runs as "
#~ "the correct user (``user`` and ``group``"
#~ " parameter to the `WSGIDaemonProcess` "
#~ "directive)"
#~ msgstr ""
#~ "有可能是使用了错误的用户去启动应用。请检查你的用户及其所在的组（`WSGIDaemonProcess` 的 "
#~ "``user`` 和 ``group`` 参数）是否有权限访问应用所在的文件夹"

#~ msgid "**Problem:** application dies with an error on print"
#~ msgstr "**问题：** 应用在打印时抛出错误并终止"

#~ msgid ""
#~ "Keep in mind that mod_wsgi disallows "
#~ "doing anything with :data:`sys.stdout` and "
#~ ":data:`sys.stderr`.  You can disable this "
#~ "protection from the config by setting"
#~ " the `WSGIRestrictStdout` to ``off``:"
#~ msgstr ""
#~ "请记住 mod_wsgi 不允许使用 :data:`sys.stdout` 以及 "
#~ ":data:`sys.stderr`。你可以把 `WSGIRestrictStdout` 设置为 "
#~ "``off`` 来关闭这个保护机制："

#~ msgid ""
#~ "Alternatively you can also replace the"
#~ " standard out in the .wsgi file "
#~ "with a different stream::"
#~ msgstr "或者你也可以在 .wsgi 文件中使用不同的流（stream）替代标准输出："

#~ msgid "**Problem:** accessing resources gives IO errors"
#~ msgstr "**问题：** 访问资源时 IO 错误"

#~ msgid ""
#~ "Your application probably is a single"
#~ " .py file you symlinked into the "
#~ "site-packages folder.  Please be aware"
#~ " that this does not work, instead "
#~ "you either have to put the folder"
#~ " into the pythonpath the file is "
#~ "stored in, or convert your application"
#~ " into a package."
#~ msgstr ""
#~ "你的应用可能是一个单独的 .py 文件，并且你把它软连接到了 site-packages"
#~ " 文件夹中。这样是不起作用的，你必须把文件夹放入文件所在的 Python 路径中，或者把你的应用转换成包。"

#~ msgid ""
#~ "The reason for this is that for"
#~ " non-installed packages, the module "
#~ "filename is used to locate the "
#~ "resources and for symlinks the wrong "
#~ "filename is picked up."
#~ msgstr "产生这种错误的原因是对于非安装包来说，模块的文件名用于定位资源，如果使用软连接的话就会定位到错误的文件名。"

#~ msgid "Support for Automatic Reloading"
#~ msgstr "支持自动重载"

#~ msgid ""
#~ "To help deployment tools you can "
#~ "activate support for automatic reloading.  "
#~ "Whenever something changes the ``.wsgi`` "
#~ "file, `mod_wsgi` will reload all the "
#~ "daemon processes for us."
#~ msgstr "为了辅助部署工具，你可以激活自动重载。这样，一旦 ``.wsgi`` 文件有所变动，`mod_wsgi` 就会自动重新加载所有守护进程。"

#~ msgid "For that, just add the following directive to your `Directory` section:"
#~ msgstr "在 `Directory` 这一节中加入以下指令即可实现自动重载："

#~ msgid "Working with Virtual Environments"
#~ msgstr "在虚拟环境中工作"

#~ msgid ""
#~ "Virtual environments have the advantage "
#~ "that they never install the required "
#~ "dependencies system wide so you have "
#~ "a better control over what is used"
#~ " where.  If you want to use a"
#~ " virtual environment with mod_wsgi you "
#~ "have to modify your ``.wsgi`` file "
#~ "slightly."
#~ msgstr ""
#~ "使用虚拟环境的优点是不必在系统范围安装应用所需的依赖，这样就可以更好地控制哪里需要什么。如果要在虚拟环境下使用 "
#~ "mod_wsgi，那么我们要对 ``.wsgi`` 文件略作改变。"

#~ msgid "Add the following lines to the top of your ``.wsgi`` file::"
#~ msgstr "在你的 ``.wsgi`` 文件顶部加入下面这行："

#~ msgid ""
#~ "This sets up the load paths "
#~ "according to the settings of the "
#~ "virtual environment.  Keep in mind that"
#~ " the path has to be absolute."
#~ msgstr "这样设置，就会根据虚拟环境的设置加载路径。请记住，必须是绝对路径。"

