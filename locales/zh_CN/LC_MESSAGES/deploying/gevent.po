# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 3.1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-20 19:31-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../project/docs/deploying/gevent.rst:2 3f3c9adb92e849a497d2f4779a6f9a20
msgid "gevent"
msgstr ""

#: ../../project/docs/deploying/gevent.rst:4 77aa4cd9e7a54f158f7d6a176a34ae47
msgid ""
"Prefer using :doc:`gunicorn` or :doc:`uwsgi` with gevent workers rather "
"than using `gevent`_ directly. Gunicorn and uWSGI provide much more "
"configurable and production-tested servers."
msgstr ""

#: ../../project/docs/deploying/gevent.rst:8 1523185648f84cbf923e877088cf5e74
msgid ""
"`gevent`_ allows writing asynchronous, coroutine-based code that looks "
"like standard synchronous Python. It uses `greenlet`_ to enable task "
"switching without writing ``async/await`` or using ``asyncio``."
msgstr ""

#: ../../project/docs/deploying/gevent.rst:12 6b0ebeb7e5d64f2cb27317dcc7e6ab0e
msgid ""
":doc:`eventlet` is another library that does the same thing. Certain "
"dependencies you have, or other considerations, may affect which of the "
"two you choose to use."
msgstr ""

#: ../../project/docs/deploying/gevent.rst:16 45e28f71476a47eca441f8944da03a5e
msgid ""
"gevent provides a WSGI server that can handle many connections at once "
"instead of one per worker process. You must actually use gevent in your "
"own code to see any benefit to using the server."
msgstr ""

#: ../../project/docs/deploying/gevent.rst:25 285a1d676b5347268c17d4a20a4a63a4
msgid "Installing"
msgstr ""

#: ../../project/docs/deploying/gevent.rst:27 9066dbf798984e28bf193c4aff2f8526
msgid ""
"When using gevent, greenlet>=1.0 is required, otherwise context locals "
"such as ``request`` will not work as expected. When using PyPy, "
"PyPy>=7.3.7 is required."
msgstr ""

#: ../../project/docs/deploying/gevent.rst:31 a459e151bd274349b6db7327cdab97ac
msgid "Create a virtualenv, install your application, then install ``gevent``."
msgstr ""

#: ../../project/docs/deploying/gevent.rst:43 f16a7b3c6010462993f48b8ee9ed89f2
msgid "Running"
msgstr ""

#: ../../project/docs/deploying/gevent.rst:45 3e94b84ed4514967abf8aa400f252d3b
msgid ""
"To use gevent to serve your application, write a script that imports its "
"``WSGIServer``, as well as your app or app factory."
msgstr ""

#: ../../project/docs/deploying/gevent.rst:48 3364ec26b3b14fe9bc929a0d4451dd9e
msgid "``wsgi.py``"
msgstr ""

#: ../../project/docs/deploying/gevent.rst:62 03267eed1f3a450486c95728c0f9dcec
msgid "No output is shown when the server starts."
msgstr ""

#: ../../project/docs/deploying/gevent.rst:66 c83fd808cac64acda950fae95ed1293f
msgid "Binding Externally"
msgstr ""

#: ../../project/docs/deploying/gevent.rst:68 1ccbb11ae9e64cefbe6b40499ad986f3
msgid ""
"gevent should not be run as root because it would cause your application "
"code to run as root, which is not secure. However, this means it will not"
" be possible to bind to port 80 or 443. Instead, a reverse proxy such as "
":doc:`nginx` or :doc:`apache-httpd` should be used in front of gevent."
msgstr ""

#: ../../project/docs/deploying/gevent.rst:74 cf00273db3e3491db42729d24320c532
msgid ""
"You can bind to all external IPs on a non-privileged port by using "
"``0.0.0.0`` in the server arguments shown in the previous section. Don't "
"do this when using a reverse proxy setup, otherwise it will be possible "
"to bypass the proxy."
msgstr ""

#: ../../project/docs/deploying/gevent.rst:79 a877f07d204f41acb8e8e1ceecbd5c1e
msgid ""
"``0.0.0.0`` is not a valid address to navigate to, you'd use a specific "
"IP address in your browser."
msgstr ""

